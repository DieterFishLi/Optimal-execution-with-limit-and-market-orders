(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    500421,       9494]
NotebookOptionsPosition[    492168,       9365]
NotebookOutlinePosition[    492692,       9384]
CellTagsIndexPosition[    492649,       9381]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["params", "Subsubsection",
 InitializationCell->True,
 CellChangeTimes->{{3.820295502828109*^9, 
  3.820295536624569*^9}},ExpressionUUID->"d1878e84-1f9f-4289-ada4-\
aa99c4a85415"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalDelta]", "=", 
   RowBox[{"5", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "3"}]]}]}], ";", "0.005", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Kappa]", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CurlyEpsilon]", "=", "0.005"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalUpsilon]", "=", 
   RowBox[{"\[CapitalDelta]", "+", "\[CurlyEpsilon]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tilt\[Lambda]", "=", 
   RowBox[{"50", "/", "300"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", "=", 
    RowBox[{"N", "[", 
     RowBox[{"50", "/", "300"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalNu]", "=", "10"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Total", " ", "Amt"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T", "=", "300"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Total", " ", "Time"}], "*)"}]}], "\[IndentingNewLine]"}], "Input",\

 CellChangeTimes->{{3.820295541035701*^9, 3.8202955468652687`*^9}, {
   3.8202956018120546`*^9, 3.820295631610648*^9}, {3.820295747355259*^9, 
   3.820295875814393*^9}, {3.8202959067940125`*^9, 3.820295916879328*^9}, {
   3.8202959559068575`*^9, 3.820295960958038*^9}, {3.820296084248725*^9, 
   3.820296141176078*^9}, {3.82029641515465*^9, 3.820296421859203*^9}, {
   3.820315047832728*^9, 3.820315049736869*^9}, {3.8203154474834957`*^9, 
   3.820315450089201*^9}, {3.8205475093713055`*^9, 3.820547518770832*^9}, {
   3.8205501717853928`*^9, 3.820550172735194*^9}, {3.8205514845524006`*^9, 
   3.8205514857231464`*^9}, {3.820614405550973*^9, 3.8206144065789537`*^9}, {
   3.820787626732111*^9, 3.82078768192404*^9}, {3.8208119829068747`*^9, 
   3.8208120205923247`*^9}, 3.820812090653591*^9, {3.8208121247214513`*^9, 
   3.820812131760612*^9}, {3.8208123239427233`*^9, 3.8208123627189875`*^9}, {
   3.820812502077177*^9, 3.8208125030130835`*^9}, {3.8208126065907745`*^9, 
   3.8208126086021347`*^9}, {3.8218298958140554`*^9, 3.821829899453449*^9}, {
   3.8218354660529*^9, 3.8218354858360476`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"fd7716b8-5c23-4640-8cfd-572050ebcce8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Market", " ", "Impact", " ", "Cost"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"c", "[", "q_", "]"}], ":=", 
     RowBox[{"\[Alpha]", "*", "q"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8202959239247*^9, 3.8202959742345223`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"97808107-cdbd-4352-ab49-14b8f2752cd6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Target", " ", "Schedule"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"IS", "[", "t_", "]"}], ":=", 
   RowBox[{"\[CapitalNu]", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"Sinh", "[", 
        RowBox[{"\[Chi]", "*", 
         RowBox[{"(", 
          RowBox[{"T", "-", "t"}], ")"}]}], "]"}], 
       RowBox[{"Sinh", "[", 
        RowBox[{"\[Chi]", "*", "T"}], "]"}]]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8202959767880106`*^9, 3.8202960121886697`*^9}, {
  3.820296072568879*^9, 3.8202960768792458`*^9}, {3.820296114884554*^9, 
  3.820296173279921*^9}, {3.822298170267498*^9, 3.822298173613324*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"ceda9a39-29d5-4b7c-98af-650f0eae9f12"]
}, Open  ]],

Cell[CellGroupData[{

Cell["eqs", "Subsubsection",
 CellChangeTimes->{{3.820296214933948*^9, 
  3.8202962168640213`*^9}},ExpressionUUID->"32508f59-119e-469b-adff-\
333fe6dd1182"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Omega]", "[", 
   RowBox[{"t_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[Kappa]"}], "*", 
     RowBox[{"(", 
      RowBox[{"\[CapitalUpsilon]", "+", 
       RowBox[{"c", "[", 
        RowBox[{"\[CapitalNu]", "-", "q"}], "]"}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"\[CapitalNu]", "-", "q"}], ")"}]}]], "/;", 
   RowBox[{"t", "\[Equal]", "T"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "[", 
   RowBox[{"t_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "\[Kappa]"}], "*", "\[Phi]", "*", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[CapitalNu]", "-", 
          RowBox[{"IS", "[", "u", "]"}]}], ")"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "t", ",", "T"}], "}"}]}], "]"}]}], "]"}], "/;", 
   RowBox[{"q", "\[Equal]", "\[CapitalNu]"}]}]}]}], "Input",
 CellChangeTimes->{{3.820296219283885*^9, 3.820296316668187*^9}, {
  3.820296372719651*^9, 3.820296400865119*^9}, {3.820296440548012*^9, 
  3.820296482241602*^9}, {3.8202984557603755`*^9, 3.8202984915251637`*^9}, {
  3.820812666020969*^9, 3.820812723321659*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"3f0ba9b6-2caf-4dac-853c-5ae08eda1007"],

Cell["\:5c1d\:8bd5\:89e3\:6790\:89e3 \:5efa\:8bae\:544a\:8f9e", "Text",
 CellChangeTimes->{{3.820551581561061*^9, 
  3.8205516039587107`*^9}},ExpressionUUID->"56417d18-eba0-4cef-af2d-\
006ade546ae7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqs", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"t", ",", "q"}], "]"}], ",", "t"}], "]"}], "-", 
      RowBox[{"\[Kappa]", "*", "\[Phi]", "*", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"q", "-", 
          RowBox[{"IS", "[", "t", "]"}]}], ")"}], "2"], 
       RowBox[{"\[Omega]", "[", 
        RowBox[{"t", ",", "q"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "1"}]], "\[Lambda]", " ", 
       RowBox[{"\[Omega]", "[", 
        RowBox[{"t", ",", 
         RowBox[{"q", "+", "1"}]}], "]"}]}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Omega]", "[", 
       RowBox[{"t", ",", "q"}], "]"}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], "*", "\[CapitalUpsilon]"}]], 
       RowBox[{"\[Omega]", "[", 
        RowBox[{"t", ",", 
         RowBox[{"q", "+", "1"}]}], "]"}]}]}], ")"}]}], "==", 
   "0"}]}]], "Input",
 CellChangeTimes->{{3.8202964849247274`*^9, 3.8202967022102494`*^9}, {
  3.82029694356979*^9, 3.820296991900195*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"979e686c-6c05-43f4-9e3d-7d0f20fb8af1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"t", ",", "q"}], "]"}], "-", 
     RowBox[{"0.6065306597126334`", " ", 
      RowBox[{"\[Omega]", "[", 
       RowBox[{"t", ",", 
        RowBox[{"1", "+", "q"}]}], "]"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.05`"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"q", "-", 
         RowBox[{"10", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"0.00495753481347936`", " ", 
             RowBox[{"Sinh", "[", 
              RowBox[{"0.02`", " ", 
               RowBox[{"(", 
                RowBox[{"300", "-", "t"}], ")"}]}], "]"}]}]}], ")"}]}]}], 
        ")"}], "2"], " ", 
      RowBox[{"\[Omega]", "[", 
       RowBox[{"t", ",", "q"}], "]"}]}], "+", 
     RowBox[{"0.061313240195240384`", " ", 
      RowBox[{"\[Omega]", "[", 
       RowBox[{"t", ",", 
        RowBox[{"1", "+", "q"}]}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Omega]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "q"}], "]"}]}], ")"}]}], "\[Equal]", "0"}]], "Output",\

 CellChangeTimes->{{3.8202964991908817`*^9, 3.8202965206686177`*^9}, {
   3.820296696340158*^9, 3.8202967054826813`*^9}, {3.820296952581388*^9, 
   3.8202969931003366`*^9}, 3.8203024183966227`*^9, 3.8205515995307007`*^9, 
   3.822298181289205*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"9bc5e295-14e8-4765-ac97-f237a713d73e"]
}, Open  ]],

Cell["\<\
\:6570\:503c\:89e3\:5c1d\:8bd5
Do it backwards\
\>", "Text",
 CellChangeTimes->{{3.8205516120454693`*^9, 3.820551612940279*^9}, {
  3.820814656010342*^9, 
  3.8208146630868273`*^9}},ExpressionUUID->"748c1dd5-d389-4656-8e8e-\
aaa481cbf136"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "2"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", "m"}], "Input",
 CellChangeTimes->{{3.822298545906267*^9, 3.822298581960657*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"e3aa40e8-79ed-43b8-8469-366e6fd4bd23"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.82229856335636*^9, 3.8222985824420557`*^9}},
 CellLabel->"Out[93]=",ExpressionUUID->"32e77796-ea0f-47a0-bea4-9db5422c6cc3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fdmSolver", "[", 
   RowBox[{"t_", ",", "nt_", ",", "q_"}], "]"}], ":=", "\[IndentingNewLine]", 
  
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"time", "=", 
       RowBox[{"N", "@", 
        RowBox[{"Subdivide", "[", 
         RowBox[{"0", ",", "t", ",", "nt"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", "dt", ",", "\[IndentingNewLine]", "mat", ",", 
      "\[IndentingNewLine]", "idxTrigger", ",", "\[IndentingNewLine]", 
      "trigger"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dt", "=", 
      RowBox[{"First", "@", 
       RowBox[{"Differences", "@", "time"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mat", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"q", "+", "1"}], ",", 
          RowBox[{"Length", "[", "time", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mat", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"i", ",", "q"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "time"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Q", " ", "terminal", " ", "condition"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mat", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"t", ",", "i"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "q"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"(*", "T", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"trigger", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"q", "+", "1"}], ",", " ", 
          RowBox[{"Length", "[", "time", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"trigger", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"1", ",", 
          RowBox[{"q", "+", "1"}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"from", " ", "t"}], "+", 
       RowBox[{"dt", " ", "to", " ", "t"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mat", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", 
             RowBox[{"-", "2"}]}], ",", "idxT"}], "]"}], "]"}], "=", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"mat", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", 
              RowBox[{"-", "2"}]}], ",", 
             RowBox[{"idxT", "+", "1"}]}], "]"}], "]"}], "-", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\[Kappa]", "*", "\[Phi]", "*", "dt", "*", "\[IndentingNewLine]", 
           RowBox[{"Thread", "[", "\[IndentingNewLine]", 
            RowBox[{"Times", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Power", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{"q", "-", "1"}]}], "]"}], "-", 
                 RowBox[{"IS", "[", 
                  RowBox[{"time", "[", 
                   RowBox[{"[", 
                    RowBox[{"idxT", "+", "1"}], "]"}], "]"}], "]"}]}], ",", 
                "2"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"mat", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"1", ";;", 
                  RowBox[{"-", "2"}]}], ",", 
                 RowBox[{"idxT", "+", "1"}]}], "]"}], "]"}]}], "]"}], "]"}]}],
           "\[IndentingNewLine]", "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "1"}]], "*", "\[Lambda]", "*", "dt", "*", 
           RowBox[{"mat", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", ";;", 
               RowBox[{"-", "1"}]}], ",", 
              RowBox[{"idxT", "+", "1"}]}], "]"}], "]"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"idxTrigger", "=", 
         RowBox[{"Boole", "[", 
          RowBox[{"Thread", "[", 
           RowBox[{"Less", "[", 
            RowBox[{
             RowBox[{"mat", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"1", ";;", 
                 RowBox[{"-", "2"}]}], ",", "idxT"}], "]"}], "]"}], ",", " ", 
             
             RowBox[{
              RowBox[{"mat", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"2", ";;", 
                  RowBox[{"-", "1"}]}], ",", "idxT"}], "]"}], "]"}], "*", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Kappa]"}], "*", "\[CapitalUpsilon]"}]]}]}], 
            "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"idxTrigger", ",", "0"}], "]"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{
         RowBox[{"trigger", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "idxT"}], "]"}], "]"}], "=", "idxTrigger"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"mat", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", 
             RowBox[{"-", "2"}]}], ",", "idxT"}], "]"}], "]"}], "=", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Max", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"mat", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"1", ";;", 
                 RowBox[{"-", "2"}]}], ",", "idxT"}], "]"}], "]"}], ",", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Kappa]"}], "*", "\[CapitalUpsilon]"}]], "*", 
              RowBox[{"mat", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"2", ";;", 
                  RowBox[{"-", "1"}]}], ",", "idxT"}], "]"}], "]"}]}]}], 
            "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"idxT", ",", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "time", "]"}], "-", "1"}], ",", "1", ",", 
           RowBox[{"-", "1"}]}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"mat", ",", "trigger"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.82176152952129*^9, 3.8217615788090396`*^9}, {
   3.821761765033705*^9, 3.821761802144558*^9}, {3.8217630062582145`*^9, 
   3.821763052718416*^9}, {3.821763099526619*^9, 3.8217633200638456`*^9}, {
   3.8217635839325275`*^9, 3.821763586361679*^9}, {3.821763621948622*^9, 
   3.8217637221052237`*^9}, {3.821763916310812*^9, 3.8217639223310213`*^9}, {
   3.821764020670337*^9, 3.82176402569178*^9}, {3.821764267856453*^9, 
   3.821764342069252*^9}, {3.821764416582945*^9, 3.8217644324379635`*^9}, {
   3.821764558121896*^9, 3.8217646076775665`*^9}, {3.8217646503118486`*^9, 
   3.8217647438772492`*^9}, {3.821764783067541*^9, 3.821764785636316*^9}, {
   3.821765230191372*^9, 3.8217652571749344`*^9}, {3.8217653248645687`*^9, 
   3.8217653502383614`*^9}, {3.8217654441719217`*^9, 3.821765444392331*^9}, {
   3.821765540872622*^9, 3.821765543769603*^9}, {3.8217655832690697`*^9, 
   3.8217655877535253`*^9}, {3.8217656520011916`*^9, 3.821765662911724*^9}, {
   3.8217657043769927`*^9, 3.821765779172021*^9}, {3.82176590214357*^9, 
   3.8217659029745455`*^9}, {3.821766008118247*^9, 3.8217660295637674`*^9}, {
   3.8217667518158665`*^9, 3.8217667714851*^9}, {3.821766828772027*^9, 
   3.8217668687879076`*^9}, {3.8217678545471916`*^9, 3.821767858319315*^9}, {
   3.8217693923926725`*^9, 3.8217695576004553`*^9}, {3.8218206111969223`*^9, 
   3.821820611611339*^9}, {3.8218208706406493`*^9, 3.821820937810644*^9}, {
   3.821821284158862*^9, 3.821821404705839*^9}, {3.8218215078859982`*^9, 
   3.82182153906291*^9}, {3.8218215719015074`*^9, 3.8218216108130636`*^9}, {
   3.8218216690386252`*^9, 3.821821850163864*^9}, {3.8218222260100546`*^9, 
   3.8218222261610055`*^9}, {3.8218223407342896`*^9, 3.821822342938506*^9}, {
   3.8218225404891353`*^9, 3.8218225433655453`*^9}, {3.821822629914192*^9, 
   3.8218226459707394`*^9}, {3.8218226792397594`*^9, 3.821822680446134*^9}, {
   3.821822718136859*^9, 3.8218227264022236`*^9}, {3.821822971721592*^9, 
   3.8218229752970996`*^9}, {3.8218231005242386`*^9, 
   3.8218231147419057`*^9}, {3.821823300214568*^9, 3.821823321701908*^9}, {
   3.8218250000444293`*^9, 3.8218250240620008`*^9}, {3.8218250722581224`*^9, 
   3.821825105783493*^9}, {3.8218252416134415`*^9, 3.8218252425025167`*^9}, {
   3.8218254907561607`*^9, 3.8218255016540766`*^9}, {3.821825533179102*^9, 
   3.821825540375083*^9}, {3.8218258810597315`*^9, 3.8218259409425488`*^9}, {
   3.821826063630044*^9, 3.8218261683601046`*^9}, {3.821826770785684*^9, 
   3.821826882005926*^9}, {3.821826931155283*^9, 3.8218269451252413`*^9}, {
   3.821827196107909*^9, 3.821827201937379*^9}, {3.8218273861125965`*^9, 
   3.8218274112335463`*^9}, {3.82182747087315*^9, 3.821827471653065*^9}, {
   3.821827631214373*^9, 3.8218276331060457`*^9}, {3.8218288823282003`*^9, 
   3.8218288833634696`*^9}, {3.8218289353594017`*^9, 
   3.8218289366588793`*^9}, {3.821830257378144*^9, 3.821830259924262*^9}, {
   3.821830695833907*^9, 3.8218306974885087`*^9}, {3.8218308812056265`*^9, 
   3.8218308839534473`*^9}, {3.8222984147537117`*^9, 
   3.8222985379149218`*^9}, {3.82229858983076*^9, 3.822298590249147*^9}, {
   3.8222987789763117`*^9, 3.822298807182732*^9}, 3.822298891288916*^9, 
   3.822298958221878*^9, {3.822299334344232*^9, 3.8222993593480673`*^9}, {
   3.822299449693253*^9, 3.822299476963193*^9}, {3.822299515039856*^9, 
   3.822299519919001*^9}, {3.822299661032344*^9, 3.8222996694241953`*^9}, {
   3.822299774917893*^9, 3.822299781972313*^9}, {3.822299821364376*^9, 
   3.8222998473832912`*^9}, {3.822299950223034*^9, 3.822299955600411*^9}, {
   3.822300104170147*^9, 3.822300142706287*^9}, {3.822300186876107*^9, 
   3.822300190933001*^9}, {3.822300535883074*^9, 3.822300536891787*^9}, {
   3.8223005727864017`*^9, 3.822300585818903*^9}, {3.822301369275688*^9, 
   3.822301383922083*^9}, {3.822303541494611*^9, 3.8223035419898033`*^9}, {
   3.822304562547585*^9, 3.8223045627162952`*^9}, {3.822304612111999*^9, 
   3.822304612360393*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"438f861a-c921-44ed-be7f-94aaf83c5df7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"fdmSolver", "[", 
    RowBox[{"T", ",", "3000", ",", "10"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8218348147707276`*^9, 3.8218348405801888`*^9}, {
  3.8222988115868196`*^9, 3.82229881934058*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"b4473fb8-4dee-49c4-aa57-08caf7489f3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mat2", " ", "=", " ", 
   RowBox[{"fdmSolver", "[", 
    RowBox[{"T", ",", "3000", ",", "10"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.822298899472163*^9, 3.8222989055873213`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"e2627f31-d7bc-49cd-bb49-b830955973ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mat3", ",", "trigger"}], "}"}], " ", "=", " ", 
   RowBox[{"fdmSolver", "[", 
    RowBox[{"T", ",", "3000", ",", "10"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.822299963640944*^9, 3.8222999651006193`*^9}, {
  3.822300029290523*^9, 3.822300031908596*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"83a3eaad-ac36-464c-ad11-713da908f434"],

Cell[BoxData[
 RowBox[{
  RowBox[{"findTrigger", "[", 
   RowBox[{"triggerMat_", ",", "time_"}], "]"}], ":=", "\[IndentingNewLine]", 
  
  RowBox[{"time", "[", 
   RowBox[{"[", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"row", "=", 
            RowBox[{"triggerMat", "[", 
             RowBox[{"[", "idxQ", "]"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"SelectFirst", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"Length", "@", "row"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"row", "[", 
               RowBox[{"[", "#", "]"}], "]"}], "\[Equal]", "1"}], "&"}]}], 
           "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"idxQ", ",", 
          RowBox[{"Length", "@", "triggerMat"}]}], "}"}]}], "]"}], ",", 
      "_Missing"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.82230041895339*^9, 3.822300419204027*^9}, {
  3.822300464013404*^9, 3.82230046441468*^9}, {3.822301547986639*^9, 
  3.822301599986372*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"9420a940-54a0-4836-b05b-a65d8456f99a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "trigger"}]], "Input",
 CellChangeTimes->{{3.8223045077566957`*^9, 3.822304517518042*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"e021e762-2503-4344-960e-fbf1aed8e17d"],

Cell[BoxData["11"], "Output",
 CellChangeTimes->{{3.82230451303344*^9, 3.822304517956869*^9}},
 CellLabel->
  "Out[214]=",ExpressionUUID->"f1738d36-b2e3-487f-bf7d-f1ba51c18b36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"moSignals", "=", 
  RowBox[{"findTrigger", "[", 
   RowBox[{"trigger", ",", 
    RowBox[{"N", "@", 
     RowBox[{"Subdivide", "[", 
      RowBox[{"0", ",", "T", ",", "3000"}], "]"}]}]}], " ", "]"}]}]], "Input",\

 CellChangeTimes->{{3.8223004232104588`*^9, 3.822300486325859*^9}, {
  3.8223006382606564`*^9, 3.822300646971661*^9}, {3.8223035659009027`*^9, 
  3.8223035661285677`*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"279ec1f4-759b-4720-bb90-c240bb8e15c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4.1`", ",", "10.1`", ",", "16.9`", ",", "24.8`", ",", "34.3`", ",", 
   "46.2`", ",", "62.2`", ",", "86.4`", ",", "137.1`", ",", "299.9`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8223004870426817`*^9, 3.822300617709752*^9, 
  3.8223006480309753`*^9, 3.8223014159540987`*^9, 3.82230157103939*^9, 
  3.8223016053859453`*^9, 3.822303578544931*^9, 3.822304485133337*^9, 
  3.822304603907795*^9, 3.822304642107172*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"2719c383-00aa-4e8f-b048-c0133d92a2e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"moSignals", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"Length", "[", "moSignals", "]"}], "-", "1"}]}], "]"}]}], 
       "}"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Trigger Boundary\>\"", "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"IS", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "300"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Dashed"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<AC Targets\>\"", "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"inv", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Algo\>\"", "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time(Sec.)\>\"", ",", "\"\<Inventory\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.822300664134213*^9, 3.822300707675332*^9}, {
   3.822300755214711*^9, 3.822300760289043*^9}, {3.8223007961016006`*^9, 
   3.822300850710923*^9}, {3.822300917673987*^9, 3.822300966113748*^9}, {
   3.822301005836399*^9, 3.822301009782709*^9}, {3.822301040402564*^9, 
   3.8223010489182787`*^9}, {3.822301096091539*^9, 3.822301117705806*^9}, {
   3.822301183272415*^9, 3.822301210673341*^9}, 3.822301312040737*^9, {
   3.822301612451552*^9, 3.8223016206629*^9}, {3.822301718410116*^9, 
   3.822301723059537*^9}, {3.822346019226399*^9, 3.82234608854605*^9}, {
   3.82234616718289*^9, 3.8223461766361427`*^9}},
 NumberMarks->False,
 CellLabel->
  "In[286]:=",ExpressionUUID->"aff3eb78-6f9a-49cf-b91e-0eb1525d5e7f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[{{4.1, 0.}, {10.1, 1.}, {16.9, 2.}, {24.8, 3.}, {34.3, 
          4.}, {46.2, 5.}, {62.2, 6.}, {86.4, 7.}, {137.1, 8.}, {299.9, 
          9.}}]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwVzn0w1AkAxnFraoqTOmnVdTb2d02SlIpWtPsooZKXsAmb18R6/9VoFLpJ
lGSJvZyIkpc03s5yXGrtNb3RkVxs8v5SQt5WWYzs/e6PZ77z+e/R9Qk7flpZ
SUnpGLX/K+Iufhsv7WArKXmZGidVsRNfnJI6Cmo4kncZsr5/0zipHy5fZAhe
cvrKfxMdfpPHEQ4Jm5YJpBz8YafMe1HJuTVyZ1aePMyxkdmvFlU95WgFM5Om
k+WcPeuzcytutnJOlPq5TCSvAD07x7bWdoAjb4p/9CVZC0Yiw5hnL6Y5Is23
qxKS9GASMtQUHUhD+LY9LU/MdiFBrcBoL7kSdGu5sGEtCzp7b8csS1fHzBMt
fh6fDfOesTu9+zQQ78lYn6F/AKOFyj0tDzRRkuwZd9DzENyu1/vULtKxMcoj
eO6KDQ506xtMK9ajqLizKeHcUdhGTuecLf4JzVcTay7et0NjyaxMYvEzrrd1
qW1udoBsacZakqaNluet0WsOHkdXg8l0aC0DQ2p9O8ulTqjZxBUXt27C1UjD
e/scXfDjte/5HTwdyE2ELlGjXAjo9v2CJh380C61MY92xTGNtEoDQ12UZXjM
jclOQt8scfVijC4YFXNjdonuqM60mbjTqAvtsbasnGU8rFWKmOpXYWI0ujHl
Xu4peOwu6Ii2YqI00s5buMELPllx/oMXmNiO967NbV7oZh74tK2QibXVIbL+
e964xqLNit4wYVFHjAZ5+SD1aJDK0jQTf1fY0FgbfdG/deLYwGoCRY5Rj7o/
+mK/kb9HjgGBtrjGt/N5flDO7njlYUmA770laTLsNJ6aBkf94k7A0XDGd4up
Pwab9NJ6QglcutF7u+2rP7ifPOlGlwho3pKe5UnOICV2/NmQgMDUzqmH7rEB
+LrB4dJQFgFG3XlaNisQvIXv7INFBERTqgvVyny8DNIzZ1cSSKkRO1jV81HG
pTnx6gi0bo09XJEUBIszJfnbnxHw2H7qbuqRYAQ30nvjXxNg6ZTSRctDQBfl
WSjeErgoXrGjvCUETmocrv17AssnLhfoCkIxmrnEz+0mMPtKRRziHobjGgLf
9gEC2Q2KhRiNcFj36RnEDBPwlqta/RoeDj+H0LqoMQIdCxt9wtrDcYGf/PDC
JIFvVvtLM40j0LPGWH9eRuCRKn3lx7QIuB99QrBmCezK/7pbey4C487y2Ix5
AnYJg4JULgkHebNOwSIB6yMCWxNXEgahlbmVlKFuqtp1koRk5qG2hLLRLUH8
Fh6Js/qj9E7KmoWm0WJfEgO7VRVrvhPofJ4S+CWcRJS3VnE05YDl5pY2SSTe
JaTGOi1R/xs+0SZukFDiuQx7UXZLvlmfLiBR2F5oH0rZdt3wvt6bJKRZS4xE
yjs2pxlF/k7CrW6kVkx51vIzI7+AxKDvVNdWBYHJleldh4tIWLuysZfy53/2
3558QGLzZef7lpQ7nNPXmZWQUJz4HOBJ+bEfW621koSmMV0mpFytN9JwvopE
3tIq5zzKZV/Sr2r/SeJN/Vh1OeW750aUA/8i4acSENVIOZMllKjXkRinqXdK
KactsmOrHpNwbX1g/pHydcmImZuYRNku8xwZ5bgrwnlFPYmpD68VCsr/AcZW
SaY=
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$1355436#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxd3XFonOed4PHpuqeLL7quWmW1mUabnVS9ufqq6ymZROkkSjJdJXNRMskp
mUTJJEqirJJJlEwSJVNMRU2Z4iJqOhQXFdO5mqLiMtRUFJcppqKmzOJFrNm5
xYsWs8OaRYuXYc2KRWWKqagpR/MmeXk+88/DFz3v53348fLg/3zbX77z5Kt/
lEgkNm9MJP6w+vu/jT/8Nh8I+8JHnXn/t83fuw+Eyg77r3zU5fd/PZ6/+lH/
v84ffrt4e+z/NX6f53/D+67h/RZvH+93eNfxfo+XyIX74478j33U0fN/9FFH
7zvwUUe/j+PFHXn/CW8A7z/j3YAXd+QdxPsveDfiDeLFHXn/Fe8TeH+MN8T+
D3vvgciPO3r+kx919L64o/VTH3XkfQrvU3jDeMN4N+HdhHcT3p/g/QneCN4I
3gjen+L9Kd7NeDfj3YyXxEvifRrv03ifxrsF7xa8UbxRvFG8P8P7M7xb8W7F
uxXvz/H+HC/F/rgjP8XzcUfvS+Hdhncb3m14t+HdhvcZvM/gfQYv7siLO1rH
8MbwxvDG8MbwPov3YSdykRd35MUdeXFHy3/7qCMv7siLO/Lijry4oyWNF3fk
xR15cUde3NHy3/Hijry4Iy/uyIs7Wj6HF3fkxR15cUde3NFyCC/uyIs78uKO
vLij5X/gxR15cUde3JEXd7R8Hi/uyIs78uKOvLijZRwv7siLO/Lijry4o+V/
4sUdeXFHXtyRF3e0fAEv7siLO/Lijry4o+V/4cUdeXFHXtyRF3e0TIT7kx/2
DR/4cb//fCHu6H1xv7/U4o7ej9fC6+D18BK3h17y9tDL3B56hdtDr3x76NXw
GngtvA5eDy9xB+e7I/Qyd4Re4Y7QK98RejW8Bl4Lr4PXw0tkOF8m9DKZ0Ctk
Qq+cCb0aXgOvhdfB6+El7uR8d4Ze5s7QK9wZeuU7Q6+G18Br4XXweniJuzjf
XaGXuSv0CneFXvmu0KvhNfBaeB28Hl5ikvNNhl5mMvQKk6FXngy9Gl4Dr4XX
wevhJe7mfHeHXubu0CvcHXrlu0OvhtfAa+F18Hp4iS9yvg976IPzxR2dL+7o
fHFH54s7Oh9eC6+D18NLZEMvmQ29TDb0CtnQK2dDr4bXwGvhdfB6eIl7ON89
oZe5J/QK94Re+Z7Qq+E18Fp4HbweXuJezndv6GXuDb3CvaFXvjf0angNvBZe
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
          
          "]]}}}, {{}, {}}}}, {PlotRange -> All, AxesLabel -> {
       FormBox["\"Time(Sec.)\"", TraditionalForm], 
       FormBox["\"Inventory\"", TraditionalForm]}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 299.9}, {0, 9.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Trigger Boundary\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"AC Targets\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Algo\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.822300627972019*^9, {3.822300670193556*^9, 3.822300711286892*^9}, 
   3.822300760758246*^9, 3.822300803824719*^9, {3.822300836320918*^9, 
   3.822300851240616*^9}, {3.822300935605002*^9, 3.822300966629883*^9}, 
   3.822301049747553*^9, {3.8223011089634447`*^9, 3.822301118362512*^9}, {
   3.822301199137555*^9, 3.822301211040552*^9}, 3.822301317180174*^9, 
   3.822301621553961*^9, 3.822301724023046*^9, 3.822346028786847*^9, 
   3.822346081921256*^9, 3.822346177507762*^9},
 CellLabel->
  "Out[286]=",ExpressionUUID->"8952c5cb-cb84-40d2-bbd6-ebde8e7ff9ba"]
}, Open  ]],

Cell[TextData[{
 "Find the optimal depth\n\[Delta](t,q) = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "\[Kappa]"], "+", 
    RowBox[{"h", "(", 
     RowBox[{"t", ",", "q"}], ")"}], "-", 
    RowBox[{"h", "(", 
     RowBox[{"t", ",", 
      RowBox[{"q", "+", "1"}]}], ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "91fed67a-b12c-4b23-a78a-89c2e3ad03ad"]
}], "Text",
 CellChangeTimes->{{3.822301919491303*^9, 
  3.822301960261881*^9}},ExpressionUUID->"f12cc775-208a-47e6-9eb4-\
cbde07981e39"],

Cell[BoxData[
 RowBox[{
  RowBox[{"optDepth", "[", "\[Omega]_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[Delta]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Delta]", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"Dimensions", "[", "\[Omega]", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Delta]", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{
         FractionBox["1", "\[Kappa]"], "+", 
         RowBox[{
          FractionBox["1", "\[Kappa]"], "*", 
          RowBox[{"Log", "[", 
           RowBox[{"\[Omega]", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "\[Kappa]"], "*", 
          RowBox[{"Log", "[", 
           RowBox[{"\[Omega]", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}]}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", " ", 
         RowBox[{
          RowBox[{"Length", "[", "\[Delta]", "]"}], "-", "1"}]}], "}"}]}], 
      "]"}], ";", "\[IndentingNewLine]", "\[Delta]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.822300801714929*^9, {3.8223020359725113`*^9, 3.822302098255835*^9}, {
   3.822302203793779*^9, 3.822302250725915*^9}, {3.822302315323744*^9, 
   3.822302465319584*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"bb41c775-69c8-4c05-9726-e002d4eff871"],

Cell[BoxData[
 RowBox[{
  RowBox[{"filledPr", "[", "\[Delta]_", "]"}], ":=", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[Kappa]"}], "*", "\[Delta]"}]]}]], "Input",
 CellChangeTimes->{{3.822302475811925*^9, 3.822302476369657*^9}, {
  3.822302756488253*^9, 3.8223027916534224`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"555e3d15-bbc6-4951-8217-e76a0df58e80"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"optDepth", "[", "mat3", "]"}]], "Input",
 CellChangeTimes->{{3.8218240031581364`*^9, 3.821824006387151*^9}, {
  3.8223034208560953`*^9, 3.822303421609057*^9}, {3.8223038122295113`*^9, 
  3.822303821515046*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"c4e68dfa-4956-4474-952e-23bbf73960cc"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0.014023543885966886`", ",", "0.013840103051946547`", ",", 
             "0.013660563125379246`", ",", "0.013484945190788914`", ",", 
             TemplateBox[{"2994"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"-", "0.009477697821758935`"}], ",", 
             RowBox[{"-", "0.00951074874428125`"}], ",", 
             RowBox[{"-", "0.008999999999999998`"}]}], "}"}], ",", 
           TemplateBox[{"9"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{115., {4., 15.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{99., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 195, 17872158765385051074, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{110., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 195, 17872158765385051074, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{82., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 195, 17872158765385051074, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{147., {1., 16.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[17872158765385051074 === $SessionID, 
   Out[195], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{{3.822303807736456*^9, 3.822303821904684*^9}},
 CellLabel->
  "Out[195]=",ExpressionUUID->"ebacdf3b-307f-4ed4-9840-6eec01967edc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Price Dynamics", "Subsubsection",
 CellChangeTimes->{{3.8205477689485917`*^9, 
  3.8205477765540376`*^9}},ExpressionUUID->"b14127a1-d411-459c-864d-\
3a3f10a116c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S0", "=", "100"}]], "Input",
 CellChangeTimes->{{3.8205506027965107`*^9, 3.820550604925522*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"557512a1-5972-44b6-a3e9-7da7885bbc37"],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{3.820550605491867*^9, 3.822302626536825*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"fb750543-f2f1-41f8-8393-b4ed32a57c4c"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.8223026214893208`*^9},ExpressionUUID->"372a46e6-7829-4ffc-8755-\
051e7bc5007a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalP]", "=", 
   RowBox[{"TransformedProcess", "[", 
    RowBox[{
     RowBox[{"S0", "+", 
      RowBox[{"\[Sigma]", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"up", "[", "t", "]"}], "-", 
         RowBox[{"down", "[", "t", "]"}]}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"up", "\[Distributed]", 
        RowBox[{"PoissonProcess", "[", "\[Gamma]", "]"}]}], ",", 
       RowBox[{"down", "\[Distributed]", 
        RowBox[{"PoissonProcess", "[", "\[Gamma]", "]"}]}]}], "}"}], ",", 
     "t"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8205488594419203`*^9, 3.8205489188343477`*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"0544e6af-1570-43e2-a0f3-adafa2cd66e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", " ", "=", " ", 
  RowBox[{"RandomFunction", "[", 
   RowBox[{"\[ScriptCapitalP]", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "T", ",", ".1"}], "}"}], ",", "1"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.820548974415931*^9, 3.820549020833164*^9}, 
   3.820549074180185*^9, 3.822303263116125*^9, 3.822303465779347*^9},
 CellLabel->
  "In[394]:=",ExpressionUUID->"22fbc741-2552-4396-9ece-885353dd027f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TemporalData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJxFUn8s1GEYv7RGoqkTKe78diSR0bLoyY8rU7fu/OjeOuKcIxx3tzSJtGun
thIj/cEfuSiL1slOOxXCuilsFUZafnSm9Ytlfo01vefd3t7tu++e9/08z/P5
PM/HRZwrSDNjMBhH8Gf6B033Rulih8MYGwfBgsiD/62MCb/4epZ6TQhv+lzN
1WJ3KOte5IjWhcD2+1F9MNoPvEX4xgKBvXjMyFwPBIz+ycfx/aDSxi/hh2Gg
Hx8rBNqmz7dafcNAajp2CNjDL3mzncdgpE4eammPIFbzrp2ZGAkb7f0R9IV5
hcAAl9TjILhe28izVUbDEgc39EBQPHhFPvc9htTzRJAxWJoviufR+G1M6m19
wWmKv3bPM5Wr45N+XggSIv5u4VjEgqXpwgdBXcJCzcf4OPpeIajQM0rjQRGK
Ec4INM0RGtV4AtHjiECwXGNz00FI+O1G4FZrfnIqB5F57UWQqa0s2NxxltaL
bTAceLx0DjBaz8J8RJusnz2ITgTT+Di+CMwjV/XskiRgmwB+CLx/m+vSXp2H
HjzuMlcEwYV324tLkmGqwPbpcRcEnEv5kjtuKWT+eD4+LtI/hoEU+p6+blw2
XhQTvrj+Ir+1q9smlfDbh6AyvlzR15ZK31UDHdNVZyQgMAkKQPAkv+hD5LyE
9p8Ziqp3qk6j+hUPU0L0wVKq38rrxvPCSSnd54ojY8msOJ3u25m7VSvbk0H0
bUcgdHbkmfVkEP3YH1M5qmZh8gXA7LEEBJdz5ldGLTNpfEoz/yK0JZPWV57g
goSXRfjuQNBQW9ekW84i/sH72i+LGzNUZUM9ho+4IZjNrlK1+8uIf9kIOp0m
bcZHZcQfu3D/8Kvi13k5dH9MB8/qfnYuyWdi/7gmxbQbcv/79/3CxKEAOe1f
kn7U+pFaTvK3IbBrC3TMG5JTvX5GX9YnbwWY7CS3RmD0nBVpixQ0v8sdFc30
KQiehcBrrbe8xVkJG/Jx3Hrrq3oiV0nnPbezaXW9U0n5/gM57Z4S
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$1416056#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 99.93}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 99.93}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 300.}, {99.93, 100.78}}, PlotRangeClipping -> 
              True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["300.`", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3001", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Paths: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJxFUn8s1GEYv7RGoqkTKe78diSR0bLoyY8rU7fu/OjeOuKcIxx3tzSJtGun
thIj/cEfuSiL1slOOxXCuilsFUZafnSm9Ytlfo01vefd3t7tu++e9/08z/P5
PM/HRZwrSDNjMBhH8Gf6B033Rulih8MYGwfBgsiD/62MCb/4epZ6TQhv+lzN
1WJ3KOte5IjWhcD2+1F9MNoPvEX4xgKBvXjMyFwPBIz+ycfx/aDSxi/hh2Gg
Hx8rBNqmz7dafcNAajp2CNjDL3mzncdgpE4eammPIFbzrp2ZGAkb7f0R9IV5
hcAAl9TjILhe28izVUbDEgc39EBQPHhFPvc9htTzRJAxWJoviufR+G1M6m19
wWmKv3bPM5Wr45N+XggSIv5u4VjEgqXpwgdBXcJCzcf4OPpeIajQM0rjQRGK
Ec4INM0RGtV4AtHjiECwXGNz00FI+O1G4FZrfnIqB5F57UWQqa0s2NxxltaL
bTAceLx0DjBaz8J8RJusnz2ITgTT+Di+CMwjV/XskiRgmwB+CLx/m+vSXp2H
HjzuMlcEwYV324tLkmGqwPbpcRcEnEv5kjtuKWT+eD4+LtI/hoEU+p6+blw2
XhQTvrj+Ir+1q9smlfDbh6AyvlzR15ZK31UDHdNVZyQgMAkKQPAkv+hD5LyE
9p8Ziqp3qk6j+hUPU0L0wVKq38rrxvPCSSnd54ojY8msOJ3u25m7VSvbk0H0
bUcgdHbkmfVkEP3YH1M5qmZh8gXA7LEEBJdz5ldGLTNpfEoz/yK0JZPWV57g
goSXRfjuQNBQW9ekW84i/sH72i+LGzNUZUM9ho+4IZjNrlK1+8uIf9kIOp0m
bcZHZcQfu3D/8Kvi13k5dH9MB8/qfnYuyWdi/7gmxbQbcv/79/3CxKEAOe1f
kn7U+pFaTvK3IbBrC3TMG5JTvX5GX9YnbwWY7CS3RmD0nBVpixQ0v8sdFc30
KQiehcBrrbe8xVkJG/Jx3Hrrq3oiV0nnPbezaXW9U0n5/gM57Z4S
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$1416056#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 99.93}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 99.93}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 300.}, {99.93, 100.78}}, PlotRangeClipping -> 
              True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["300.`", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3001", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Paths: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.1`", "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"HoldValueFromLeft\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[Automatic, {CompressedData["
1:eJylnDuwlEUQRi8ggpeHICA+8AIqAooIGlO1GaYQsVVEVmkqphgTE2uqMTGm
mGpsbIypBoqP3fH/arbOem7Plrfq1lfznunp7unumX/Pf/L57U/3bm1t7Vn8
f3doa/qbz84+eHrr8V93Zkk/fPLrpbt/31lD1n908+f7J3fBG9s/fXPvz44/
/rD4e7aeX2HGu7ucyLPeT9LEX2493nnwx3r95H95cjHD39fTzLdya892y+nf
2KVd1X+FHIf9VvMjvdIP5820tQ+G3sHwQ8VntxfNn+6Zz75fJB/unc8+Wv7t
m8+Ww95/bj779t6CI/Y5pl7apb9gxiUfEzMfphereHRzZX5Bjh/8bVH8ZP98
9tny7/n57ONlBwfmsyU5tw/0ctZbDruzkma9lBsduH7Ss6If51PNk/1ynlk3
21m/Rq/lcm4dnM8uLxnvYE8HSdeMk3VZmvNhPsuNjskPhu7kQ7YjP5GvMi7l
gOMZHxq9uT7WDz2zH9yHr79a/L3QsemJ7Y7ZJ2L2lfnpN+Xcbxsv6aaftjva
PJhv46Re+rP8pvcOdUx+04+H1/PZnvlEa5d0+s947dw8Mv9X/x7umHLWa/r5
6KSPX5z04tGen3Qw9ax++uW8SCf2n/6anj3u2ORoF2zy89LEzyc7Njk50dNN
Xk6sY+oFmzycmuTmVE+PYpOflyf5OT3x2ysTn6+kG3+92tPMb/v+Wse2/yvp
RtfXJ3qf6e3YL9sT2R/7bfx0Ztq3nWkfd6Z9f6OXpz7bsV+rn/LMi+tp8rpC
p9A3dCV9iSlPO7ZP/xwn45MuXCeR9UIv0jHpJg9n19NNDs5P/H5+4vc3e5rY
+Pqtjo2vV9KNry90bMNdmOTk7fXyxs/veDrY6HixY9vHdzs2Ol6e+G0lv9Hn
ykTf96b1X53PvlgS7Npkv13r+Y1uVyc6X6kx/Sed8YmZT9v/S9P+r2DWlfUn
zfpZZ9Yziplf45P31+dPzLzZD+lNzHwr5PoNue9Nri46n5DfmDa+JkYOwtdp
T/5P/cZH59blLxh5a3x3bl0erZ3pRZNv6z9p1htdN+ls9CZSroPZxyD3N/sf
fgnfUZ7Cl+Tbin9NPsnPmQfnWfFxJedcb9DoTPoFQ/8g94X9GB9zv7l/6Y96
KMj9CIa+1MNWL3Qz+nAfDI1Pg+Rzloe+3DfTP6RfzkXWYznPT5O/ig5M27lS
8VnGMzsg+TZP40eT/2pextcVvxv/Gz1ML3Fedu4wn3qR+5t9j/1Vockn6c71
WDvabybvtm/GZ5Q/k2O2p76kHqj0nc3f+MDsTrYjVnrTxh1dP/UpzzHqUbPj
WJ/nI+1nQ9PXrMdzmucp99f4h/xb2X9Ms136Nz+hsteT5nlHvqzOm0ov8Bww
f4p8ZPJHOazsZuaTbsY35FvOp+J/2lPsr7KjRs9FypX5VdT3PKejj2M/E3k+
pt1ovvkbVdrOF45jet/0XM59rjvp+D3Jt3T8lSqewzgG/Rj2Y3ER9ke/ifEl
1mc9y6cfFky5xbssPmXxOcbRmOb8OS7jZGxX1Wc8z+JoFndMHCzlbG/xSNbn
urmP3A/bP+6j0dXoa/xr/Qfpf0c+ImfUJ6lvfEckf3F8kxPygcV1uV9cN+MM
1fwp16EH7d8qrkI/xezo6EHqMdOb5qdR35qfxHbm71V6mPY9z007Bzf1m2kH
m31Q+Z20N8yfMDs79KAfXtkBtq5N4zCj8xyNC1m52T+sZ/OzeAztHWL8BrPr
zR6zOFllv9HurvwVi1czn2j9sV7i/MGmRz7oyPLcDwStH9av5s9+097mW/l7
5vexn6yz6b/rk966PumjD/v9SMqZzr2J0YvjGP1sPaQT6cp+WY/9W3r0XsP8
Hupf+p8mJ+b/mv5Ivxb3YfzD4j30AyyubHEfO58s7sZzw/Sl+WO8xyN/mH9q
dLdz0fxyntvmD8VuCdL+YXnas7yKA9JfNDvDkH5fFbfa9Nyu2tv5Wp3zldyM
2jcWf+I41X2l5TMuY+c96xl9q/iJ2QWkO+M99O+Nr+1+tIqDmFxQPszPr+41
ab9XOCqflb9gcR6L41ic2Mqr+5IqflrZk9GPdr9qaHHRys4yu8fi0qP3t0Sz
G8wurOwks6/MXuF8U8/sRyLtKLMHzX5MPdLB7PzR9ZAu7NfsPrPbKru5suOr
uL3ta9DGNbrbvIyfzF6v+N/2jfts+2Dz4f060exdxvPNLqO9Rf1gcmV2ub3T
sDT52NZteoHyF78m/k78oiDfi9EPYT9Mcx85T66L9LJ7PLN/N32HVb03MXuk
uk+q7E271+a5Ovpuy9pV923V+0ZLV/kZn/cxFi/8v+u1+LG9N2NcOPHevFe1
+Ht1/5J02tn9QLDx0+n1dOOnlXfPzOd76pRz/jYu3/nae9/kZ7y8806a80m6
egectN372DtlzsvWQ3pmfoYVHUh/roP3Blx39Z6a62B7owfrWTu7v7L7Ds6L
+8X52HrJv6Q7vxcg5nsEfmeQfH63wO8Qkk+svn9gf5GzzLvp65XvIJIOUi5Y
zv4oz0mHbiavpGv6t+8tKJ9BzpfyTD2VfMoD5YV6ieup9B3HNTkjn9o4zCc9
jE+Nj8hPze45Np1Hx3q6nUv/8d2PlRMrPicfk/+T3/z84+vtMt+Uc32VPLE9
12/IeqPtSLfQs9mZRzryOzP77ozYzvHD62lr/wjfgQU5T0tn3dyn5Ae53lE+
Srl9h5byjG/6ttLXlR5nP/bdGMtNr1KvmZxX8m/92jlj69v0XKG+pr6089z0
rOldntem/4O0Kyv7iedbhenfviMkpp3tI+0mnhP2nsPeCdk7HNr3fC/E+mZv
cT/su0TON+NzHmbvmT1m9oLJo/F3padG9U4w/VFueK6ZnjB5tfM64/Hc47qZ
Zjs771mP9CO9jC7Veip7uJIr6lHqU7MLzX6yNP0g8q0h5cvew9m7St6v2P2I
1WM521s9e7fG/u19XBUvsXdcbJf7Hfu+tboHDlp8a1NkHMzu2e0d7+i74oou
o3E0i0/xnoz3aLyPs3eD1k/1fSP5j3xk94wpt/tDjmto32syDhe5HH1Pa+9r
zQ+2eNBoHMX8aqZT385Z01f2ntnWW8WVLO5merrSs+k/dgXtGotXkY5m35g9
Zu+wmR6tZ/1aXJbrs32wOKW9V+c+V+/aK/uwshdH43hVPND4xOxIsxNiT9Du
jx1Fu6Oqb34j7Rj7PRKzI83PJZr/YuswtLicrdP8Z9qVQbPzaBcyDlT54aP+
a4XkG4tHGp9Zf9V9Q9Dirdwf+sGb+r+jcWLWt3hrFZ+s0OLX9MM5X/P3Eu+i
X8c4YIWV30i/LPOz+KP5YRY3tHlzfJYzDpd06BLk70dZ/DD17Peuks/f8eLv
d7G/jJs058d9TD3GUVnP/FOum+OSDlwff2csmHXy98iST7rZ73YZPbifxpcV
nzEuSzpyXhZ35u+mcX+bXjg4yfN+/725lDe52eV37ZImpjz95vflkg5yHqkX
zHztd+Tsd+y4z8bn5FPyH8u5H9U+kW9Sj/LA85X3QsYn5EOL+1h8uYrTUX9W
5xztG7MnLI42qu8tLja6TjtXR+2uCu0e0uJYZr+bXW3fgdJvNP8hfg3jX6yf
evTTLS5lcQOLp20aP8t4o++sGZ9gO8aBGE8K2rstxqOq7xcrtO8yOW+LHzI+
Y/QZjccYcv/tfZPdd9j9SfVuqmpXvS+pfs/Q6tEfsHgP61Xlo/2wvumLah32
Tq3qr9JL1q9h+KPis035iv3b7xtU41Xj/APQ6T2s
    "], {{0., 300., 0.1}}, 1, {
    "Discrete", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 0}, 
     ValueDimensions -> 1}}, False, 12.2],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.820549011173132*^9, 3.820549071801853*^9, 3.8205491601507497`*^9, 
   3.8205504910317125`*^9, 3.820550550276268*^9, {3.8205505836817923`*^9, 
   3.8205506101953936`*^9}, 3.822303264099764*^9, 3.822303467038556*^9, 
   3.822347299982317*^9, 3.822347897535016*^9, 3.822348121340016*^9},
 CellLabel->
  "Out[394]=",ExpressionUUID->"cbc81aa6-b249-43da-822a-09262677b49c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TWAP", "[", "price_", "]"}], ":=", 
  RowBox[{"MovingMap", "[", 
   RowBox[{"Mean", ",", "price", ",", 
    RowBox[{"price", "[", "\"\<PathLength\>\"", "]"}], ",", "None"}], 
   "]"}]}]], "Input",
 CellLabel->
  "In[174]:=",ExpressionUUID->"1e7057e5-a83d-49e8-a8e9-11e94ffb0a07"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data", " ", "=", " ", 
     RowBox[{"RandomFunction", "[", 
      RowBox[{"\[ScriptCapitalP]", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "T", ",", "0.1"}], "}"}], ",", "3"}], "]"}]}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{"data", ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<MidPrice\>\""}]}], "]"}], ",", 
     " ", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"TWAP", "[", "data", "]"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<TWAP\>\""}]}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->
  "In[175]:=",ExpressionUUID->"e9d507e6-4b67-4a4d-bcf4-979c1183c9dd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdnX1wlXmV59PiZkWzLpoexijTpoc2NnZs6Q5Nk266uRAIBC6Q5CaBm9d7
83KTm3tJchOLkpGyYuGkpCa1wxRTlNmhrExhpaSkLKxYlCkpJw5ORsaMgxsX
zci66cXJyJp1ceMwZmTdbe7J85z6fviHOv17nu9z3n7fc34vl362c7C+5x0F
BQUz7ykoePK3/olH/vPEkz8ze3JvvPtHV0L5dijvqHjyZwHji3vqv/HMH//i
qXjEcJbw/P09b/3R0189+PZ4b+rJn+VQtvcfhO///fyTPyvAexjK9vyv9tz6
l+db//QdAf4q3v91+H373qNQNrzfQP+1PYH9hvfbUDa8x9D/d6G87rhIINvz
BRHV96lIoK+9/46I6r8hovq9M5QN750Rjc+/C2XDK4yov/99RPV7F/R7V0Tt
3wi8d0f+9K/fVvD/nVzHe0/kw3/8i7pv/O7k+nNFka8efBvxbdnwiiJP4Ib+
78l1vP8Qyob3XnvucYD3H8Nxw9uE5zeF3zd8H8+/XvG+8Pv2vfeFzxve+0PZ
8N4PvPeH9pg+xcArDvU1vKdD2fCejrQ+AXwc4D0dWal7O+C/DfB+L/Lpt939
1r8FeL8Xjhve5lA2PJcNb3OIb3i/H44b3u+H44b3AejnsuF9APaWwN4S2PtB
4H0QeB8M42F4H0L8P4T4bgHelnDc8LZAvz+Afn8AvGeQL88gHs/Afx8OZcP7
MOJRGnkC98a/BflVGnkyfet+E+C7bO+XRg49mVD/Gnyv1P77WoD3bBh/w3PZ
8J4Nv2d4z0a2PVHwNwHesyG+4f1h5Mnj7/7XAO8PI0ZrAZ6PG56PG57Lhrc1
tMf8szX8vuFthX4uG95W+O+50H7Dc9nwngvxDe852PtcqI/hfQT6fQTx+Ejk
0fNPAAK8j0SepM8z/xLgfST0h+GVhfYbXlnoX8Mrg35lsLcM8f0o7P0o7P0o
5r/LhvfREN/wng9lw3seeM9DPx83vOeBtw36bQvHDc/HDW8b8LYB72Ph9w3v
Y8iXj0G/j4XxMjwfN7wXgPcC8F6Afi9gvr2A+JaHsuG5bHjlmL8+bnjlyL+P
I/8+jnz5OPT7OPLl42G8De9FxPdFxONF5MuLyJcXgfcJ8NsnwK+fAB9/Anz7
iZBfDW+78m3J9rBeGt9s1/4h6rJ9b7v2G6Pb13GD/sLlPNz0dtRj/34eb3k7
+o2XwudNv5cUr8Jl0++liPZ/L2l/NfoS+h/gTQNv3mXT7yX0Gy+rvSUvK17F
y6E9pt/L6E9e1niMvoz4vaz9zzTw5l+G/16G/ypC2fSrQH9XofGI+vOmX4Xi
jVagPldofzddAf2At1wB/+2Afjug3w7N3+gO1P8d2r+M7kC936H92bQ/b/rt
0Pq8DLyCV0LZ9HtF7a14RfuPqMum3yvar42+Av1eUX6YfgX9IPCWgVewU/mj
xGXTb6fye3Qn6stO5fvRneDLnSH/mX47wZ87w3ps+u0M67Hp96rW65JXwdev
ar8SfVXxUq9GnpjzR78O9PPnTb9Xtb5Pv4p+wGXT71X0Q7u0fyrZpfZW7FJ7
o7vQf+3SejS6C/7bpfV4ehfq7S6tf8u7UC8rtb6WVKI+VWo/Fa1EfCsVb7QS
9asS+lVCP+AtV6Ievabrk5LXkH+vaT2LvoZ++DXtJ0eBN/Ea5u9rmB/AW34N
+r2O+fE69Hsd8/d16Pc6+AV4E69rPZ4G3vzrmL+vQ7/d8N9urCd3a38R3Y34
umz67Ub+7cb82B3OL9NvN+bH7siX3k7nH60G+r0Rjpt+Lpt+b4Tz0/R7I3zf
9HvD6laAN+qy6eey6efvm35vQL83lA8K3gS/uGz6vQn93oR+b6q9o29Cvzdt
v+b/BPq9CX55E/z3JvTbE8qm3x61t2KP2hvdA/32QL890G+P7Tf9KtBvj/Vj
vwr0c9n02xPaY/pFQjn/fFEkfN70jej7ZS6vtw+KF4mE+pg9wIv7uNnnch5u
xJ83eyPWrz1cxxt32eyPWL/wv9fxpqDfdMRwHq7jzQJv3sfzeIuwd9nHze8R
61d+Gfhvbyib//aG+pj/9qp+ZS6b//aqfhGXzX974b+9of7mv71q78je0J/m
v73w3174D/pNAW8aeLP+vPnP9TX/AW/Zv2f+c9n8t0/1K9qH/NuH/NuneBX7
4L991p8G8Yju03jE98F/wBvZp/qNQr9x6DexD/7bp/Gddtn8t0/zZd71Nf/t
s/++Evhvn9WPlcB/Lpv/qkLZ/Oey+c9l81+V9c//K+CfqvD75r+q8PvmP3/e
/Fel+qUcP483UmX16xeB/6rsvQeB/6qsPv088F+V9Sc/D/xXZfXufwZ8VqX2
zsLeedfH/Ofvm/+qrN4GeKvQr2B/KJv/9ofPm/9cNv/58+a//apfZL/qF/Xn
zX/AS+1X/Ub2h/qb/1w2/0G/if1q7xTwpqHfLPSb36/5suj6mv/2a76s7g/9
bf47gPw7AP8dULyyA5ovFQdCfPOfy+a/Azo/4i6b/w6E+pj/Dqi9owc0vuMH
NF8mDmg+Tx1Qe6cPqL2zB8B/0G8R+i378+a/A8pXBdWoH9WoH9Xh8+a/6pCP
zH/VWi8j1ai/Lpv/qpVPU9XaP4wAb7Ra+4lx4E1Uaz2fqka/VK39wWx12L+Y
/3zc/Oey+Q/6rQKv4KDiFR3U/qjEZfPfQdWv4qDWt8hB7YeiB1W/+EH0Lwfh
v4Oq3yj0Gz+I+nFQ69HUwTDe5r+DGo/Zg+hf/Hnz38Ewn8x/B8N8NP8dVL4v
OKTzreiQ8n2Jy+a/QyG++e+Q1rfIoVAf898h1N9DWi9Th3R+jBzS/mr0kM6P
cZfNf8CbOhT6y/wH/WYPYf4Cb/EQ/Ad7Vw/BfzWKV1SjeCU16P9qNL4VNai/
NWpvFHhxf9/8B7wRl81/NZi/NZi/NTrfpmowf2t0/TFbg/VZjc63xRqdb8v+
vPkPeAWHFa/osM63ksOqX9nhcD1l/jus663IYV2fRQ/rflH8MPbzD+t+z8hh
7Occ1v2fceBNHNbzhingTR/W/abZw1h/H9b9p8XDur+0fFjXs6sum/+OqH5F
R7AePhL6x/x3BOdhR1S/CPCiR+C/I9ifO6L7ASPAGz2i+3vjR3Q9PAH9po5o
vkwfQf04gvpxRPN58Yjy8/IR5YPVI8r3BVGtl0VRrD+imL9R8F9U+SoSBf9F
db0V93HzH/BGosoHo1Hll/Eo+A94U1HwXxT1A/rNw97FKPwXVT5YjWL9dlTx
io6qvSVHVb+yo/DfUfDfUazfjqL/O6r8nDqq/drIUfR/R9H/HUX/57L576j2
p9NHdb0wexT989Gw/zb/HdX+fhl4q/49898x1N9jql/JMdRfHzf/HUP/DLzo
Mazfjul6MHUM67dj8N8xtXf8mK4XJo7Bf8CbBt6sP2/+g72LsHf5GPqXY6i/
x9E/H0f/fFz78bLj8N9xrN+Oq37R4/DfceTfceTfccxf4I0fh/+OazymjsN/
0G/2uObzPPAWj8N/0G8V+hXU6vOFtcjHWn2/uBb9Ya3yX2mt9rNltdqvltcq
P1XUKl9U1mI9A7xq4EVrlZ9itWH9sHjVKt8narWfSNVq/5Gt1fozUqv15Uwt
+vta7XfGatHvQ7+LtdrfTNTq/vgk9Juq1fXItVrsl9dqPZ2pRb9Wq/vJc7B3
HvFYgL2Ltcr3S4jHcq32lyu1WK/Van1ZQ3wL6tTewjrt34rqtL8orkN/U6f9
Rmmd9mNlwCuvw/lAnZ5vVNbp+WWkTs8fqoEXhX4x4MXrtF9L1KF/qtPziSzw
Ruo0n8/U4TygTuM7VqfxHa/TfL4IvIk67Z8nYe9Unfar1+C/acRjBnizddrf
zcF/88BbqNN+c7FO+/GlOr0Ptlyn94NW6vR8eRXxWIN+BfUaj8J67VeL6rVf
Lq5H/tWrfqX12r+XAa8ceBX1el5XWa/3/yL1am91Pc576/U+Vaxez4vj9Xr+
mwBeql79l63Heshlyz/YO1qv820MeOP1Go+L9bivWK/zdxL+m6rX9cg16DcN
/83U632G2Xo9L52D/+Z93PIP/lv0ccu/epw31+v59grwVuv1PuUa9CuI6Xq0
MIb1XEznR3EM54kxzefSGNZ7MeWX8hjOb2PgP+BFYuC/mPJBFPrFYjo/4sBL
xHB/AvZmYzo/RmKaL2diyD/4byym9w/HY5ovF2OazxPAm4T/pmLKp9diqL8x
rW8zMa2XszHdb52Lab2cj2m9XIih/saU75diyvfLiO9KDOs16LcW0/2wggZd
3xY2YD+rQddrxQ3Y32rQfrK0Af12g67nyhu0n69o0PVdZYOujyIN2p9W+7jl
n8uWfy5b/jXo+ijRgP69QfvJbIPur480aL92pgH1twH9X4P2a+MN2l9dbMD+
W4P2p5MN2A+GftcasD/XgPwD3myD9ldz0G++AfkHexcbtN9dcjnvvuUG3T9Z
gX6rDbo/uAb/FTSGch6vsFHzuahR51txo/qvpFH7yVKX83hljTrfyhtxftKo
68XKRuzn+Hger7oR649GjW+sEecFjeq/hNuTx0s1ajyysHekEf1fI+7DuZyH
G2vU/mq8Ufn0YiPuzzdqvzvp4/n3phq1f7nWiP4PeDON2u/OQr+5Rqw/GjVf
FhqxH4X4Lnn8Lf8akX/w32oj8g/xKGjSeBQ24TypSfvn4iaNR0kT6i/wyprU
3vImrH+b7L1w/duE/bCmkM8s/5pwvtyk+wWxJt0PiDeF5++Wf03h+bvxn8uW
f01WH/85yL8mq4//HORf07rfg/xz2fjP37f88/ct//x5yz/gTQJvqsny6Z+C
/GuyfP2nIP983PLPZcs/2DsH/eZ93PKvSe8nLLps+Qe8ZfhvpSm8z2D559+z
/HPZ8u9E6B+rvy5b/p1Q/xWfULySE6pfKfDKToT+tPwDXsUJtbcSeJETam/1
CfVf9ETob8u/E2F8LP9O2Pz4WZB/Llv+uWz557Ll3wmbT/eD/Dth8+l+kH/+
Pcu/E5ov4/685Z/Lln+Ob/nnsuWfy5Z/J4z/l4L8O2F88j+C/HPZ8g94cz5u
+XfC+OutIP9g7yLwlly2/IN+K7B3FXhrwCs4qXiFJ42f3gry76TqV+yy5Z/L
ln8nw+9b/p3U+Jaf1PlbcVLnb+VJ5YOIj1v+ndT4RoEXO4n8c9ny7yTyz/W1
/Dup/hsB3hngjUK/Meg3fhL8B7yJk8pXk8CbAt4194/lH/BmoN8s7J2DvfPw
3wLwFhGPJcR3GfFdOanzd/Wk1o81ly3/4iGfWP7FwX9x5efiOPgvrvWtNI77
WnG9P1Ue1/tlFXG9n1UZx3kA8KpdtvyL632wGPDiwEvE9T5UKq71PBvHeUxc
71OdieN+GPQbg73jcb0PdjGu51UTcT3fmozjPAL6XYN+07B3BnizwJsD3nxc
zxcW4jgPgr1LsHcZ8ViBvavw35rLln/NilfYrP4ratZ8KW5We0ua1d7SZtx3
a9bzmvJm3B9s1n6tshnrX5ct/5pxP6RZ1+exZty3aTacYD8i0Yz7r826Pso2
a3860qznM2eatR8fbdbz4rFm7D8D7yLwJpp1v2QSeFPNWP82632h6WbdP5hp
1v55tln3I+aadT9ivln3IxaAtwi8pWbcD2rW/ZIVxGMVeGvNuh9R0KLzo7AF
+dei/WRxS8h3ln8tms+lLeC/Fp0f5S3gP8e3/GtB/9ei/FzdovwcbdH6FmtR
fo63KN8nWrS/TwEv24L1R4uuF860aL0cbUH9Bd449LvYovVoAvpNQr+pFu2f
r7Vg/dGC+tuC+tui/elci9bz+Rbtnxdg76LHx/KvBeuPFqw/WrReriIeay1Y
f7SqfoWtam9Rq9bz4la1t6RV+/HSVu03yoBXDryKVrW3shX9H/CqW7XfiLaG
/a3lX6v24/FW7U8TLlv+tWq/m23VfncEeGdadb0w2qr90Fir9uPj/r7lX6v2
4xOt2o9PQr8p6HcNeNM+bvnnsuUf8OZctvyD/xbcv5Z/sHepVdczy4jHCvBW
Ye8a8AraFK+wLcwvy7827XeL25SvStp0fpS2of62ab9R3ob7H22ov23o/9qU
n6v9fcu/Nu1fYm24r9SG/ec2reepNq1HWeg34rLln8uWf8Abg37j0O8i9Jto
0/o22ab1cqpN+41rbWE/YfnXpucBM224b9um5wtzwJtvQ/2FvYvQbwn6Lbfp
fZWVNtTfNu2H1qBfQXtoj+Wfy5Z/7WpvcTvuF7Vr/1Lajvsv7dh/btf99op2
3e+sbMf9l3bth6rbdX8y2q77k7F2PR+Mt+t+e6Jdz49S7bpfnG3H/QPgnQHe
aDvOP6DfOOy9CHsnYO8k/DfVjv4P8ZhuR/61o/9r1/OjuXb0f+3Iv3b0f+06
f5eAt9yu/LLSrvN3tV35Za0dvz/qwPqjQ/u1og5dLxR34PddHcpXpR3KV2Ud
4L8OXb9VAK+yQ/vJSIf+vqi6Q/vTaEfYj1r+dej6Mt6h67cE8FLAy3Zo/zLS
oXx/pkP709EO7U/HOrTfGO9A/9eB/q8D/V+H7p9Odeh+57UO7demO9D/dWg/
NNuh/cFch/YH8x2ovx3Y/wPeUgfqL/BWOrD/B7w14BUk9PsbEtovFCZ0v29j
QvcvixLa725K6PeLE6rvZuCVJLQf2ZLAfmJi3e51vK2JcP/V8tvlPN42f97y
3eX839sTxhc/DfI/YXz+39fxdiZs/v80mA8Jm+//bR1vt4/b/ABeVcKeuxfM
F38/j1fj79v8AV6tyzaf/P08XhPw4sBrBV4CeF0u2/yDvWm3x+ajy3m8IeCN
AO+0P2/zFf476/6x+Zsw/rm3jncO9o7B3vOwd9zfz+NdcHyb74jHJeBNAO8y
/DcJvCsJ4+OfBPzgch7vqutjfAF7r8N/0/DfDfhvxvMzj3Mzgf4+oecRt3zc
+Cah64Pb/rzxD+bHnQTOIxJ6PnA3AX4CH9xLYL0Afrmf0PXcckLXfw8Sun5f
Seh68GFC1wOrCV2/PkroecJaQtfbj8FXBUnl8w1JrIeTyu8bk1ifJPV8axPw
ioG3Oanrq5Kkrp+2AK80qfZuTer+RFlS/bctifV2Uuvb9iTO/5Ja73YmtT5W
Am93Uv0XSep+SBXsrU5qPGqSOL9Jar7UJrV+xJJaP5uSen4XRzxak7o/lEA8
uuC/FPRLQ78s7B2CvSNJzefTSewXJLU+n01qfRtN6nw7lwzno/FfUufveR83
/kuG/GD857LxH/AuAW8iqfP3MvSbTOp+w5Wk8sEU8K4msV+RVL66DnungXcj
qfwyA/1uQr9Z4N1KYr/D7Tf+g//m4b87Pm78l9R+4y7wFoF3z2X7G3j3k9pv
LCeV7x8ktf6uJLUePUxqvVx12fgvqfVoLWn99T8G/Je0/v4fA/7rDMeN/zrD
ceO/zrB+Gf91an0r6tT6tqlT9Svu1Pq7uVP1K+kMzxmN/3zc+K9T6+9W6Ffm
7xv/Aa+80/r3HwX812nz9YcB/3Vavi0E/Ndp+fZfAv5z2fjPnzf+c9n4D3jV
Lhv/dRp/LQT812l88l8D/vNx4z8fN/5z2fjPZeO/TuO3uwH/uWz812n8/qOA
/3zc+K/T1lc/DvgP/hty2fjPnzf+67T12o8D/kM8zvrzxn/Iv3Odms9jHm/j
P88P47/OsJ8z/kO+XATeJZeN/xzf+A/5N+njxn+d6P+Qz1cxP651an963Z83
/oN+N6DfjPvT+A/+m3XZ+M/jY/yHeNwG3jzsvQP9FmDvXY+XxRX+uwe8Jfjv
vn/f+A/z90Gn8tWKy8Z//rzxH/L5EebHWqfV82B+PMb8KOgK3zf+61L/FXbp
/NjosvFfl87fTS4b/3Wpfpu7wngZ//n3jP+6dL6VdoX6G/91KR+Udam927pC
fjP+g37boV9FV8g3xn8uG/853vfz/OfjT+X5r8vq7Q8C/vPnjf9cNv7z7+fx
om5fHq8W8YghHk0uG//583m8VpfzeAngdXUpX6WAlwZe1uOdxxtCPEYQ39Mu
G//Bf2ddzuONIh7nurR+jHVpPTrv/s7jjXdZf/WDdbwLiMdF4F3y543/HD+P
d9nlPN6kP2/85/jGfy4b//nzebxr0O868KaBdwN4M7D3JvBmYe8t19/4D/l8
2+OXx5tHPO50aT1fgP/udmk9X3T8PN49H8/jLQHvPvRbRnwfAG/F8yOP9xD5
sor59gh8sIb8ewx7C7oVb0O34hV26/zd2K3+K+rW+bapW+dbcbfO383d4L/u
sB7k8bb4eB6vtFv7ja3+feM/6LetW+0t71Z7t3fr/K3oVj7d2a18X9mtfLAb
9kagX1W38kE18GqAF4W9tcCLwX9N8F+8O6yHxn/dYb00/nP/Gv91g/+Al3bZ
+M+/b/wH/Uag3+lu9H+w9yz8N4p8Oef+Mv7zeBn/dWv9GO/W+nEB8b2IfLnU
rfNjAvpdRjwmYe8V2DvVrfXjKvCudWv9uA79pmHvjW6tHzPAuwm8WeDdQj7P
wd7bmB/ziMcdxGMB+XwX+i1Cv3vAWwK/3Id+y5gfD1w2/kP+PezWfncV8XiE
eKxBv8fQr6BH14MbesB/PVo/Nvao/4p6tB/a1KPxKO7R/Nvco/Eo6dF83tKj
fF/ao/Vja4/Wo7IerUfberR+lEO/7cCrgL07e9R/lT3gvx7Nv0iP5ktVj/JL
dY/yQU2P8n20J1wfGP/16P5BrEf3D5p6dD8i7u8b//WA/3p0vdDVo+uPlI8b
//WA//x5478e5dMRf9/4D3hnYO9Z4I32aD6fg//GepSfz8PecfjvAvx3Ef67
BP9NuGz81xOup43/XDb+A94U8K7688Z/PeH+lfFfD84/enQ/50aPrqdnoN9N
l43/enS9eqtH19NzPbqevu2y8Z/Lxn/w30IP1r89uh+x6Plm/If8W+rB+hd4
y9DvAfRb8eeN/6DfKuLxCP5bg/8ew96ClOJtSOn5W2FKz8s2psL9SeM/l43/
Uhrf4pTun25Ore8LBPznsvEf8EpTup+9FXhlwNsGvHKXjf9S4X608V9K9593
pnT/vtKfN/5LhfvLxn8pPX+rgn7VKT2frnHZ+M/tM/6DvbGU7hc3uWz857Lx
X0rnWyKl59NdKZz/pnT+plOaL9mUzrehlO6vjSBfTqf0PPlMSvngbEr5ZRT5
dw54Y8i/845v/Af/XUA8Lqb0PPRSCucfiMdlxHcyhfOPFH4fltLzvKsuG/+l
wvMq478U7g+n9PzoBvBm/PvGf/594z/odwv5PAd7byOf591+4z/gLQDvLubH
ovvL+A/zbcll4z+Xjf+g3wPot4L4PgS/rCJfHiH/1jA/HkO/gl7Vb0Ov6lfY
q/pt9HHjv17Nl029eh5V3KvnUZt7cf+lV+3dArzSXs3nrcArg37bepWfy3vV
3u3QrwJ4O6FfJfTbDbwI/FfVq3xV7ePGf73gv17Nv1rgxXqVT5t6lU/jiEdr
r+ZLAv7rcv8Y//Xq+Vsa/ssCb6hX+XkE9p7uBf/1Kl+d7VV+HgXeOeCN9Srf
n+/VfB5HPC4A7yLwLiEeE/Df5V6tv5O9Wj+u9Op8m+pF/9eL/q9X+f468Kah
3w3k8wzy5aaPG/8hvreQL3PIl9u9ylfzwLuD+bGA+XEX82OxV/n5Xq/y/VKv
3me436u/V1nu1fsHD1w2/nPZ+A94q716P+JRr96PWMP8fQx7C/q0H9rQp/Wy
sE/P4ze6bPzXp/Zu6tP7PsV9uP/Xp/qVuGz8B7zSPrV3K/DKgLcNeOXA296n
9a0CeDthbyXs3e3vG//Bf1V96P/6NJ9r+sB/fTp/a/t0fsT6cP+vD/f/+pRf
Wvu0X0v0ab/W1afrhVSfrhfSfbr+yAJvCPqNuP7Gfy4b//Vp/p3t0/wb7cP9
lz7wXx/4rw/816d8daEP/Ae8S8CbAN7lPq1Hk33KL1cwP6b6tB+62qf8cg35
ch35PI38u4F8nkH+3UQ+zyKfb/Wh/+tTvrqNfJmH/+70aX+10KfrhbvIv0Xg
3UO+LCEe94G33If7L8Bb6dN6+RD6rQLvEfRbA97jPq1HBWnF25DW/YPCNNa/
aV0fFaUVb1Ma91/Sur+xOa3n5yVp3c/Zktb1eSnwtqZ1/pZBv21prb/laY3H
9rTyQQXwdqZ1P6IyrXywG/pFoF9VWvc3qtO6X1IDe6PQrxbxiKW1X2tKY/2b
xvoX8Uikdf+qC/am4L90WvMlm0b/l0b/l0b/lwb/Ae9sWufbKPDO+fvGf2nl
l/Np5ZfxtPLphTTWv2mtR5eg34R/3+6/+PP55yaBdyWt/dBUWvnlqst2/8Xl
PN51/77xH/x3A/rNuGz3X9J6H24W/ruFfJlLK7/cTuv9unng3UlrfVuAfneR
f4tpvd9+D3hLyL/7aa3ny8i/B9BvJa337x9ifqzC3kfw3xr89xjxLehH/9eP
/q8fv//wcbv/0q94m/qx/gXe5n7tx0v69T76FuCV9mP/r1/nR1m/2rsNeOXA
2w79Kvp1/2Vnv+6/VPbr/eLd/Xo/O9Kv9byqX+t5db/O35p+vQ8cBV6ty8Z/
wGvqx/1nf97u//l4Hi/Rr/14V7+uF1LAS7ts9//69f79UD/uP8N/p/u1fz4D
e8/C3lHYew54Y4jHedg7DnsvIB4X4b9LiMcE8vmyy8Z/yJcr/eA/4F2Fvdeg
33XYO+3+NP5z2fgP+XcT/ptFPG4hvnOI723oN++y8R/8twC8u8Bb7Nf72ff6
le+XgHcf9i73Y/2L+K7488Z//fj9R7+upx8hX9aQz4/hv4KM6rcho/YWZhRv
Y0b1K8pofDdltB8vzuD8I6PrwZIM+C+j99FLM1qPtma0HpVltL5ty2j9KAfe
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
8f8PFD3g/Q==
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdfW1MnOeZ7qROaZywXVJSNzRuSkJCTEJS7LGxsbE9NjYGe4wHBg8MnzPD
zDufzAdUVtla1VRuUa2Duq6orHLWqli5QrUWVa6orKC1Kna9Qmstp/KKlc+i
Y62ovBqtVXTkih6rqD49J35v3ufWdeVPdOedud7743qu534+hrwTyXXFPudy
uRZfc7le/Bv/CXr++8yLfxaPo33/eOHoq//z5mf2fveLf1aP//av3vjFmZec
52vGlu+t0+cfm+dx68U/peNdn779/d+Z7z8x9v9YefHPhrEF7yl9/vfHbdgd
Dv7m8Z/lP3vhDuf7fzDP5X3PzHPB++Pxz7z57V+97OBtGVvw/mRswXtu3i94
f6Z4XR4nXvm8y4P+vuS593/2DPz155zvf848l/ftMN8XuJcJT23B+7yxBa/M
4/gjeF8gvFcI7xUP1m+nB+vzKuG9RnjlhFfuQb78hbEF74uE95cmH/K5CsqP
2oJfYb5vf939OuXjdcL7kgfrpbbgfYn8qSS8Ss9f/+NngP+vdxvvDWML3hsU
/xsmXsH7sucFfd74c+823pc9Lz6e/78O3i5jC94u83nB2+X5+vd/1/npZ7bg
fYXwvkJ4b3oGXjj43MFTW/DUFrwq833BqyK8r5r3C95XTfyC91WK9y2q/1vE
l93E190GX/B2E97XPM74FbyveXD8vm2eC97bHhyvb3uefUaHf/y8g/d1D473
rxNeteeFO29/3uFXNeFXm8/L96vpfWoL3juEp7bgvWP8E7x3PDKMHTz9vOC9
S3jvmu8L3ruE967xX/DUFrwaM14kPzUUbw3lv4bwajyoz+8R3nuE9x7l7z0a
3+/R+H3ffF7w3jf5Fbz3Ce99qsf7lL9aD+p7LdWj1uRf8GpNPgVPnwveB+b7
gveB57PRc/TVLzh4H3jaXgjMFxw8tQXvA8+L9HW+4uDtMbbg7TGfF7w9Bl/w
9hCePhe8OvNc8OoMvuCpLXh1nldtAAevTv77TgfvQ2ML3oeE96Gn7oXAGDz9
vOB96Pn2iwK86uB95Nn4LH3ff83BU1vw1BY8tQXvI9Grv3Dw6kUfv+jgqS14
ague2oJXL/8ud/A+Jv8+Jv8+Jv8+Jv8+JrxPjL+Cp7bgfUJ4n4helzt4+lzw
vmHyKXhqC943TD0FT58L3jcIrwHfX9VgPi9604DxeRsoHw1Y32ID8UttG25B
bfGnwfDHxiupLf7tRX5V7TX8Ev/2Ip53L+JZe3G8FffS+NxL/u2l8bXXjH/x
T5+Lf/tQP6rUFv/2IZ53H42ffeTfPsrfPjO+xb99pHf7UG9L+2g+chu9Ev/c
ND+6Ue+8btJbN84fRTfND27sZxfc1G+5sb8suWn+2I/9ctV+gy/+7cd4vfvJ
v/2o98X9NB/uR71eILwVwisRnusA4lUdIP1XW/w7gHyxDuD8UTxAek54Cwdo
vj2A/XHpAPUvjTgfVjXS/NmI8623kfrtRqxHUZ+Lf404vy80Uv4aKX+NxL+D
lL+DJh/i30Gq70Hjv/h3kOpLeDMHkc8LB2n8HsT5tHSQ5vNDON6qDtH8eQjn
M+8h0ttDRq/Fv0Ok54dQrxcOkf4dQj0oHaL5vIn0pYny14T9o7eJ+NdE/Gsi
/Wsy7xP/mox+in9NpM9N1B8cNrb4p7b4d5jyd9jMT+LfYcQrHib9O4z90cJh
yt9hyt9h0ucjGG/VEarvERO/+HeE+q8jlL8jxL8jxL8j1D8ewX69pLb410zj
o5n0uZn0pZn612YaH82kL82Uv2bqz9QW/5pNfcS/o1Tfo1Tfo9g/eo/S+DhK
/YHa4t9R7LcWjlL/Q3ilo+TfMex3qo5R/3bM9Fvi3zFZf5r+UG3x75isd//S
8e+Y/PcKxz+1xT/9vPh3TNa7FY5/x40t/h0XvX3d8e+46OuXHP+Oy3z5uuPf
ccQrEt6Mfl78U1v80/eJf2qLfx78fLnHxCf+esz77O/X6vPt9sHY23CI5/Wg
v0EPxecx8dtw42pLvB7Mz5RH5odKJ361bbw5j4yHLzv9kkfmlze28ZbUlvyo
beOt6fclXx4ZT1/ZxttUW/J3wtiSP7Ulf2pL/k6Ivjh47hOI5yE87wnR3zed
/J3YxnXyp7bkT23Jn9qSvxOiBw7ejNqSP32f5E9tyZ/6L/kjvDV9LvnT55I/
fS75O2meS/5OGn/l3ydl/H/Vyd9JGd9vOfnT55K/k4Kz28mf2pK/k6IHX3Py
p88lfydFf3Y7+VNb8kd4M4Q3d1L05G0nf2pL/tSW/Kkt+VNb8ndS1qsO3qa+
T/LXYmzJn9qSvxbzfcmf2qI/LaJfX3fyp7bkrwX9C7agfxbhjbdgvMUWjHdK
Py/5I7w5fb/oWYvgVDv5axH9esfJn9qSP7Ulf2rbeJstoifvOvk7hXjlp0Sf
HLyqU6Jf1U7+1Jb8qS35U1vyd8r4L/lTW/KntuTvFMZbJLwp8m/mFMY7p88l
f/pc8qfPJX+nKH+nRE9rnPydEt7VOPkjPNdp9K/8NMZbdZrydxrr6z5N/DtN
/DtN/DtN4/e0GZ+Sv9OoB8XTpH+nUU9nTqNezZ02+iv5O230SfJHeCuEt3Ya
9blEeJunpZ/c5eSvFfW0vBX1tKpV+hujf63mfZK/VtRnj9qSv1aaP1pR761W
46/kT98n+VNb8teK+jxD/s21Gn2W/Kkt+Ws19ZH86fclf62UP30u+WvF+c11
ButRfobmjzOUvzMYr/sM4nnOYLzeM+hf8Az6ZxHe+BnkS/EMzm9TZ0y9JX9n
sD+YO2P4Ifk7Y/oRyZ8+l/wR3toZmn/VlvydQb642pAv5W2UvzaMt7aN+NdG
/CM8b5vxV/KntuSvDeMdb8N4i20Y71Qb5a+Nxm8bxrvQhv3VUhv2Vyvk31qb
6Qclf2pL/tqwn3S1m/5T8teO/WlVu+in05/Wqi35a0c8Tzv2p9527E+D7djv
WoQ3rs8lf/pc8qe25K/d9NeSP7Ulf/p5yV879uMrakv+CK9E/m0Snuss+ld+
lvJ3FutRe1bWx1928qe25O8sjjfvWdTT4FnSv7PIl/Gz2J8Wz6I+T50l/p0l
/im+5O8szR/k38pZ0r+zqFels0YvJX9nUU9d57A/LVdb8nfOfF7ydw712X2O
+udzqKfec5S/c6hX1jmc38bP4XgrnqPxS3gzhDd3jsYv4S0R3so5U3/Jn9qS
P/Jvk/BcXlq/ebG+VV6jZ5I/L+mfl/TPS/rnpfx5iX9emj+8NP96cb6c8pr6
Sf682N/PebEfX/AKjumfvbT+8NL6w4t8KXmxv9pUfMnfeWNL/s7T+uM89mu1
52n9cR7XM57ztH4jvOB5jNfSz0v+CK9I/k2dp/UH4c2dN/mQ/J3H/nTpPPan
K2pL/s6bfEv+zmO/u3ke1wuuDuzHyzto/dGB/X1tB/b37g5af3SY90v+CC9I
eFYHrmfGOzDeYgfGO9WBfJnpoPVbh8m/5K8D19NLHdT/qS356yD968DxttlB
/csF6l8uUP9ygfq/C6in7guop54LpH8XqP+7gHpgXcD+dPwCrT8UX/J3Afk8
c8HkR/J3AcfbwgXK3wXsT1co3jW1JX/k3yb55/Lh+8t8tJ/gw/FVqba8x4d4
1T6ab3wYf70P/XH7sP5NPurHfZjvVh/Vh/D8PqqXD/kSIjzLh/NxxkfzmQ/3
8yZ8NL/5sJ+d9NF858P+dtqH/eaMD9eDsz7cf5zzmfnMxpsnvAUfzleL5N+S
D+fXZR+OlxUfjodVqseaD+ejdapvieq74cP+YpPwtgjP1Ynjs6yT1nOdOP4r
O7G+VZ3Ev07aL+xEvanvJP514vzc1In9mof8a+2k9SHh+Tsx3mAnxhvqxPxZ
ndi/ZToxf+OdON9PEF6R/JvsxPpOaT6Ff+TfDOVvlvDmOrG+853IlwWqx2In
jt+lThxvy53U/3bieFvtpPVYJ46P9U7kc4nwNqgemxTvFsXr6iL+dSFfyrsw
3sourEdVF+pzdRf1O13Yz9R3oZ66u1BPm7qoH9Lnwr8u4l8X1tffRfrXRfyj
eC2KN9NF/OvC9cSE+iP868L+abIL548pinea8GYIb7YLx8dcF46P+S7qL7qw
H1nsov32LtO/CP+6sB9c6cJ+b7XL9EPCvy7sh9a7aH++C/vpjS7q97pMPyb8
6zL9mPDPb/ajhX9+s98q/PPj/mul3+zPSt39Mh4+cPjnl/ngA4d/fhl/exz+
+WW87HH455fxVevwT23hn1/mn/cd/un7hH9qC//0fcI/9Uf4R/5Z5F/GL/z8
0OGfX3DqHP6pLfzTzwv/9LnwT/GFf/p54Z9f+P+hwz+/8O8jh3/6XPjnFz7W
O/xTW/intvDPL3z7xOGfPhf++YXPHzv8088L//zCp284/FNb+OeX/97g8M8v
fPzE4R/hbelz4V+3eb/wr9t8XvjXjXiV3ds8cvin3xf+EV6tfl++1238F/51
o39N3eifpxvjbVVb+Nct47XB4Z/awr9uWe/sdfintvCve/sc0eFft4wvt8M/
tYV/3dKfHXD41y3jpdHhn9rCP7WFf90yng44/FNb+Ke28E9t4R/hLRDeYreM
x4MO/9QW/qkt/CO81W4Znwcd/hHeur7P/l6J/NvQ7wv/CG9L3yf8u2jw7f9e
dhHxyi+if5UXZT9wv8O/i5i/6ovoXy3h1ast/CO8JrWFf2rbeK0XTf2Ff4Tn
J7wg4YUIz7po+CX80+fCP32f8I/iLepzG26S/JtSW/h3Efk8Q/7N6nMbb+4i
jo/5i2b8CP/UFv5dxPG2dFHmt33beMv6XPinz4V/agv/1Bb+EV5JbeEf4W2q
/8I/wnMFzHPhX8DkQ/gXQD2oDBD/9Lnwj/BqA1jfen0u/AtgfZsCqC+eANa3
NYB89gaIf4QXJLyQ2qJ/AeRLJoB8Gad4JyjeYsDkU/QvgHyZIrzpAOlfAPVg
NoB6NRfYzovDP7WFfwHpZw45/AvIfH/I4Z8+F/3T58K/gMzvhx3+BWT+P+Lw
T23hn35e5t+A9BOHHf6pLfxTf4V/agv/eow/Mv/2GH+Ff2oL/3ow3iq1hX+E
V9uD+avvwfy5Ca+px+i18K8H56PWHuJfD/Gvh/jXQ/wjPIvwMoQ33oN8mehB
vhR7kM+ThDfVQ/zrQT7PkH+z+lz414PjY74H9WChB/VlUW3hn9rCvx4cHys9
qAerhLfWg+NtnfJXong3KH+bVI+tHpw/XL3Yv5T1Yv9S3kvzr9rCv17sD6p7
cfzWEl69Phf+9WJ/0ER4HsJr7cXx4e3F8eHXzwv/epHPIbWFf4SX6TXjR/jX
i+N3oteMb+Ffr9EH4V+v9PfNDv/0ufCvF/VlRj8v/FNb+NeL+jLfi3q1oLbw
T23hH/m3rM+Ff4S3qu8T/lG862oL/8i/DcLbJLytXtK/IOlf0NRH+BfEfrIy
iHypCmJ9q4NY39og8Y/w3Pp+xy/QU08Q54/WIPEvSPwj/4JB5HOI/LMIL0P+
jQcxfxNBrG9R/Rb+BVHvp4LI52nCmwlifWeDxL9tHIfP80FZrx1z+Ke28E9t
4Z/awj+1hX+KL/zT9wv/grKePOrwT23hH+FtkH+bQVlPOv5tkX+uPsQr60O8
8j7zfeFfH8Zbpc+Ff32yPj3u8I/w6vswXncfxtvUh3rg6cN+o7UPx6+3D/sN
fx/WN9iHfAn14fi1CC+j7xf+kX8TfdgPFfuQL5OEN9WHejDdh3o1Q3izfahX
c2oL//pQTxf6UE8XCW+J/FvuQ31eoXhXKd41qsc64ZX6SP8o3k3yb4vq4erH
epT1I155P/Zrlf1Y36p+1NPqfur/+rHfrSc8dz/pXz/1f/00//ajnnr7Sf8I
L9iP/XiI/LP6Ua8y/aR//TifT/TT+rcf+6HJflr/9uN6erqf+r9+Wv/2U/9H
8c730/5LP/ZDi5S/pX7U++V+nN9WKH+r/diPr1H+1il/JarvBtV3sx/H21Y/
8W+A+DeA4618AMdb5QDyuWrA6JnwT23h34DRV+HfAI43tz4XvwdQnz2E10r+
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
jufxV7V+on9qi/5RfafjuB68Hsd+bYbwbpB/s5S/m+TfXJzWvxTvPOHdpvwt
UP7uEP8WqR53iS9LxJd7NH6XiS/346gHKzR+H8RJ/+KoLw9JD9aIf4/ipH+E
95jwSuTfExofGxTvUxpvmzQ+nsWp/yO853HSvwT1fwnU57IEzh87Ezh/lCdw
vqxI4PxWmcD9q10JMx+L/qkt+pfA/qA6gf1BTQLn81rCqyO8erVF/xLYv7gT
eH++MYH9RlMC56NmitdD8bYkcD5vpfy1k3/eBPV/Cdyf9Cfo/CNB5x8J7CcH
CC+UwP3dEcKzErh/mkzgfnsmgfvjecIbT2B/eonyN5Gg/o/qW6R6XElQ/5fA
/uBqgta/CexfrhGfp4nP1xO0/k3g+LiRwPE2m0B9uZnA8TaXQD24lUC9mk/g
fHQ7Qft/Cdr/S6CeLiZQT+8maP+P8O4l8L72csJjD3NnP+x+AveHVhK4P/Qg
gftrqwmcPx4mcD5aS+D88Yj8W0/g/PY4gfNHieJ9QvFuUP6eEt4m+feM/NtK
0P5fwtxvEv1LmvyI/qkt+pdEvJ1JjLc8ifNvRRL31yqTWI9dSbzPVZU0971E
/9QW/UvS/b8k3metTeJ9szq1Rf/086J/Sbwf607ifbjGJN53bEqa+3iif2qL
/hFei75f9C+J983aKV4vxevT74v+EV4gSff/1Bb9I/9CSbxPOELxWhRvMmnu
G4r+Jbfz6uhfEu/bjifxvu2lJN4HnlB80T/yr0j5u0LxTlJ9r1K8U4R3LYn3
HaeTeP/0OuHNqC33X5J4P3GW+HczifcT55J4n/WWxi/3X5J4f/w2+beQxPud
dzTfon9J/PuAd9W28Zb086J/SbxPvZzE+8D3yb8V8u8B8WWV6vFQ4xf9o/w9
UtvGW6f6PqbxW6J6PEnifdGNJN7vfJrE+6ebSbzf+YzG21YS74s+T+LvZ1wp
+v1HCn+vUpbC3wftTCFeeQrxKlKop5Vqi/6pLfqXMvoo91/0uf3v6hTORzWE
V0v+1aWwHvUprEdDCvXFncJ6NKawvk0Ub3MK78d6KH8tlL9W8q89hfdtvSms
ry+F481P/gVSyJdgiu4/U7whwhtJIZ+tFP3+I2XGk9z/U9vGy6fo73Pqc9G/
FOlfin7/oc9tvGIK7/NfSeF9/skU/j3Rq+TfFOFdS6EeTKdQX65TvDPk340U
3kefJb7cpHrMUT1uUX3n9fOifynUlwXy706K9I/ivZsi/UvR7z+oHssU732K
d4Xq+4DqsUr1eKjvE/1L4e9THqXw79Guqy36l0J9LlG8T1Ko9xsU71Oq7yb5
90zfJ/qXwt+7PE/h72dcaczfjjTO52VpxNuZxnjL0/j7lArCqyS8XWnkc1Ua
f5+ym/Cq0/h7oRrFF/0jvDryr57wGsg/dxrz10h4TWmsR3Oa/j5wGn8v1KK2
6J/aon+aD9G/tPl9kehf2vy+SPQvbX5fJPqnz0X/9Puif4QXIv9GyD+L/Eum
kS8ZijefRj6PU/4upZHPE2nsNy6nkc/FNOkf+TdJ/LtK/k1RvNfIv2ny73oa
+6EZqu+NNOrpbJp+/5amv4+cxv75Vhr1ZT5N/V+a9C+N/fidNOrVotqif4S3
lMb56B75t0z+3Sf/VtKkfxTvKuE9JLy1NPV/afq9btr0K6J/aov+qS36p7bo
Xxr7jadp+vvOaer/0ri+3ErjfPQ8jfORK4P12JHBepRlsB47M/T7twz2GxUZ
+v1bBuejXRnsD6oyWN/dGaxHNflXk8F61JJ/dRmcL+szyJcG8s+dwfm3MYPr
y6YM8qU5g+PDk0H+tVD+WjPYH7RnsL/3Zqj/y1D/R/EGMsi/IMU7QPkLUbwj
hGdRPZJUjwzFm8/g/DtO9b1EeBMZ1JfLGZx/ixmcj65ksD+YzFD/l8H5ciqD
89u1DOlfBn+/el1t0b8M/n71Rgb7l1nCu5nB+Xcug3p6i+Kdp3rczuB8vkD8
u0P5W8zg/HGX6rGUwfXlParvMvH5Po3fFRofD2i8rRLewwzOb2vEv0cU7zrF
+5jqW8pgP/mE6rtBfHmawflyk/CeEV+2yL/n5J9rFP3bMYrzZdko+rdzFPHK
R+n3v6M4fitH6e8fjOL4rRol/RtFPa1WW/RPbdG/Ufr97yjqff0ozh8Nozgf
uUdxvdo4Sr//HcW/r908ir8H84zieV7LKO5nt47S+e8o/f10/b7o3yju7/pH
8XwwMIr7xUF9Lvqn+KJ/o3heNjKK5/HWKJ6/JQkvQ/7lR3G/fZzivTRK579q
i/5R/oqUvysU7+QonodeJbwpjUf0j/I3PYr77dcpfzNU3xvk3yzFe5PinSO8
W6P0+1/lk+jfKO6PLxDeHYp3keK9q+8T/SP/7hHeMvl3n+JdIbwHlL9Vyt9D
wlsjvEeUv3XCe0z1LRFfnlC8G+Tf01E8398k/54R3hbx+Tn558pi/nZk0b+y
LN4X2JnFeMuzOD4qssjnSsLblcX6VmXx96a7Ca+a8GqyWN/aLMZbR/7VZ3F8
NBCem/xrJP+asvT3D7LIZ08W9ydbsvj7+FbKX3sW9zu9WaPHon9qi/5lUZ8D
WdxPDGZxf3Igi/1kKIvrhZEs7t9bhJckvAzh5bO4/zyutuhfFvvdCcK7THjF
LM5vV8i/ySzOb1ez2D9PZenvv2Sxf5nOYj9+PYv90Iy+X/Qvi/PvLPl3M4vz
7xz5d4v8m8/iecrtLPYHC4R3h/K3mMV+7S75t5Sl/o/wlgnvPuGtUP4eZGn9
m8X+6mGW+r8s9qePstgPrZN/j7N0/kH1eJLFfmiD/HtK9djMYn/6jPC2KN7n
hOfKoX87cuhfWQ7ruzOH9S3PIV5Fjvq/HI6PXTmsR1UO/dudw/pW52j9m0M+
1+awn6zL4Xq1nvxryGH+3DnMX2OO1r/kX3MO1wueHK1/c9g/t+ZwfdSew/7e
m8P1my+H60F/DvdPAznkXzCH/BvQ56J/OVr/UrwW5S9J+ctQvHnCG6d6XMrh
+mNC/RH9y9H5B+Fd0c+L/pF/V8m/KeLLNarvNPH5eg7XlzOUvxtUj1mqx02q
xxzV91aO1r853O+8rfGJ/uVo/Uv5W6T83SW8pRyu3+7lcH2+TP7dp/ytUD0e
0HhbJb48zOF+0xrhPSL/1sm/xzQ+Sjnc331C42OD6vGU8DYJ71kO16tbOTwP
eE7+ufLIh5fUtuVhRx7z/7La9vApy+P6/JU85nun2jbea3mMrzxv/LHxvpjH
8VuRR/6/njf5t/Eq85j/N8i/XYT3JuFVqW3jvUV4uwnvbcKrziNf36F4a/KY
//co3to81mNPHvWtTm0b76M8jtd6tW28T/K035lHvu7NGz2QvjmP/c9+fW7j
NeaxfzmUp/NxwjuSx/m7WfFtvGN5nI885N8JwmvJ43x7Sm0brzWP+tdGeO2E
dy6P85lXP2/jdeSxf/ERXifxxU/569bnNl4gj/rSS+MjqPyw8frzqJ8DxJeh
POpBKI/jPUz8G6HxFiU8i/icoPGRJD1IU30zFG+W+JcnfSnQ+B0nvG8S3iXC
+xb5N0H1+DbhXab6fofwiuTfd2m8XSH9+x6Nt0nK3w9o/F4lvP9GeFOE90Pi
yzXSlx9RPaZJD35M+btOeD8hPs+Qf39DeDeUPzbeT4l/s8S/v82b+czGu0n8
+xnxb4707+c0Pm7pcxvv72h8zBPeL8i/25S/X9L4WCB9/hXFeyeP57+f5vG8
eDFvzhNsvL/P43nCXX1uf+/XeTyvXcrjecQ/EN69PJ73/hPhLZN//0x499Uf
G+9fCG+F8H5D/j2geP+V8Fbz5jzexvs3fW5/72He/P+Kbbx/1+fSPxHe/yK8
R4T3H+TfOsX7W/XXxntM8f4n1bdE/Psv0pcnpC+/o/G7QeP3f9N4e0r68nsa
v5vE5z8Qn5+RvvyR+LxF4/dP5N9zivfPND5cBRxvLxVwvO0ooH8vF9C/sgLm
75UC/b3UAsb7GuGVE94XC9hPVpB/rxdw/FYWMN431Jb+r4DxvllAfa6ieN8i
/3aTf28TXjX5904B5/OaAt53eU9t4WUBzxv3FHC81RVQTz8q0P0ewvuE8tdQ
wPXFXsJzk3/79fvS/xHeoQLqfRPhHSmg/jWTf8coXg/l7wThtRRw/J4qoB60
qm3jtVH+2guoB+coXi/F20H++Qo43jqJf37iSzfhBQqoz71UjyDF20/+DRD/
hmi8hYjPYRpvIwWcz6M0Piyqb4L8SxZQX9IF2h8pUP9XwP45X6D+j8bbOOXv
mxTvpQLq37dIXyYK2N9/u4D9/eUCrme+U6D+r4D90HcLqPdXSF++R/5NUj1+
UMD9vasFs16R/q+A57NTatt4Pyzg/vi1At7n+ZE+l/6vgOujHxdwfXSd8H5S
wP3MGcWX/q+wrRtO/6e2jffTAt73ntXn0v9RvDfJv58VzHmDjTdHeD+neG9p
PqX/U1v6P6rvL6i+twu4n/lLwlsgvF9R/u4U8Pz80wKelyxq/NL/Uf7uUry/
pniXCO8fCO8e4f2Tfl/6P8L7Z6rHfcL7lwKex6yQf78p4N/3flDA86t/LZjz
Nen/Cnhe+W8F/P+HPyzg+eW/F+j3Y/o+6f8o3kfk33/oc/vf6xTvb/Xz0v9R
vP9J+StRvP9F/j1RW/q/Av793g3Nj/R/hPe0gH+P6vcU72YBzxf/oM+l/yO8
P5J/W1SPPxXw/PO51kf6vwKeh7rG8H7GS2Pm98HS/43h/8/n5THze1bp/8bw
/y/0in5e+j99Lv3fGP7/zMr1fdL/6XMbr4LwXie8SsJ7Y8zc55D+bwzvg7yp
75P+T78v/R/h7db3Sf9H/lUT3jv6fun/1Jb+j+KtVdvG20N4dVSPj6ge9VSP
T9SWcaH+Sv9HeG61pf+j/DWqbeMdGsP7Mk2aX+n/CK+Z4j1GeB6K9wT510J4
pzR++7+3Ev/aiC/tVN9zlD8v1beD8HxqS/9H/POrLf2fvs/GCxBfesm/oNrS
/5F/A1TfIapviPwLk38j+nnp/yhei/xLUD2SxOf0GN7fyqhtfy9L4y0/hr+P
LqjeSP9HeN8cw/nj0hjq1bfG8H7GBOF9ewzvk1wmvO+M0f0rwvuu2tL/kX/f
U3wbb5L8+4HiS/+ntvR/YzhfTo2hPv+Q/LtG+vwj8m+a4v0xxXud8H4yRve/
yL+/GcP7Qjeovj+l+s6Svvzt2LYuOP0fjY+f0fidU9vG+znh3SL+/R3hzZO+
/IL4fJvwfknjbYH05Vekf3eovp9SPRYpf39P+btL9fj1GN5vWtJ8/n8uXb9q

        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdfX9w1Od9phx8XEh0OXJyOSuhjmxsGWLZwV4sWzaGBQmBzAKC1a+FlbTa
1e5KYne1K3WYqGE66pBqwkRzJaMOE12ZjjpkNGGq8ZDblFoNl1NKq4aL6iOn
lEQN15OP3DacdTlyytGo4XJnvo++72eeh3+YD+93n/38eN7n/bzv9xV6Oj54
IvmRsrKy2Y+XlT36m/9Egv928tGf2b2f+b0Pjr/76451+6azdwUe/Vncy88v
7f39v/g/26P/ryOIf1+W5++68XTq0Z/S3ncOvv/bTzj8e87+m4VHf1YE776z
8fzP3fPAX9371sd+eDn/f/3P/8KN4/seOBt4v3TPA29tb/TRFzz08X61d+X4
u0/93q98vIfOBt6v937hiQ8R/8nHKwvueATwS/95s4H/WPDDT39w/Jf+5z/i
xvF9G9w44B4PHvrQ3Xf+0cd73I0D75+5ceBtDH4YzVsf+0cf758HEbaP91Fn
A89s4G1yNvA+JngfF//KnQ28cvHvX0i8n5B4/6WzgbfZfR+e3yz+mu19PPBJ
8f+TwUfl+O1f+Hj/ytnAMxt4ZsOfiuDXPvz6H676eBXBB9sfOejjPeFs4D0h
/j3h6gG835B8/Ibkbwv+fc3HMxt4WyRf/zr4iK5v/ZOPZzbwnnQ28J4M+nwG
3pNBn7/Aq3Q28CoF71Pu88D7FHAc3qeC/vwB3qfdOPA+7T4PvK1Bno9bgzxf
twZ5/v2ms4H3m4L3lPs+4D0V9Ocj8J6SeD8jeJ8RvCpng19VQZ7vVZIvs/F9
ZgPvaZdP4D0t9X5a9OFpqf/TMj+ecTbwnpH59Yz7PPCekXw8I/5tk/xsk3i3
SbzbJN5tQda/Z50NvGeFjzYOPBsH3rPCv+ecDbznBO85mQ/PSbzPiX/Vglct
eNWSv2rR82o3v4H3vOjj86Jfz8v8f1708nn3fcDb7mzgbZd6bJf8bZd4t0t9
d8j83CHzZYfM1x1BXn/NBt5nBc9s4H1W5tdnRS8+K/PtBeHLC1KPFyR/L0j+
XpD81Qie2cCrkfzVyHyrEf69KPV4Uebbi44PwHvR1R94L8r6+5KzgfdS8FF7
9JRbT15y6xHwXnLrEfBeCj76uoM/9/E+52zgfS5448P26Pf/t49nNvDseeB9
TvB2BguPCnp//flKs6E3ZnufD5mN79sZPPEoQT7e6E75frM9uOJO/O3i2+ni
9fBKNg7/XnY2/DMb/r3MeKGXGS/1MuONvizr/cuuHvDvZbfewz/BK5kN/17h
+lW+wniBVxgv9Ir0E69wvzEqeJNmwz/BWxC8kn0//AuIfwGXD/AnwHwLBSR/
Ae6vRgNcj0l73sMrBqTfCnA/VhK8sl3i3y7pz3ZJfc2Gf7scv+DfLvFP8Iq7
pH/bJfnbJfl7lfvNyldF/1/lfj30qqwHr/L6Mfqq6MerTl/g36uy/rzK/X7p
VeknaxmvspbxArWMF6oVva1lvNFa6U9qWQ+LtbL+1LLelmpl/X2N15vK16Tf
e43Xi9Br0i++5tYb+Gc2/HstSPvNotnw77Ug7T9Lr637FVn/+3U3Dv9ed+Pw
z8bh3+sOH/7ZOPyzz8O/18W/16GfH47Dv9ehn49F1v17HXz+iO9fnRuHf3XQ
78d8/+oYL1TH8abq3PfDvzqOd7JO/KuT/Aleyb4P/r3hbPj3huTPbPj3hvj3
hosH/pkN/97geItvcD0W3mC+lN7gepS9GaTzjMo3xb83xb833ffBPxuHf2bD
vzfd98E/wVswG/4JXtlu4d9uxgvs5nqEdsv82C3zY7f0d2bDP8Fb2C313S31
fYvjrTQb/r0l/HtL8vcW442+JfUVvKLgLbwFPd/g5+8tmR97JH97mM+BPbwf
Du2R/noP69XoHtkP7OH9Q3GP6N8e1tPSHukn93L/WblX9iN7GS+0V/bfe139
4N9eqe9eqe9e2f/v5XhLe2W/EOT9XXmQ93+VQfanOui+b719YP4FBS8keJGg
5D/o4vfghoNSjyDnZzwo+m/+eHjT4l8xyPHOBXm9WQjy/mVJ/CuZjb5C/Cvb
x/ku38d4lfvYv+p9kr99vD8K7pP8CV5kn+Rvn+RvH/NvdB/vt8f3yf55H/N3
WvCKgje3T/i/j/m9JP6V9kn+JN6y/YxXvl/4t1/4t1/Oa/bz/Aju5/Ol0H7m
S0TwUoI3vF/0VPDG90v+9kv+9jv9QP72c381t1/2s/t5v7u0n/ebJcFb3S/6
Us/72fJ61q9Ks5E/s6E/9YwXrBc9quf6RuqFf/WsZ8OGj/zVC//qJX/1kj/x
ryj+zYl/C4K3JPGW6rnfXK1nvpQ1cH3LG6RfbRD+Nch5QwPHG2yQ/DVI/hqk
/27geIcbeH6Min/jDaJ/DXweM90g60ED83muQfSvQfSvQfr5Bq7vaoPw74Dw
7wDXo/KA8O+AnG8f4PPO4AHJ3wFZPw7I/D3A8Q4f4PqOHuB+cfyA6zeQP7OR
P7ORP7ORP7ORvwPcXy4dkH7UbOTvgJyvNbJ/5Y3sX6XZyF+j64+Qv0bur4KN
0o81cn8eaZT+TPCG7fuQP/FvvFH2D428H5q2zyN/jdyPz9k48ifxLkm8pUbu
h1fFv7KDfH5ZflDm70GZvweZL4GD3B8ED8r6e1Dm70GZvwd5vz18UPb7B/l8
cNxs5O8gv3+bPsjnhcWDfD40d1DOf8xG/g7KectBPp9ZPSjnG4f4/KL8EPtX
eYjPR6oPuc8jf4f4vDN4iOMNHWL/Iofk/NPGkb9Dkj/xb1z8mzzE5yPTh/h9
XNGeR/7Ev4VDfP60JP6VxL/VQ/J+sInPk8qb5LyoietR3eTOq5C/Jj6fDDbJ
eWsT/t0/n400YT78Lz9/TXhuxc+f2chfE/i/4ufPbOTPbOTPbOSvCfPhAz9/
ZiN/TcC55+evCfPjf/j5s3Hkz2zk7233PPL3NtaDn/r5Mxv5Mxv5s88jf4IX
Mhv5E7zU25i/Pt7w2+zfqNnI39vQAx9v8m2XD+Tvba5H0Z5H/sxG/gRvyT6P
/L2N9ft/+vl7m+tbdtiNI39mI3+HGa/6MNc3cJjrGxS8kH0e+bNx5O+w4yPy
dxjrwc/8/JmN/NnzyJ+NI3+CVzzs5gPyd5jnx8Jhnh9LZiN/grd6GOuF719Z
yNnIX8j5g/yF+H1HtdnIX8h9H/IX4nhDIY43EpL5G5L8mY38mY38hTjeSfFv
OsTn+8UQn4/PheR9kNnIn+CV7PuQP4m37Aj7V35E8neE61t9xOUb+TvCfA6a
jfwdYb2KHGE+p47w/BgWvFHBGz/CfJ48IvPXbOTviMzfI6wvC0dE/8xG/o6I
/h3h+VZ2VPTvqOjfUdG/o6xXgaOsV0HBCx0V/Tvq4kH+bBz5E7zRo6J/gjcp
eNNHJX9Heb7NHeX5tmA28neU9aUkeKtHJX/HeH0rP+bGkb9jvL5VH2O8wDH3
fcjfMfYvdIz5HDkm/LNx5O8Yxzt6TPh3TPgn/k0fk/VX8ObEv4VjrC9Lx1hf
SsdE/47J/G1mvdxoNvLZzHpX0Szvi5v5fXJVM7+Prm5mvakRvECze3/s4dU1
8/vkYDPrUaPghZr5fXhY8CLiX0z8SwleRvCGm1kfRwRv1GwPb0zyN97M+Z9o
Zr5PNjP/pmwcfGjm9XimmfWu2Mx8mm0WvWrmfmy+2ekJ+NOMfvkf1vEWzQaf
mtEv/8M63nKz0x/wy2z40cz6tGo2zgGapf87zngbjzNe+XHGqzjO/lXaOPh3
XPRS8GoEL3Cc/auzz4N/gtd4nPMXOs75Cx9H/1/y+Xec8xc7zvVIHWd9zRwX
PRb/RsS/UcMH/8wG/yTeCcGbNP/BP8GbFrwZibco9ZiVesxJ/uYlfwvi36Lg
LQneso2Df2aDf+Yv+Cd4axJv2QnG23iC4y0/wfFW2Dj4d4Lxqk4wn6tPsH81
J4R/J9i/uhPMl+AJ7Ef/u8+/E9hP/sTn3wns7+/6/DMb/DuBfvCuz78T0Mf3
ff6dgB7+N59/9jz4Z+Pg3wno3fs+/wRvTPDGbRz8M3zwT/ybss+DfzYO/ol/
RcGbte8D/8S/efFvQfxbNBv8O4H1Z9nn3wno+X/1+Wfj4J/lB/yT/K2ZDf6F
2b+NYY63POyeB//CHG9lmPNXZTb4F3b8Af/Cjj/gn9ngn9ngn9ngX9jxC/wL
cz3C4l8kzHyJhdfz6PMvzPnLhDl/w2GXb/DPbPAvzPUYM3zwz/DBPxsH/8wG
/+x58E/wZgSvKP7Nin9zYaznf+/zL4z1+7/4/LNx8M9s8M9s+CF4JbPBP8Fb
Fbw1wStrwefu+PxrYf/KzQb/WhivsoXnR1UL17e6hetb08L1DZgN/rXw/A22
MJ8bW3j+hlqEfy2ify0832Iton9mg38trAfD4t9Ii+if2eCfxDve4vgA/gne
pORvSvCmxb+ZFuGf2eCf5R/8a+H5MW82+GfPg3+CtyR4yzaOPkfwVlqEfy3Y
Hzn+tfD8KGt1toe3sdU9D/6ZDf618nyrbGW8qlb2r7rV5RP8axX+tXK8da1c
36DZHl5jK9cj1Mp8Cbfy+hFpFf61On56eKlW1tNMK+vzcCvr80ir03Pwz8Y9
uLFW1vtxwZto5fkxaTb4J3jTrTjv9vFmDB/8a+V+d7ZV+j+zvefmW6X/a+V+
d7GV9+9LrbzfX251+xt8r+CttMr+o1X6v1bur8raXP8N/rUxXnmb9H9t3D9X
tsn+o43jrW7j85iaNo430Mbnv3XmD/gn/jWKf6E2Pg8Pt3G8kTbuT2OGB/0z
G/xr4/OR4TY+7xlp4/P20Tbez4y18fuB8TY+z5gQvEmJd0r8mxa8GcErtvH5
4GybvK9o4/Oa+TY5P2nj88hFex78Mxv8a+PzmpL4tyL5W21jPq+18f68rJ3P
zza2y3lgu+x/24V/7cK/dt7PVLfzfqamnfdHgXY3v8E/s8G/dje/sf6aDf7Z
8+Bfu+x/22X/2877y1Q7748y4t+w+Ddi+OCf4I1JvOOCNyH5m2yX/a/kb1rw
Zuz7wb921tPZdu7H59q5f5lvl/1Hu+w/2mX9bef1bbndrcfgn9ngXzuvl6vt
0v/Z8+BfB/cbGzsYr9xs8M9s8K+D8ao6uN+o7uD+oKaD/Qt0sH91Ha7fBP86
uN9t7HD9KvjXgfl4x+effR786+D8xSTeVAf3B5kO7q+GO7geIx3S/3XwfmFM
8jfeIftfyd9kh/R/HdyfTncwX2Y6eD9Y7OB+Y7aD+4058W9e/Fvo4P50sYP7
tSWz/c/x/qOD+7WVDun/pB5rUt+yiKsf+Gc2+Bdx9Qb/bBz8izBeVYT9q46w
fzUR4V9E+r8I8zloz4N/gheK8P4obP6CfxHo/499/kWg93/n8y8CPfqRz78I
9OeHPv8iWN9/5PPPngf/bBz8s8+DfxHol483YTb4F4G+/q3Pvwj6u7/1+Wc2
+BeB3i36/DMb/Iugf/yBzz/Bm49AP2/7/DMb/BP/liTeZbPBP8nfisS7avjg
n+UH/DvJ+dt4Euvv3/n8O8n1qDjp5gX4Zzb4Zzb4Z/jgn42Df4JXd5LjDZ7k
eBtPuvjAv5Mcb/ikqyf4d5LrGzMb/DvJ9cjYOPgneCOCN3qS6ztm4+Cf5G/C
4gH/JN4piXf6JPN5xsbBP8GbtXyDf4I3f5L5siB4iyd5vi2Jf8vmD/h3kufH
iuRv9aSbD+DfSZ4fZafc/AH/TnH+yk8xXsUp933g3ynGqzoF/f/PPv9Oof9Y
9PlnNvh3iudvndng3ymub6ONg3+nWA/Cghc5BX295fPPbPDPbPDvFNbX7/v8
s3jAP/FvVPI3Zs+Df5Yf8O8U12NS8jdlNvhnNvgneEWJd1b8mxP/5qUeC1KP
xVNYz7/v88/GwT+pb0niXbHPg3/Cl7VTPH/LoqwHG6OsB+VR1peKqOM/+Gfj
4J/Z4F+U9apG8AJR1ue6KPsXjAr/olyPUJTnR1jwImaDf4KXivL8zUS5vsNR
ru9IVPgXdfUB/6Iu/+BflOsxYc+Df1FXP/Av6vgP/gnejOAVxb9ZwZuLCv+i
PH8XJN7FKM+PpSjPj2XBK0n+VswG/6K8fqwJXlmn8K+T+VLeyXgVnVzfyk5e
z6s6WZ+rO3n9qOnk9SggeHWdzJdgp/CvU/jXyfkLd3L+Ip2y/kq8qU5Zfzt5
fgyLfyMS76jEO9bJ/cZ4J/cbE52y/nby/J3q5Pk7Lfmb6eR+rdjJ/dpsJ6+X
c+LfvMS70Mnzd7GT9WrJbPBP8lcSvBWpx6rUY62T529ZF+vpxi6eH+VdrM8V
XW5+gn9mg3+CV90l628X+xfoYv/qumT97eL1qLFL+Cd44S5Zf7t4/Yh18fxN
SbyZLp5vw13Cvy7my6iNg39dXI/xLtl/dHF/NdnF/dpUl/R/XdyvzXTx/C12
8Xo02yX8E//mu1hfFrqEfxLvUpfon9Sj1CXrr9ngXxfr/VoX63NZt/R/3ayn
5d1c34purm9lN9e3SvCqu7m+Nd3crwUEr07wgt3Cv27uT0PiX7hb9K+b8xcT
/1ISb6ab9WW4m/VlpFv2H92y/+jm+o4L3kQ313eym/V+qpv5Mt3NfJ7pZj4X
BW9W8OYEb17yt9At/V8382VJ6rHczf1GqZv1ZaVb+r9u1qs1Gwf/YszXDTHR
wxj3o5ti3I+Uxxhvc4y/vyLG/cyWmOhnjPVsa0z2MzHm17aY8DvG/N0RE77H
WE93xmT/E+P61Ma4X6mLcf13x2R/HuP9Y31M9usx1rumGOtZSPCaBS8c4/OJ
thiv35EYr/fRGOtpLMZ6mRD/UoLXL/5lBC8f435iOMbnWWdi7vwE89We9/DO
mo35K3jnYnweOGb43nPnBW/cvs/DuyB4E2Z7eBfNxvyX/F0S/6YE77LgTUu8
V2J8fjRj/nt4V2PuPBD6Yc97eNck3lmzPbzr4t+cfd7DuyF8mRf+3ZT6LsR4
Pb8lfFmMcf92O8br7ZLg3RE+L9v3e3h3Jd6SxHtP4l2R+t63ceib1OOB1GPN
8u3hPRS8sh6u74Ye9m9jD+Nt6mH+lfcw3uYerm9FD8+PLT18Hl7Zw/dttvbI
eXYPny9v65Hz7R4+b97Rw+fnNTYO/TMb+mf+Qv96+Hy9TvB2C15Q/Ku3cehf
D7/faepZ54Wvf2ZD/8yG/vXw+XtbD9//iAheVPBiPfw+IiH+paQe/VKPjNQj
38Pvm4YF74zkb6SH+Xe2h98HjAreuR7RP8nfefs+6F8P3+e6IPmbMBv6Zzb0
T/J3qUfeR/Xw+5LLgjct9bgieDNSj6viX1HwrgnebA+/b7ku8c5JfW9IPeal
HjeFzwtmQ/9k/i7K/L0teEvClzsyP5alvnfFv5Lw716P3KeSetzv4feTqz38
vvBBD9+/XOvh94cPe/j9ZVmc70NtiPP9241xvr+6Kc545XG+r7c5zu87K+Ls
35Y433+rjPN9ua1xuU8Y53i3xfl9ZnWc39/tiDP/agRvp+AFxL/aOL/Pr4vz
fdzdEm9Q4q2X/DXGuR5NgheK8/va5ji/3w2bP9A/8S8S5/vg0bjct4jz/aVE
nO+np+J8X6g/Lvcx4nw/Ii94w3G+f3FG8EYE72xc7m/E+T7Zubi77wH9i/P9
j/NmQ//ifF/lQpzvo0xYfqB/ZkP/4nxf7lKc79dNCd5l8W9a8K5IfWeEL1dl
vhXjfB/hWlze58f5fsL1uNwvEbwbxn/oX5z19GZc7n/a89A/s6F/4t9t8W8p
zvch78RZX5bFv7viX8ls6J/M3xXx777M31XBexCX+6ZxXj8exuX+c4L7lw0J
uY+Q4P5qU4L70/IEr+ebE6z3FQnW+y32PPQvwev51gSvH1Xi3zazoX8JXo92
JOS+Q4Lvb+xMyP2HBPeTtQnOX53Z73n6Z/Zjnv5JvPUJXi8bJd4msz28kMXj
4TUneD0Pi39t4l9E/IuKfzGJN5FgvqQErz/h5oeHlxG8vOANSz3OJLhfGzHb
wztrtoc3KnjnJN4xwTsv/o0n3Hzw8C5YfNC/BN/Humjj0D+zPbxLgjeV4PXt
ckLuJyV4fbuScOuThzdjtod3NcH39YsJXt+uJVhPZ8328K6b7eHNmQ39S/DP
S80L3k0b9/AWxL9bCV6PFhO8ftyWeJcSbr328O4I3rLEezfB9wFLCV7P70n+
ViTe++LfaoLXowcJvn+5JvE+tO/38Mp6ud/Y0Cv9Xy/3a5vM9vDKex1/PLzN
vaz3Fb3cr23plfv7vcznrWZ7eFW90v8JXnWv9H/iX00v83mn+BcQvFqLB/pn
NvRP8IKCV9/L86NR8tck/oUs39A/qUdY6tHWy/14pJf5EhW8WC/Pj0Qvz7dU
r+MH9K+X51uml/mcNxv618vz44zgjQjeWRuH/vVK/yf+jUm85y2/0D+J90Kv
3LeU/F3s5f5lUupxyWzon9T3ci/3Q9NS3yu9rAczkr+rUt+ixHutV/RP6ntd
8OakHjck3nnJ381eN/+hf5K/W5K/ReHzbcFbknjviH/L4t9dibck8d4Tvqz0
iv4Jn1eFfw/EvzXhy8Ne0b8k6/OGpPw8ZpL5sinJ8ZYnOd7NSfavIsnr0ZYk
z4/KpNNv6F/S7aegf0m+v74tyXpfLXg7BK8m6dYD6F+S9zMBG4f+JXn9qBO8
3Umev8Ek17de8BqTvH9rsnHon+A1J1kPwpK/Nok3kuT1LSp4MYk3IflLSbz9
Em9G8PJS3+Ekz7czSe4PRpI8f88meb6NJnm+nUvKffIkr0fnk9L/JXm9vGDP
Q/+S3E9eTPL6O2nPQ/8EbyrJ98MvJ/k8djrJ/fOVpOuHoX9J7p+vCl4xyfuj
a0neb80K3vWk2z9A/5L8PuBGks/v55P8fuGm2dA/+z7oX5L3W4tJ3g/eTvJ5
3ZL4d8eeh/4l5fwvye9nSkl+v3BP/FuReO9LvKtJ3m89ELy1pHtfAf2z74f+
pfj90YaUvP9IyfuPFOOV2zj0LyXvP1Kcvy0p+fnhFOdva4r3R1Up3g9uS8n7
j5S8/0jxfqsmxfvLnfY89C/F/KtN8X61LsX12G3xQ/8kf/U2Dv0zG/qXcvmH
/qXc+zToX0ruc6f4fW1bit/nRQQvKv7FxL+E+JdKyftfs6F/4l8+JfczUvz+
/EyK72+NmA39Mxv6l+L3++dScp9D8M6n3Pt76F/K3VeA/qX4PsNEyt1HgP6l
oHe3fP1LufvH0D8bh/7ZOPQvJfczU3yf4YrZ0D/Bu2rj0L8U37e4Zjb0L+Xu
L0D/zIb+mQ39Mxv6l+L7ODclfwuWH+hfiu9vLKb4vsntlNxPMX+hf1KPZanH
XalHSepxz2zon+Uf+pfC+vGffP2z56F/grcmeA+lHmVpuf+S5npsTHN9N6Wd
/9A/G4f+pbm+FWm+774l7fyH/qWZL1sFryrN9diW5npUp7m+O8yG/pkN/Uvz
fAuYDf0TvDrB251m/gXTzL96wWu0cehfmvkXErxm8S+cZj1oS8vPt6RZX6Jp
1peY2dC/tNy/TbO+9AteRvDyab4vOCz+nUnLfTWzoX9p1tPRNN/3OZdmvR9L
sz6fT7Pej9s49C/N9xkm0ryeX0zzej4peJfSvH5MpXn9uJzmfmM6zefPV9K8
Xs6YDf1Ly/2XNN8/uJaW+y+Cd13w5tLcX90Q/+YF76bFA/2TeG9J/hYF73Za
7r+k3foH/TMb+pfm9fKu8K8k/Lsn820lzXp6X/RqVfTggcy3NZlvDwWvrI/1
dIPZ0L8+1qtNZkP/+tBf/Y2vf4JX0cf6vKXP6SH0r0/0r0/0r0/0r4/Xj+o+
Xi939PF6VCN4O/t4PQ+If7V96B/f8/XP4oP+SbxBex76Zzb0T/Ca+rAfes/X
P/t+6J/Z0L8+Xj/aJH+RPu5fopZ/6J/UIyH1TZk/0D+pb0b8y0s9hqUeZ8yG
/vXxenlW6jHax+vluT7ur8YE77zgjfdxf3BB8jch+bvYx+v5pPDvkuBNCd5l
qe+08QH6J3yZEb5c7Vt/7+rrXx/073u+/vVBb/6jr39967rl65+NQ//Mhv71
QQ8XfP0zfOCYDf0TvFuCtyh4twVvycahf2ZD/8yG/gleSfDu2fdD/2wc+tcH
/fb9W7X8QP/6sJ5919e/PqyP3/X1rw/6/de+/vW7cehf//r/U+PrXz/0+q98
/bNx6J+NQ//6ob83fP2zcehfP/T9L339Mxv6Z5+H/vVjffgrX//60U/8ta9/
Ng79E7waG4f+mT/QP/GvVuKts89D/wwf+ifx1ts49M/GoX9mQ/8Er1nwwv3Q
87/w9a8f8/87vv71Q6/+g69//ev3JHz96wffrvv614/5+O99/evHfP62r382
Dv3rhz5+29c/ex76J3hnzIb+iX9nzYb+mQ39M3+hf2ZD/8S/cfMH+mf+Qv9s
HPon8U6ajfsvZnvTY0r8u9wPfZzz9c/GoX/9+Nycf//Fxr1/vyp4RfMX+mc2
9M/iRV2tvvgeG4f+2Tj0T/Bumg0dNhs6L/lbFP9uC96S4N0RvGXBu2vxQ/8E
757grUj+7kv+Vi3f0D+rD/TPnsf9Fxv3Plc24Gzo3wDjbRzg+m4aYLzyAY53
8wDPj4oBzt+WAeZf5QDzb+uAq6eHVzXA9d02wHyuFv92mP+4/2K29/fOAc5f
QPyrFf/qxL/dEm9Q4q0f4PnbOID161u+/gleSOJtlnjD4l+bxBuReKMD6Ge+
49//G3B6Cf0zG/pnz0P/BC8j+cubDf0TvpyR/I1IvGcHWF9GLT/QP8nfmOTv
vNm4/zeAfuDP/ft/gjdhNvRvAP3Fn/v6J3iXBlhfpgZ4/bgseNPi3xX7PPTP
vg/6J/4VbRz6J/7NDqCfedfXvwH0K+/6+jew/pyvfzYO/TMb+jeA/ufPfP0z
G/o3gP7iz3z9s3Hon9nQP3se+id4y2ZD/wSvJP7dE/9WDB/6N4D+65qvfxLv
A/FvTfx7aJ+H/p1Gf/Onvv6ZDf0zG/p32n0e+nca/dKf+vpnNvRP8LacRn9T
9PXv9PrvCfT1z2zon9nQP7Ohf2ZD/wSvRvB2Cl5A8GpPo9/6d77+nYZefMPX
P7Ohf/Y89O80+rlv+von+Wuy+KF/4l+z4UP/zIb+mQ39Ow398v2Lmg39Mxv6
Zzb0z2zon+BlJN68+Dds8UP/xL8RG4f+SbyjgndO4h0T/86Lf+MS7wXBm5B4
L57Gen/V1z+p7yWJd0rwLku808K/K1LfGYn3qvCvaM9D/wRvVvJ3XfybE7wb
kr95wbsp82PBvh/6J3iLEu9tmb9LEu8d4zv0z8ahfzLfSoJ3T/BWxL/7Nr+g
fzLfHpgN/TMb+id4ZRnW+w0Zp2/QP7OhfxnW0/IM6/NmwaswG/qXYf8qM+zf
1gzraVWG9XRbhteP6gzr/Y6MWw+gfxleL3eKfwHDh/5JvHUZV0/oX4brG8xw
PeozrPeNGdE/iTeU4Xo0Z5gv4QzzpS3D+hzJ8PyNCl4sw3xOCF4qw/zrl3gz
gpcX/4YzPH/PCN6IxHtW8EbFv3Pi35jgnZd4xzPruuLrX0b0L8Pz92KG9WAy
w3pwKSP6l+H17bLEOy31uCL+zWSc3sLPDK9HxQz6+3d8/cugP37H1z/Bu27f
B/2T/N2Q/M2LfzczvH4sSLy3JN5Fyd/tDK9HSxYf9E/qsSzx3rXnoX8ZXo/u
iX8rgnffbOhfhte3Bxlef9cyvH48ND5C/7Kcvw1Zzt/GLOvVpizzuTwr/V9W
+r8s68sWs6F/WdbTrVnW0yrB25ZlPa02G/oneDWCtzPL/XNA/KvNiv4J3u4s
62nQbOhf1u1XoH9Z3s80Zd1+DfoneM32eehf1u1voH/2eehflvdv0azbr0H/
7Hnon9nQP8OH/mV5v5UxG/on8Q5nef9xxp6H/hk+9E/wRrO8PzqX5fVtTOpx
3uoF/csyny9kWZ8nsrweXczyejSZZb2/lOV+bSor+pcV/ZP5cUXmx4z4d1X8
Kwr/rsn8mM3yfuu6zLe5LK/nN6Qe81KPm1nuDxakHresXtA/4fNt4d+S8O9O
lvf7y1ne79/N8vlBKcvnB/eMv9A/G4f+Zfk8YjXL5wcPsnxevCZ4D7N8vlGW
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
g/5P/HvX4kH/J3rwLYn3utno/8S/ObP/P869Rh8=
        "]]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 98.59055555555557},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{275.9921875, Automatic},
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"MidPrice\"", TraditionalForm],
    PlotRange->{{0, 300.}, {98.59055555555557, 101.05}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxc3Xdczf//P/6srMwKIVJEpKGk3a09tfc8+5zIzEpeZK8IWdlERGZEZlb2
zAghK1IUCcn4Pr1fr/v9c/n9+ud9eTrnXM/9eXvczv30el1cXu8+kjHB8qZq
amqFbdXU/v7v//cnCuuy/v4UOh3rNbcqiK+vOG0pUbcdJVxbWvz9KXHS2uf5
Yio//sgp9NWO9ReE63+dcqfIz4v7neHnv3J61OJCzl3hWqn4+1PhNPUvwK+v
dJq49njZb+H6xvW/P9VOGk0Hze/ShLxaJ2zq/NqoCT3/k1P5X6AJ+XVO+45P
9gptQq//wo//+35fnd6vLT9rz953pyF/X8Zeg5NeH+GHvUanjp2EH/Z+OrmW
vKvVZO/3/28+NUw6FP2sGz9fDTr9V4zTZ78J5ux2ChjCr2+KnHYTHoPfrxlC
WmSvsGWvOUzWzyi2ZK85yg8+Cv+/+28B4XSO9WJPHbmdVqd2Z68lWtW5/erB
XitIHnRS6LLXCusFRYe91tD8737/9drg7sYRw5qz1xan9ySMrOPz1YDK3aDJ
cz4vDbQzvel6ic+zHSL7hxUf4PNuj+xfOfZruA8dsHTN6M6z2esI/FZ/PYaf
3xHVTSUhiex3xF7rnG0RwvX/Xm7RCct2Nk/x4ffrhG5rvAa7s9cZ2uOm9wR7
nfGixSsXO/Y6w/wvw/NoIvL2+d4D2NPE0SXqtV3Y08Imm5Ikdfa0YFa0QV73
J/I/TwsH7R7+fipc/+tpQ2uWa3SxcP2vp41BGeL0Q8L1v14X7Li7LHmzcP2v
1wXfd3qrL2GvC1KW32s/nb2u0MqKvpvEXldonGj6Op69btjf1Kx7KHvdsGrd
hFxv9rqhn1ZZtCd7OvgyIDbDhT0dvOug+dyave7Y+O1ziil73TEjfFOsIXvd
ETSvsLo3ez2Qk7E2T4e9HpgtN12nyV5PvHe5LWvLXk/saxFzoAV7PRH6oNXW
5uzpYvROJ0kT9nSRKhO1+fmbvF744Zb24Otv8nrhs/vV2R9+k9cLI197jH79
m7ze0DXPznzym7zemO8senObPT2M0/0z+pxw/W+/9OD6ZkToPvb1oHB6fGQd
v14Pv6vS18/l99NDqM3hy5PY64PItPm6Sez1QdcKg4Ni9vrAO/ri9jD2+qDa
19jUg70+eOM5YZQFe/rQrI726s2ePv55Pulaa/b0MU31fP7XX+TpY+S8JjUv
fpGnj/BN/S7e+EWeAcL/7udflI8BjkYsnH3oF3kGOF48MzWXPQNMSjDdtoU9
A3hfbumwnr2+cEqRaS9nry+qQo7rzWdPeHx6eHEqe31h2+Zh9lj2+uJnS5MB
Mvb6ocnu2+8i2OuHN0btX/uy1w+qv19I7PXDTRT8NGSvH35E9jrfjT1DWFh6
BLVmzxATpc01f/0kzxCtNqz+XPeTPEN0Vf/9+MNP8gxhPfj6uIqf5PXHgv6B
Rs9/ktcfUsd8tVL2+mOgocbpEvb6I3xD4ZJb7PWH770zna6yNwCjH/zIu8De
ADT/oNHyNHsDMEVyrX8BewOwv9HnxH72BiD85o5ju9kzwrM2qf9sZ88I9VcO
7tjMnhH+x7BnBJsrM3dksmeEgVppbTPYG4ilY/WaLWBvIBI6teoyk72BGDw+
y3UqewOx8aJN8Hj2BmKF9+4jI9kbhLXXfpvL2RsE//N7iuPZG4StWjrZUewN
QqNqaOsg9gbh3hwTqSd7xsi7YVbuwJ4xBhVPn2HJnjEk1b8WDWbPGEM/5an6
smeMdvX6ubrsDUadmWuTruwNxuRIx5AO7A1Gmt2vTm3ZGwx998ffW7I3GC/C
Kpuos2eCb02eNjZlz+TfP2fPBPNlLnq/G8kzwagLZzx+NpJngluISv7RSJ4p
in7sOfP3+l/PFI1qg7v8ff6/nikGT7s57v88UzS1KL2oxvOZ4uSEzG7NeT4z
fPQ8JWpJ96NjhhHTI7dr/KR9Y4Z3HxKeaNHr/cyw5NbZ7z15fjM0nV3/sy95
aWZIaatTM5DzMcPGiia3zMjLN0P20OjsoTyPGV4+PTTFmrwKM9j//eH5zBGb
frkSPJ85brx3+ceD5zPHjA32an48nzkML7aVBfN85jjV3OhIJM9nDoeaN3Xx
PJ85kp6vs5DxfObwumAlS+T5zHFN9mPuaJ7PHOsv6B0Yz/MNwc62tgWTeb4h
SPU23zeN5xuCPd/Lbszg+YbgdfNrl2fzfEOwstKtbi7PNwSyZC+r+TzfECSt
fjhxAc83BJo+lmMX83xD8KP5yjlLeD7Be6YzdhnPZ4GUV9dCMnk+C2wb69Bm
DffRArPW3y9Yx/NZIOHp/JkbeT4LtFz9xm0Lz2eBpDMag7bxfBZw0U6WbCMv
3wLDg65q7eD5LNBXYV60k+ezwPIOU6328HyWaOzjXrKX57PE/ZVaNgd5PktY
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
cDbK2OLE+bnhx9vtn6w4PzeMXHrpkAnn5wY3DRuv/pyfG9JsrlX05vzckOUx
amk3zs8NhZ8LHnfk/Nyw7Mmx2DacnxuyF1ya1Yzzc0dZwaLhP79Rfu7YP8ot
+ss3ys8d1hsullR/o/zccdHGu/DNN8rPHQ/Wn0x6/o3yc4e31rn+j8jzc0fj
kHl+JeRFuWPJNd8pN8hTuGPy6Glvi8lLdofW7rqfZ8hLc8fWhKDCY+Slu+N9
bAoOkZfljqpUr1t7yMtxR8+rYcU7yMt3x4trnWSbyStyR2qczqJ15F13h8bS
x/UryXvkjj0+fVQZ5FW4o9PVb5sXkVfnDtmvg/bzyFPzwLgFfnozOT8PJE47
qprG+XmgrrOb9hTOzwN3urn3m8D5ecC3sv3asZyfB84mfksaxfl5QFyX5j6C
8/PA10ctLig4Pw9I7L5kSzk/D9xutBso4vw84HVt4uFYzs8DFgGKzVGcnwfW
7ry7JJzz84BzdteyEM7PA3fPygYHcX7CPOX7n/pzfh6wn3LV0o/z84Crw7Ol
3pyfB8b0nbvMg/MT7t9+f60r5+eJtZ3P7HPm/DyRJwsY48T5eSJHI3aIA+fn
iUm1qRttOT9PlHvi4DDOzxObJPb6Qzk/T9hvVl89hPPzxGHTxkOmnJ/w+iVd
Sow5P0/M7bc8YCDn54lukff6D+D8PPHtxMNvfTk/T7w7unV8H87PEzvEJ9fq
cn6e0K9ak9yd8/PEpVdHG7pwfp6IP7Z9kCbn54msFMND7Tk/T6iCyt+05vw8
UR10rFcLzs8LD82TW6hxfl5YvHLtpx9fKT8vKJ/2flX/lfLzglmT4PmfvlJ+
XpjaOWveh6+Unxcu6svLK79Sfl646v727Rvyorww5XVm3QvyFF4oTZY1e0Ze
shdGxBWefURemhdq0qfPuU9euhdOaO31vUNelhecHgQl3SAvx0vY/wczrpKX
74VXd+4eLSavSHi+SfWrc+Rd90LBkhVnTpP3yAtV2qmbj5NX4QV1m82zC8ir
80LqFu1uh8hT88aymLTIfeRpeOPNTDPv3ZyfN0yC5ctzOD9v/BqTZZbN+Xnj
5sEOjzdxft4Y8vjG43Wcnzeux6x6vprz84Z14swlmZyfN2yWXHBcxvl5w7Ao
qi6d8/OGpYE8YBHn5/2/P1/A+Xlj/ek9zedxft7oVRrYdg7n5w2tTrcKZnF+
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
VDmyLfcvFLO/aE9qw/0LxctUg/zW3D/hvNN31bbi/oXi1rHtJn+v/xdfRSii
ejXatuT+hcJmYV2KOvcvFAFbEqpacP9C0cS1U0YL7l8Y7nVtHNKCPPUwXBjy
oVUL7l8Y9BdPSm3O/QtDj9WfFjXj/oVhaGxMYlPuXxhGyCZ4NSHPMAy3O9gP
UOP+heGffLuHv79Q/8LgPdy6768v1L8wjN77Eo1fqH9h+OrSkNHw5T/PIwwP
LBe6fP9C/QtDk97t+n8jLyQMhsYTR38lLyoMa877FtSTJwrDLutlpvXkKcKw
sZvllC/kJYVhb1n/z3XkJQvzjXbaWEdeShhEVf4pdeSlhWHrpeSwOvLmheFu
eLikjrz0MCw3k99mLzMMj7Gz3RfyssKw+Iln9y/kbRHyKguI+EJeThgsZSsv
8Hx5YZg9yKNJPXn5YbAxu+dQT15hGN4ud5zK91sUhoz2VuF8v8VheNrPqGk9
edfDoJ5t5f+FvBLBu3rIlu/3UZjw+8Lt/p/JKw/D0jlj3D+RVxGG460zpbXk
VYfBQ+viixry6sKw7riLqIa8hjAM7CXZ/5E8tXDUdZhj8pE89XCMul279wN5
GuFY7zEg7gN5muHYOW+pxgfydMLRTHtBVTV5euHofa5iZDV5huF4lVTao5o8
43DMSmvdoYr7F47d1inbK7l/4Sj5HrH3LfcvHDdemUe94f6Fo8n82IcvuX/h
yB/wLbyc+xeOonS10qfcv3AEN222+TH3L/x/f//v4Rfaf+HoOGD25BLuXzie
JOgeu8X9C4eJ85Dr17h/gn/lbf4l7l84Alp82nievHnhmPjb9+0Z7p/w+v4B
zU9y/8IxY5Be/VHuXzhO6zi8y+f+hWPJn+yn+8nLCUfYQq2de7h/4bCoyHfb
yf0LR8+rNZ2zuX/h6HZ3/qtN3L9wIDt79HryisNhW3ToxhruXzh2yE7EruT+
haNs/sEPy7h/wvkszkxbwv0Tnl+SoL2IvIpwDLuolTeP+xcO50Dx+Nncv3Bk
uQ55PoP7F47iBWr+07h/EbjXEsunkKceAaeSFQ8mcP8iUGP2TXcc9y8C5b9u
rRzF/YvA8pJ62xHcvwhENktYoCDPMAImbVfulnD/ImCQq/sznvsXgZTiH7kx
3L8INK3eExXJ/YvAjjWmbcPI84iAefLs5UHcvwg0dnq5Yjj3LwIxPRcmenP/
InBo13ptd+5fBC5C4wK4fxF4WFc6wZ77FwGvkj/9rbl/EdDRMJpjwf2LgIXG
lA6m3L8I+PyO/DqQ+xeB7wd/tO3P/RMe9x2+SZ/7F4E7F9QtenH/IvDpzrmN
Oty/CGQ+b2ijzf2LwOn3uVM7cv8icFzy0K4t9y8COQfHzlHn/kUg6vjKW024
fxEY2S3W+1cd9U+Yf8XsrO911L8INM83Lqqro/5FYF5UvHNNHfUvAnHr22W9
r6P+RaDPKLu6N+RVRODm3sLUF+RVR2CsvXTIU/LqIjBs8LozpeQ1RGDzrhkG
98hTi0Tp80cLb5GnHolFZ5LXXyVPIxLii7ZPLpKnGYleZ+frniVPJxK7DkRK
TpKnF4lmWR8GHSPPMBLvInQNDpNnHIm80+c9D5BnEYknF05m5ZFnE4kOC153
yyUPwuNd8kfvIM8jEuUPxhRvJc8vElNf/vqykbyQSOw/taTfOvKiInG1RDdy
NXmiSBzTzRevIE8RCa27o1yWkpcUCd8fgf0WkZccCWdRG9E88lIiUal1csMs
8tIice9jP/UZ5M0T8jg2elwqeemR6D20ymIKeZmRmOs5bMoE8rIiodG+deVY
8rYIf/4jP2YUeTmRaLHR6nYieXmR2B3TbJyCvPxIWPmcOi0hrzASy9eL2ieQ
VxSJ42/WDo3h/kXCO3muZQT3LxKdz/9cGML9i8SHtIgXAdy/SJz/9nKpH/cv
EheTD67y4v5F4myrDZfduH+RiL2f8gvcv0gMbW5b5sD9E143duVJW+5fFGyW
jb48jPsXhQzNmj2W3L8oqF/e9dqc+xeF1OXq9Sbcvyisdu86x5j7FwXdq5eV
A7l/UWjvWKE/gPsXhalnBj7vx/2LgtPRYzUG3L8ozP18eaA+9y8K5qKLmnrc
vygcTL39S5f7F4XgrkGde3L/oqD9/Er/7ty/KFSUpCu7cf+icDuicnoX7l8U
3l5NKdLi/kVhefH7pprcvyiMHlpZ15H7FwUTvzsn23P/ojAg/P1+De5fFKQd
1FLbcP+i0Hy+2dhW3L8olGaPdVDn/kXhUOWWuObcvyis+bR1Z1PuXxQsw/75
rMb9i4Jy3BDHP5+pf1HYdu+X+Ndn6l8UdGqOzGv8TP2LwsKtre43fKb+RSFw
2pC+3z9T/6JwYa/y4lfySqJwwPq4Yz15j6LQ69zhLnXklUdheqJ9t0/kVUTh
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
qfBtwYRmPXj/qVCzo81BHd5/KlSiIb4b7z8VsmI6W3fl/aeCasaUTl14/6ng
3TpDTZv3nwrhrUas0+T9p0L/cdssO/P+U8Gyt/Wtjrz/VPBZeze0A+8/FToM
6lfbjvefCkNX3VuswftPhZmHyvu35f2nQnG894XWvP9U2CDLXtyK958K27b6
h7Tk/afCyIoMM3Xefypsbdhi3YL3nwrTag4Nas77T+ibp6dlM95/Ktgtz1A2
5f2nQr/D9+c24f0n9P/AokI13n8qWD12Kf1TSftPBY2hMo2/1//uPyHvR+Iu
vytp/6mQ03az3q9K2n9CH+u/aP+spP2nwo1dR9N/kHddBXGnJjoN5N1Wwbxo
8bJv5JWohN83Ult9Je+BCiLboyO/kPdI2B/pya8/k1emQpTRKItP5JWrYNKm
+8Ma8l4J5/nu//V052E1vP8fx1GWFK0iEilLZCtSRK+UiKiUbEWJNGedGWtZ
kzWhlMiaqEQoWYoI0ceasmRXaSH6IBFZf/P7Xp/33X/HOecxM/fc93Nu19V1
peH9gbyaUCi2BJTXkVcrrcc/OjPfk1cXirJp3UtryfsUitFLdnq/Ja8hFG9t
xLs15DWGYrjXqSHV5DWF4lGkX1Yleb9CUdpvnslr8ppxMHG8n1BOngaHFt1v
PHpFXisO1j0MnF6Sp8XBWLc07jl5Ohy2z//8+yl5ehwWaqeMekKeIYeEB7+n
lJJnzCH59cdpD8kz4dDFz1W4T54pB4MWJdnF5HXnML/jvcYi8iw4DOjS0fMu
eb049PmQlHebPCsOa/Rj+94iz5pD1QHjtTfIG8TBMLz1q0LybDkMXhJsf508
Ow7d9gatLCDPgUPp43vXrpDnyCH373Hty+SBA2p/Tr5EngsHB7Of6/LIc5Pe
980+fJ48dw5L3KsLcsjz4PCr02nzc+R5cfhq55t+hjwfDuW7NN1Ok+fH4ZTr
xW+nyJvOIXP8rfQs8vw5PFcPNMskL5BDhuf37SfIC+Zwf/fqhgzyQjiM72TI
HSOP4zCrNK0hnTwFhyy3B2lHyOM5+FhN9k8jbwGH4lmW+qnkLeZwc86rZ4fJ
C5Ou32nQ/EPkLecw8pGqTTJ5qzl0HbP9UhJ5kdL9zN6+6QB56zlUcn9T95O3
iUPjxW6Z+8iLlt6f9PPwXvJiOPjnJK7bQ14cBzuN1SG7yUvg/vfvieQlSvP3
2fn3O2vp9184OD1YdTehln7/RZo/TtEnd5B3iMORqVfOx5OXyuH3MtvCOPLS
pfmb8LpkO3kZ0vzeVvQylrxMDt/LCjJiyMvmMKr/wfnbyDvLYff1QcO2kpcr
fV5fp/UW8vI43KvvunszeZc5RHUa5RfF+id9Pmjqn42sfxy0WxambmD949Ds
9SbP9eTd4eBm7lO1lrxiaT7sLNgSyfrHYevOBxPWsP5x2OZh2zaC9Y/DikT9
6FXkveAQGRfbYyV55Rxsx/RNWc76x+HHUPM+y1j/ONSNXnwsjPVPGv9de6Yu
Ja+Og/1NI80l5H3iYBZ9fO8i1j8OL+KL3Rey/nEIWZ7SbQHrH4e+9wu+CuT9
4iBmTynnyWsmg068T5ma9U+G2CMxr1SsfzLcTh74Wcn6J4Nh4Nt6BXk6Mjwe
cvWlnDw9Gc5tM/4sY/2T4daDzZ851j8ZrLysykJZ/2RwmtD2znzyTGVwzhiQ
G0Jed+n4DktXzmP9k2EU12XaXNY/GZ7tbmUTzPongzXn3H0OedYynO2W3z6I
vEEy5Lut6xnI+ifDiufromez/slwvvBYwyzWPxnuLf2smkWeowxLlwaWBpAH
Gd60+m0VwPonw42ge5w/658MjgWvdsxk/ZPhSjv90hnkechQVjJh1AzyvKTr
XXYsdTrrnwwbn81+M431T4adfn0cp7H+yTA46ffhqeT5yzDhuvEPP/ICZaht
CB/hx/ong9702pgprH8y3DWIqPFl/ZOhm8FoR1/yFDLELFxV4UMeL4OlxoDZ
Pqx/Mnw0tr45mfVPhrkO2dqTWf9kuG4ROsmbvOUyjOFe5HiRt1oG9xsLLbxY
/2S4Zjt4qyfrnwxH9+s3TWL9k+HLzw5zJ5EXLc3XqREXJpIXI8Nqjw6GE1n/
ZPBMMZnqwfong4uwY8ME1j8ZBJ8XMeNZ/2RouXbWbnfWPxmSdt86N471T4bX
nZWPxrL+yZBX9bHVWNY/GX4VT/BwY/2T4dGFsJQxrH/SeK0VDcaw/skwTXdg
nCvrnwxXDdsaubL+SfNng8YOF9Y/GVJfR7RwYf2TgZefjxzN+ieD25E3L51Z
/2Twi3S0d2b9k+FQUZ9VYP2TYfhY50In1j8ZHCbrmzux/smQe6XN8lGsfzIc
3tD78UjWPxnGHZ6rPZL1TwYjcy9rR9Y/GaoGf9owgvVPhsygU21HsP5J4x/V
7uBw1j/J04vRG876J0N52LE4B9Y/Gdro3B3pwPon9UM39qE9658Mm65vdbVn
/ZPBbpLzwWGsfzKMiFunP4z1T47e1pEqO9Y/ObbPTrs9lPVPjqPOfo5DWf/k
CNDpfXwI658cub3Ptx3C+ifHGstcZ1vWPzkKz5aOsmH9kyOhS5TnYNY/OU4n
dJs4iPVPjuy77pYDWf/keDQg9G1/1j85XBO6X7Zm/ZOjf2TJ2n6sf3KMPXXH
vS/rnxwP/pnRw4r1T47Rzxe278P6J8erkns/erH+yTFs4pmxvVj/5NjgpvG1
J+ufHDkdk8/0ZP2To2eSUXBP1j85gg8E/bZk/ZPjacm2tZasf3JMjBKqLVj/
5Jg5z83WgvVP+r5RB1UP1j85Dvyrn27O+icHPz70W3fWPzn2aeXbdGf9k+Pi
Q9OZ3Vj/5FgW0phuxvonR1NlaXVX1j85Kvb1HNeV9U8OdY9zF01Z/+Rwrw+1
NWX9k0Nzo29eF9Y/ObLQv1sX1j85iuL7runM+idH7BKPahPWPzmstgs9TFj/
pPnQ7NrsTqx/0v1ePiyqI+ufHHt3vzhtzPonx/5x2WUdWP/kSFx0oW0H1j85
llv/VRmx/slhljn3uCHrnxwrO317b8D6J8ffZye9DFj/5AhpvT1Zn/VPjqTX
8a31Wf/kOLfvgkKP9U+OjT1/VOmy/slRljwiUpf1T5pfboPjdFn/pPWUrHdW
l/VPjk2J6frMOyvNvzmuM/RY/+QYJytK1mP9k8MhK/GUHuufHOun7N2rx/on
x5e2h9czr1C63+n3A5h3UxqvE22HMu+OHG5jxSZ2fsVynK/XPcbO74Ecz04a
DdNl/ZPDtMOQgvasf3JM6qTybM/6J8e/2Q032rH+yTHAetfodqx/coiLZ+bp
sP7JYfmz8rc2658cd3vtctJm/ZND/m5JRFvWPzm0v4Qv1WL9k+N5zg//Nqx/
crS762TamvVPDr+dBjdbsv7JMaUyZY8m658CndutVGmw/ilgX1g9oAXrn/T+
tTnDm7P+KXA3McS2GeufAkdvjGv99y31T4GzQernv99S/xTYdvDZkl9vqX8K
yD2cev98S/1T4PquT6VNb6l/CrxyHL/wO3ndFTiw+Yv+N/IsFNjCfTz5lbxe
CoTr/+3zhTwrBR6un5/8mTxrBXbrbdOqJ2+QApWBoxM+kmerwLP37hYfyLNT
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
kJfBY91a6Ye8E9J8yc6dHEFeJg/vlMf6K8nL4nHd+sencPKyeYzu2vLKEvJO
81Df+RWxkLyzPGbGDrMUyMvhMd6+4z9K8nKl52fsHpmMvAs8bOo7/w0hL4+H
7iHn+GDyLkn9WqLbN5C8yzyMYFXsT94VqT9FNYunk1fAI/TrWDM/8q7xKNL+
99Fk8gp5LJwat9KTvBs8Cn3P+HmQd5NHe5tH3dzJuy2dj8O3p2PIu8PjxY2c
+NHkFUnzK9vEy4m8Yml+3zHRcSSvhMe5TROf2JP3gEegRdeUoeQ9lK4vv3GO
DXmlPB49VJkPJO+JdHy7deX9yHsqrS9b3/w+5D3n0aP52BM9yXshPV8vFO3r
Qd4rHubz5qzsRl45D72alTAlr4LHDc61hwl5ldL9zTH92oG8Kh7zP+o/MSCv
Rnq+GuzZq0veW+n5cR2TdcirlY53a10bLfLe8wj4wuW3JK9Our53s1NakPeB
x/Pq95v/VtJ+jcc82fo1vyr/8+p5JDhdn9FU+Z/XwGP5ur22jZX/eV94HJy9
2rSh8j+vkUeJi6LDJ/K+84hJn2n2L3lNPOrsf7R5R95PafyW9f9SQ94vab/l
9rWskrw/Up+fV+eVk9dMgNU959yX5DUXEORQmPqMPA0BNe5L1j0mT1PAjG+X
5j4kr5WAGGVz3xLy2gjQtB7uU0SelgDBWcPnNnnaAvqvz5tzgzwdAY0rgtZc
J6+9AH5bTPJV8vQEZFb/m51Pnr4A+7nRVXnkGQqISsvqcJ48IwHmY3RCzpFn
LEC5783Z0+R1EtBKe1fHU+SZCNB5dWf8SfK6CNC4sGFlBnmmAnI79olPJ89M
wJQ6n6Op5HUXUDR/WvEh8swF/Amc+CSJPAsBdvbF5fvIsxRQcL28djd5vQTM
t2hvsIu8PgIiOa3xO8izEvDRuih2O3n9BBw/YvRsG3nWApblvOixhbwBAvrZ
91JEkTdIwF6N+jMbyBss4F/vHLN15NlKxx8xbOca8oYIGG53eMBq8uwEOPwT
WbiCPHtpftxvp1pGnoOAjPiFQ8LIGyGNV2pVnyXkOQo4UXGm6yLyRgl41JB7
TiQP0vy6E8vz5DkLGDGxpYOKPBcBJk0VzRXkuQpYwPs+48hzE2A4e9rV+eSN
EzB5bf7ReeS5C8gbGbQ2mLwJAlYddvYMIs9DgGvxXO3Z5E0SMGDt0XR/8rwE
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
2Tnp9f8BPNyunQ==
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxU3XdczX//P/AoDVq0pDSUBkXaJXq0956nefYxQpQRUURCiPCRmZWVmRUh
KytEVllZCZkRmb/35/pez9d1+51/3M7nnHM/z/fj9Xg/i+uPy1Q4IVrSXU5O
rrqXnNy/f/7/Dx7WlP37qPb8/59f9mwYLb/emXvu6PDvo9FTe2/A0+ns9SbP
zBE9723hnv/f51rY8/97/3PPraavRp7gnsuk/z5aPaf/C7DPv/acvPr4wz/c
82v1/z7aPVW7D56v2428j57Y0OeFdTd6/yfP2Dju0Y38Ds8X1QoHC7vR5794
HuxVFLatG31fp+e4PgW1V5j33dMyZenZr8zr8sxvCz9s0J28n57K97ZkjuhO
3i/PEw4tJm7dyfvjqacQr27bnTw5HM+/H9uPvV8O3gWmjn27k98NszaIhf3Z
57uj7dDs8P99nzyc044HqTJPAcqrqzL+sOtRwPyWklWf2Lw94J9nufsluz5F
9DDKc21heShB9uVI5R12vcr4UmN44yrzlPGCO4CLzFPBHQ/Da+eY1xMpHcUW
tczrBe2lPZSOMU8Vaft7JO9nniqM7qzavZV5alj3n8smTx0R4sd5/zBPAzx1
24PrmaeJyW79/tnC3q+JMQ9tHHcyXxNN+cs+VHDP//Nxh96o0+ynuol9X2+M
ML2bUMG8Pphnfuv+dub1QWJgRtD/vD7ond2M7WweLezXWPz1f54W3D1ORq9i
nja+JpwyX8Q8bbz+//qmDWHjs+g85unAMX+68QTm6eDEz8CiFObpYqye5tpg
5ulCb9LhIR7M00Wg/x3tYczTQ79d4hVmzNPDchWjei3m9YVSjYn1X3Z/9UWv
qiV2b9n91BeTJwY332P3oz6auHpfYfefPtRPNvQ6ye7ffpges8jlMPP64ZaB
Ue/9zOuHZ1oB0/cwzwCtcyo6dzHPAIfDyx7uYp4h3n8LOLeLeYaY+N/98H+e
IbZGTV+9iXn9Uftj/Iz/ef1h19wZeZh5RkDv8sMnmWeEbxptZleYZwTv7WrZ
zcwzxjuncsdW5hlDk6vfB+aZQNry+u4vOeqXCT4P1zwtz87HBDkfPk1WZfmb
wChY+a0uOy8TmP77YOdhijGV5t1tWV9NYbbHc70r80yhl5p90495ppg673tJ
LPNMMe3F3MR05g3ALPmxz0czbwDiRhb/nMy8AejTv+/N2cwbgAan9HH/6+cA
2Ay/9nEh88zwb/0Xs36Zwajj8t9lzDNDyfoNXquYZ4bBv8aPW8M8MwRfUhqx
lnnmmB5wdft65plj078P5pnjrOtbo+3MM0fSzpVJ/7sfzXG7OGXRbuYNxLXS
D5f2M28gHt7ImHyUeQNxRu7NzBrmDYSB79IPZ5k3EP//vreA4blFHQ3Ms8DL
kSfy7zPPAulR6reeMc8CkceM5r1lngUsq2xmfWWeJS4aq0/7xTxLxN5+XKjE
9rslTp2yvKzF9r8l7hkfvGvMfj5You//9/PDChrJquru7OeBFd6sGp3nxzwr
nOs0z4hgnhXMdgyck8Q8K0xYZG8gZp41vO+YNI9nnjVakv4enc486//8Wcg8
a1h3Pji8knnWaEoWFG5h3iAcKW8zOcC8QaiqHdyrhnmDsDy3TvES8wbBwHmN
2h3mDcJKK1nkC+YNRvIZyyVfmDcYvV44LVWQJ28wliU/j9WWJ28weO7TWszk
yRuM2yd+HHaWJ88GxZ7LMoPlybPB0GE9XqQyzwZf19zuPZF5NhC8mfSzgHk2
uPPzbPoK5tkiJkQpdDPzbLEp6JrSfubZ4tcazRUnmWcLtwF1n64wzxZK1/Wj
mpk3BJdX9Fn+hnlD0JIVsu4H84bgTvk4dyUF8oYgzfL7KW0F8oZgrqa3sqkC
eUMRkZ5saKNA3lD0PB2j6qJA3lDsyBbfAPOG4u+VhukhzBuKrdwvaAnMs0PH
6dZsIb1f3w7rti0/lqFA+8YOvrnRj6bS50Pt8NU28Mkc9n122Cl5VltMXr4d
JuXFLVvOvt8OwU5fI1aTV2UHkYLW7/VsHjsYzbZdtpW8Vjv4PZ7aezebbxhe
6oXMOsDmG4Yvn+5fPcbmG4aQiy+NTrH5hqGPflzMeTbfMIye8HHeZTbfMBx8
YHjiGptvGD6c1755i803DN5Gl9vvsvmGQVe3n1UTm28YTm/sN/QRm88e8sO9
kp+w+ezxJiBk9lM2nz3OeB0d+5LNZ4+QscOGvmHz2WPJ6tyX79l89njnemNJ
B5vPHgOfXBzTyeazh/W/v7+y+ewxRyeA38Hms4dnQ/vJz2w+B2SWPf7+mc3n
AG79q31h/XGAy9ZlxswLdcBpHe9ZX9h8Dqg9NMaOefkOMDRb3faBzeeAef88
/fWWvCoHHOF+vW1j8zmgpeVz5nM2nwOuvPTc+oTN54i4Le5PH7D5HLE+vcfF
JjafI2a/T4xoYvM5ovk+92DzOeJGej+7JjafI76PNYpuZvM54lTx4YpmNp8j
VuOuXTObzxGHjujV/O98HTE03U6zmc3nhKmOfoP+N58TPqy8P+MBm88JzS3b
6x+w+Zzwpahq6yM2nxOKNJOnsevNd8Js3kOVZ2w+JwiOTop6xuZzwtrIIQkt
bD4nhDspbGZeqxPG2WZnPmTzOWOK+g6v/83njFEBq3TY9To4w7RGJfsem88Z
I7gff7fZfM54/TS36CabzxlFrSVd19l8zkjSH5NZz+ZzxsiHd7Xr2XzOOJaq
efwqm88ZBp+1+FfZfC5YvFl+Uj2bzwW6tXzn62w+F4hv3Gy+xuZz+b8/2Xwu
aEvraXGNzeeCvY897f43nwvm+Tq73mDzce8fWxF+i83nglzkpN1h87lg879/
QWXzuWLB9mU1rC/6rjjoerb6EZvPFYVeU488Y/O5Irk9X+41m88VBXFXSj+y
+VxxbcqNjG9sPlfMyWlc/JvN54oHGvt/y/Wg+VyxK3uGVKEHzeeKkT1qpyn2
oPnckJC6/4lSD5rPDTsnXPRR6UHzueHbU7VtPckLdYOFS7G8KnlSN7y/EZyu
Rl6+23/+1CSvzA3TBvt9701elRtSoxJu67D53HDM+dIOfTafG2Kt5PSM2Hzu
6DCanzuAzeeOyhVTmizYfO5IK39lO5jN547F3Rr72rH53HE471uyI5vPHfMC
FiW7sPncUWeRHufO5nNH9j8FQSPYfO54fFvZFWw+d8zeVjHPm803HJ/y3lz3
ZfMNx/Q9LVoBbL7hmK/z+Xggm284+pTJfQ9m8w3HkcdNf0PYfMMx98/NcaFs
vuEob/7THMrmG44VW4UBYWy+4Wie9/dgGJtvOFTK7/UPZ/N54IPqu/nhbD4P
nHzs9SmczeeBZ0c3Xwhn83kg1Sl6TTibzwMoiJjAvHwPTNcq+RXB5vPA4UFx
u6PZfB54XLNmWjybzwPvlc09k9h8Hjids3VpGptvBJZ4jQ0UsvlGYOiY3T8k
bL4RGLBgndMYNt8IuBY3fRvP5huBZcNuH8hi841A31ebRNPYfCPgcrJkzUw2
3whUrQmKK2Dzcd7Bre/ms/lGwOJ04udFbL6RaOty/riUzTcSQXk6v1ew+UZi
QebB8rVsvpFQvNw7bAubbySOL13avovNNxIqVanKVWy+kXB09tt4gs03Er1l
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
gDesf2lIGzLn13vWvzSMWbzvZgfrXxq+J6Xyv7P+pWFe7dEdv1j/0pB5RP/a
v3+v+7/+peHMibJrCibUvzRsLrQtUjah/nF5f3PwUjWh/qVhWY+93zVMqH9p
KN+xbq8WefVpSC5V2a5HXmMahp9vWG9AXhOX97zXh4zJa0nDFs1JhWbktabB
yDl8miV57WlwKNjuP5i8jjQ8+VH6aQh5XWkIOvdrjT15cukIX6Zr6kyeYjqW
n5l90Y081XSM2d22bwR5Wuncz4df2V7k6adju7TA1Y88k3QoPL99P5A8i3Sk
b1CMDyXPJh1n5ixfEkGeQzr6rHLZGk2eWzpEVpbNceQhHTelYXY88vzTcdt0
lSiFvNB0rM5WOZpOXkw6/NbsfSUkj5eOkdZDb0vI46dDkPe8ZRR50nS0fjiq
lkFeRjpU8UZvAnlZ6Til7Pl4Ink56aj4UHM+m7z8dJinXimaSl5hOkIuf8mY
Tl4xl69VR8RM8krTkWNXNyyfvLJ0jN+9yqGAvPJ07L451LGQvIp0TIn3bihi
/UuHuJ9D8CLWP+79Y4a9WMz6l45+LSO6LWP9S0etp8qvUta/dFi77ri9ivUv
HcNlQxeVsf6lY+/UjdzfUal/6djWu+vLBta/dBx76LFjE+tfOo48Pt53K+tf
Osr3jyyqYP1LB19rhd5O1r90rP+wvW436x8ffiNkK/fS++X5aCuasvUA6yMf
LklvMw/R51X4WNvv/eojrJ989HqtXXuMPE0+rM78VjzB+srHn6o/oSfJ0+VD
7dqOg6dZf/m44pqVeJY8Qz7CVfc8PM/6zIeN4FX6RfLM+AjtX3nmMus3H0km
Gt3rybPmo6v86ubrrO98xFrO8r5Jnh0fylGWTxtZ//nopjUx7S55znyceWG0
5j67H/i4IXx7u5k8Dz7GfYu4/pDdH3z8mLS/4jF5PnxMs0mY1cLuFz4+2tw9
/Iy8ID4+mIXWv2D3Dx/T59SfaSUvko/2lm1329j9xEdN44Web8mL5+PsF+WR
79j9xUfxhQmZH8hL4aPokvyzT+x+46PTfZv9F/JEfFiMSp/Tye4/PvYHRyz7
Tt5oPs457PP8we5HPhRc7W1/kZfJx9+U225/2P3JR3VugUTO9L/eFD6CRx6O
7G5K9ysfdbFWwxVM/+vl8pH7zxZfRVO6f/l49FN7nLLpf70CPmKiOrN7klfI
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
P67fugGLn7H9J8HkXX3nvWD7jzuPve9CWtn+k+DT3oxBbWz/ca9PT1N+w/af
BNsiz718y/Yfl//a1s/v2P6T4NbgsFcf2P6ToPPpyI5PbP9JoJqx6k8H238S
zGqc49bJ9p8E6eMuZn1n+0+Cgpc+M3+w/SeB1qx+43+x/cfdL5rx/n/Y/pPg
kKWSkZwF7T8JjMfYD+xuQftPgmFrLwxWsKD9x/Xrd+0wRQvafxKEWdsaK1vQ
/pOA7/LbrCd5zyXIKPXTVCWvVYLyX5ov1Mh7LQGeaP7VIK9dgpNzsvT7kPdR
gieD3Ry0yeuQwN9YGKpLXqcEOx7PruxLXpcEt59eMjMg75cE8eq2B/uTJyfF
jfJuVibkyUsh+ny8fgB5ilKsiXiZOJA8FSn6TPu9zpI8VSmeh7XutyZPU4pV
3b4+GEyelhTLCoyNhpCnK8UM0esAO/L0Oe9nn4n25BlK8cmj22VH8kykmPbt
o4sLeWZSGNrfP+lGnoUUYX5h1R7kWUsxJHroc0/ybKRYftZS1Yc8Oymm/3R2
9CfPQYp9t75NCiLPWYrzEy7vDyXPTYrPTzx7RJLnIUVcs51XDHmQ4tGnCnE8
eT5SPKs8vYFHnr8UI7UltSnkBUmxcO+my+nkhUqxIvHvTSF5kVL4ZP74KCEv
RooD6zQ1RpMXL8XRn/XaGeTxuOsdGt84nrwUKfL+zN0xkTy+FL6zXuRmkyeS
Qv+Mb95U8qRSPFC6nD+dvNFSKMXsi55JXoYUox+MVs0nL5P7PrljD+eQlyXF
1OqnK+aRN4U7L60yURF5OVJoPC0Ytoi8XCkKcjb/WUxevhRJgburSsgrkKLk
ilNeKXmFUqQYfA1aRd4CKRKWjH65mrxiKfh7TPLXklcixbdL/fptIK9UiuFR
S66Uk7dKim4uTSFbyCuTYt3a8fXbyFsnxbw+M0Q7yCuXQktny7Nd5G2Rom2m
rmAPeRVS9DCvuriPvJ1SDDQu0D1IXiX3femXZhwib78UduKcb0fIq5JC7pEg
uZq8I1LYd9tw6gR51VKo2xr3PEVejRQ64g8jasmr5fowz7roLHnnpNgac/nv
efLqpNzv+9WLL5J3WYpdlzrkr5BXL0Vz0WxhPXkN3P37JmPndbb/pKjR29j/
Jtt/UmDy0OmNbP9x5/3B8vQdtv+k0PtVcece239SeKsK9JvZ/pNCqJeT8pDt
PymUXW8efsz2nxTfz4z0eMr2H3e/LJPMfM72nxRvrbW2v2T7T4rTmRYNr9j+
4+6f09eevmb7j+tb1H6Vdrb/pEiL7rJ7z/afDNs3tuAj238y7LdzivzM9p8M
exydAr+w/SdDf9Ebq062/2RoMlYRf2f7TwaTJw3zf7D9J0P55BbpL7b/ZFCL
Huv3h+0/GTLnnVWVs6T9J8OCAx9qulnS/pPh8qRfcfKWtP9kGLLmuUEPS9p/
Mpyt3nVF0ZL2nwwHnv2YpkyejQzb2lw0e5JnJ8PbhLElvchzkKHjxxULNfKc
ZZhe2fJanTw3GfJMp1dqkuchw7xk83l9yIMMYYtCU7XJ8+GuNyTDSJc8fxmM
TVZ81SMvSIbm9OFd+uSFysA7ce+lAXmR3PW0t9/sT16MDFWDZ5w0Ji9ehrrz
nadMyePJcOZA9k4z8lJkmJ9dIh1IHl+G04suqlqSJ+I8q0UHrciTyrD4y9a5
g8gbLcO44488bcjLkCG5aeQLW/IyZYi9UbRhKHlZMvQwSUocRt4UGcwKUn/a
k5cjw5XgdfMdycuVYbnVBC1n8vJlKAy8u8GFvAIuv7s3rd3IK5Thn1F35ruT
t0CGT8Ynfw4nr1gGi0bPCSPIK5EhfXfqs5Hklcqw6aZuHMhbJcOr8WMvepFX
JoNmZbKbD3nruOt93PeML3nlMlgPXpPmT94WGYqk+S8DyKuQ4cWrX2ODyNsp
g2Gzxudg8ipl+C6rnhpK3n4ZzE1crcPJq5LB+75XcwR5R7j78fTdhVHkVctQ
2uObewx5NTI0ii/rxpFXy/V7ncHnePLOcX1y+vkskbw6GbeP4xqTyLssw6RO
u6YU8uq5+02j8EsaeQ1cnwKCNQTkNcpgEJ2nJSLvrgzh++zfislr4s5vgeys
lLyH3PWe1do3irwWGWQ5phfHkPdchqF3913KIK9VhqlPL1aNJ++1DJFLUjZk
ktcuw2aN+ZMmkfdRhhmCSLts8jpkWHm1QH4KeZ3c9X3r7DaNvC4ZNpYrvskh
75cMvosyXs0gT24U/hlq8mMmefKjIMz2V80nT3EUutaFp88hT2UUGre9XTuX
PFXude/j7wrJ0xwFqYq59QLytEbBQft4ziLydEfB/0vWk8Xk6Y/C5fcLfUvY
/huFsQePn1rO9t8orDi7YMBKtv9GQWH/kXn/sP03CiYnvNrK2P4bBRfzwcHr
2P4bhf9X1J3H1bT9fxwvpUGhyOySoVSmMqvonTIkQ0mUqdLgDPucs/eOlDLT
lSERkZI5UzJEQpcyD13zUGYiIclUhvBb9/d9rI8/z8M9z7P2Wmu/9jrn4eGq
OkfuzaD+KbATZ9ttof4pcMe86b5t1D8FykY3a59J/VMgcHB39S7qnwLdr2fl
7KH+KdBg6OeXWdQ/BbbJDersp/4pYHfk/LCD1D8Foh9Eb8+h/ingtnsAcql/
CvjaaI2OUf8UMFvzrfoE9U+B0C77T5yk/ing1Wvz2ELqnwK9djyvOEP9U8Bp
2pez56l/ChS/OXfwEvVPgR5tb24sov4pkLfA5PA16p8C/+z+kXOT+qdA/r1B
S+5Q/9j8O753LKb+KbC6csf6+9Q/BZoWnvj9kPqnQG6ZY8QT6h/bbxl1i55R
/xR4aevs9IL6p8CH9uNRRv1jf374zahy6p8CUY2+THpD/VPAoNTav4L6p8Dj
mZdGVFL/2Hwbvveoov4pMMajpuFH6h+bz9gB5z9R/9jnlVjGfaH+KTB32XSn
GuqfAuPyw8u+Uv8UOFIQIX6n/ilwcbP+9x/UPwWOp9ZqflL/FPjiuu7ZL+qf
Am88Nrrp2fH+KTA6f9hGfTvePwUWH7vY0MCO90+B85/L5xva8f4pkHnEYFNd
O94/tn5/ZWcace8Se//sScXG3CtS4Kphvqkp964r8Nsj26Ye924pcNZgpdqM
e3cVcM2rk27OvRIFhk4f+Kw+9x4qUPh8pE9D7j1l9+/Hd7stuFeqwJIuvQ0a
ca9MgUeHOkxqzL3XbH52Hjtsxb0Ktr7zDfo25V4Vu//9SxObce+TAgH9VDea
c69agVbBm3+14N43th61K5q24l6tAk8WDTJszT09JdzdDxj9xT0DJbqVPTBp
wz0jJSxKM3u15Z6pEg5DGs+w5p65EsF3ux5pxz0LJUabN3jannuNlZhtnP+l
A/eaKrHILaaoI/daKBEjDIyx4V5rJZqtu2djyz1rJbpe97xpy70OShRcuD22
E/dslchPblHRiXv27P1v+y60414XJdq0Caprzz1HJaw9wv+2515PJcbG5jyx
514fJaq93/Z14F5/JfDu5nYH7rkqYfg5w7Iz96BEp/EWyZ2558Feu7W178K9
Iez9i+aWd+GelxIZftWru3JvBJs/00EDunHPR4mmZdk3u3HPj82XYfW07twb
p0SPR4ry7twLVMJxxAmFI/cmKRH22+O2I/eClbiRctDNiXuhSrT4FJTixL0I
JR7O+lrhxD2lEo8HPuzWg3uCEhsbNp7Ug3uiEiftJe8e3ItU4h1cbXtwL0qJ
Pnk103pwL4a9P6fXSfLilLg3661dT+7NUyIu0GpXT+4tVOJ3xk6XXtyLVyK5
vMm1XtxLUMLT+v7I3txbrkShSe3R3txLUqI4eGH9PtxLVmLqOXlmH+6lKP//
///al3upSlzXlKb/9/p/f/9FidjE+x797Pjff2Hj0dv1ph/3trH9cdt7VX/u
ZSqRdDb2e3/u7VZi64Tjzs7cy1JC/uy70pl7B5TQzb5d6sy9HCXWmz/u4MK9
XCVOD44a7UL9U+LDxe0RLtzLV6J9wr+zXbhXoMSd8cN3u1D/lDhoGV5A3nkl
PEbanCHvkhIrkh7UceVekRLHTt0Y58q960qc8tM75Ur9U6JXzJ7RA6h/bD9+
j/48gPrH5tukZNFA7j1UYnJIkyZu3HuqxBvluyQ36h9bv+JMc1D/lNg8ZXY6
qH9KDF3KmsS9CiV6VoR+dedelRIBlY4HBlH/lMgeVSfOg/qnxN4hck9P6p8S
5889++XJvVrWJ6e2lwdzT0+FM2kOa4dQ/1SYPcF++lDqnwr+Xh/GDKP+qbCx
y9S/vLhnrkJq4JZXXtyzUKHFlpclw6l/KgyLqbziTf1T4XfNiX9GUP9U+NR1
6pmR3GutwupzuYdHcc9ahW/+T46Npv6pUBx0Yo8P9U+FH/5j/val/qmwc8ma
xmO410UFu+mHN43hnqMK9W0Odfaj/qnwZNiKbX7UPxVsTYd6jKX+qRBx7Xo9
f+65qnD3Z/syf+5BBVVLr33jqH8qPH/ZY8l46p8KY8JfTQ2g/qngo7ekSSD3
RqhwzO7nhUDu+bDxSpMiJlD/VGjQ8tzDCdQ/FUJ2VkdMpP6pEK/u8Ggi9yax
9fG3mjaJe8EqHOl12nAy9U+FV8WaxMnUPxV2VHpWTab+qTAhf07TKdwT2Hp6
7Xedwj1RhR4/d0VNof6pMCfrbPoU6p8KJ05tvzuF+qdCifmgjkHci1NBvGQw
JYh789j1eYVNCqL+qfCuy7kJQdQ/tr/alAtB1D8Vuv737y1wb7kKTmnji8hL
UsGvxPojeckqFNikdg6m/qkQ2FW3PJj6p0L0glklwdQ/5k3u6BxC/VNBF2B1
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
fxqkPmzwbC31j62ffWjLddQ/DfoERPqtp/5pIBnIs1Kpfxq02uC4ZQP1TwMr
p/0X0qh/GvR49O5dOvWPXV9OReMM6p8GKWk6703UPw2W/8xesJn6x7z3e45t
of5pUDtzx+Ot1D92/cXFttupfxqsW5HSfwf1T4O6d5qPyKT+aaB/OmjKTuqf
BlemqcVd1D+2X6dVJu+m/mlgMqPH0T3UPw1Gbut7fy/1TwPTnr5vs6h/Goyv
WvRmH/VPg3vbi+9lU/806Nn729n91D8NZo27W3aA+qeBENS85SHqH/vvH0W5
5FD/NFi9tmb4YeqfBo2WP1Afof5pYKmavzyX+qfBVGF02lHqH7ufB5fuzqP+
aeBrOiDvGPVPg8mXJp0/Tv3T4ND6QbdPUP80qEqofJZP/dPg8P7g9/9Q/zTw
K7RpcIr6x+Y3s32rAuofG9+pmuGF1D+2/jcNlaepfxqcyrsdf4b6p0Gc+4vV
Z6l/bH7+6r/iHPVPg8dGxevPU/808Jl+4sgF6h/b348flV6k/mmQ82qw3mXq
nxalw6XWV6h/WsSPuutVRP3TYkzTjEH/Uv+0eD1p24ir1D8twuAbc436p8Wx
Tqd2XKf+aTG207sbN6h/Wqzze/DzJvVPiyXVH51vU/+02PYkKOIO9U+LEz1W
rLpL/dNiTWCzvfeof1pIZ8LPFlP/tDBJaF5UQv3Tos61fcYPqH9aRJRvc3pI
/WNe6YSJj6h/WqTdvrnoMfVPixkzjGc9of5pMXlQzuSn1D8tRl550P0Z9U+L
Xo72jZ9T/7So1U8xLqX+aZHwoWdJKfVPiyY3A1NfUP+0cLcZH/iS+qfFneul
xmXUPy3S93nnllH/2Hx7Dvd7Rf3Toqzpy8evqH9azA/ZFltO/dNi4srTX8qp
f1r0PDt322vqnxbDfj90e0P902LeiSeX31D/tLDCOf+31D8t+qWsePqW+qdF
7/Drwyqof1p4xqx5UUH906KZl7HuHfWPzde833ffUf+00H/ZwKeS+qdF4+aO
9yupf+zzvtfze0/9Y9cXOnv3e+qfFqZvj1a+p/5p4fL1VPsq6p8WjZbqx1RR
/7ToEef7tIr6p8WAe8uGfqD+aVGz5UD2B+qfFu1KTzX5SP3TIs62IuMj9U+L
QN8XTT9R/9jnzTyT+In6p0X0pgSjz9Q/LewOdNR8pv5poQ3Zc+sz9U+Lgzbm
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
F8yuf+tDR/JCJATqPxlJXih7Xe+hirwwCYWvT0eTFyGh/ovoQPIUEsITbTv/
+T1EQu/Ihv3JU0tYMdU8/M/vIxK2DdRfRZ5Wgk1y9ZU/v5dIeHHuZjl5koRx
bTJekRcpYcp+ZRl50yW8ju79krwoCeXtDD6RF83ef/Nqmz+/r0ioHpmkoPWI
lbBwuOehP7+3SNh35c0PWt85bP7cEjvRfpkn4aBNh6n0+8B8CQqvIysMubeQ
7cdmY9Jo/y2S8LBpTSrtv3gJa/3T15O3REJcyIcq8hKYt6xTAO3nZRISCp2v
0v2xnPVK7udJ91uihLrbrI/T/ZYkwa/Dk4HUg1Wsv/XSDlMPkiWo5YBW1Jc1
EjbYGfx5HqVIaJk4v4b6sl7CtZQ3An1/S5XwqbLdB+pzmoSckrrJ9biXztZ/
clEvep5nSLjkk5tnxr3NbH2ve06g88EWCe3UgwrofLCNPQ8Wd7Wl88Z2CdrC
NXn0/SNTglWqiSudX3ZJeLQp7BR9/9jNejnRtimdh/aynoYWC/R9IYu9Hrjz
MJ2vsiX0v3X2MZ2vDkgYGxZnS+f7g+z+n14dR+e1HAlDS4Nv0XntsIS9c5b0
+3P+k+DaTe/yn/OfhEMbJk+k8+4xCemrlT/ovHuC9XVPQFpj7uVLGHw1rIsV
905KWGSwOtuKewVsvH3Ubk24Vyhhmq7icRPunZHwuNJnTlPunZXQ4FoLvWbc
Oy/hvd+V+c24d5GtX/sn1s25d4ntF/+7p5pz74qEqK2u7i24V8Tuv0WeN1pw
7yrrU+KWOS25d53dP8XeXq24d4N5m+Pbt+beLQnbv4+s9xf3bkswqt2o14Z7
d1lvfgSVtOFesYSpFWlr2nKvhD2fjEzcrbn3QMIJz12Prbn3UMLbzfM07bj3
mD1fTr+u1557TyU8P9pnV3vuPZNw8sapPh24VyphT92E3A7ceyFBE+LSpyP3
yiTc9Dr9rCP3yiU4mP6bZsO916xnK3P9bbn3VsKOF3MaduJehYSO287e68S9
SjY/7bIW2HGviu1fmxld7bn3QULp0bbF9tz7xP58zeNNDtz7LKGqwGt4Z+5V
S4hNTvncmXtfJfgmTNjXhXvfWN8rbRZ25d4PCeuGXwnoxr1a9nn9Hrp2594v
CXq2Lwc4ck9PRr/wgoFO3NOXMaBhM3UP7hnIKHDwPdyTe4Yygo2mtezNPSMZ
4+NzpD7cM5HxLdX5eF/umcrosaOBZX/umclYbLRhuDP3zGUc6qac4cK9BjJU
5+KzXblnIePkz8ovA7hnKaO5eYa3G/cay/BKtVwE7lnJ8Jzmu8mde01l2Ng/
3zuIe81lvL/gfMeDey1kfB9QYj6Ye61k1O6A5xDutZZhfzx4/VDutZHxetv4
a8O4Zy1jR+jWGi/utZMhPPC09OZeBxkDdx5xGMG9jjIWekWMGck9WxnKq89j
RnHPTsZRj85bRnPPXkb3//69Su51ltH0y1ezMdzrImO+ZrTgx71uMr68mlY0
lnuObD4LTfTHcc9JZucB807juddThlHmgxEB3Oslo8GjRmGB3Osjw920RewE
7vWTsaRv5aqJ3Osv42OM04ZJ3HOR8fLfuqcmc8+VzdfZzNIp3Bso42b/o9+C
uAe2v559/CuEe+4y9P1/uE/lnocM4y3Xw0O55ymjtX2HzDDuDZHZ+XjN53Du
DZMx9/iMXtO458XmJ+lyuIJ73jIM7QfsUHJvhIxZ1y99VHFvlIwL3VpD4J4P
279+vVZouOfL9suIRve13POTMbFzrq3IvbEySvYvGSdxb5wMu1628TL3AmRc
r7x3JpJ7gTIih47Rn8G9iTISR6wdGMW9STJWlnVeP5N7U2RIvvEforkXLOPz
3hDXWdwLkWEtG/wdy71QGZftsp7EcS9MRrPcEvs53IuQMfyl7/i53FOw66sK
iJrHPaWMzPSP8fO5p5YRs6d9wgLuCTLuvrBZtpB7Whlh42uXL+KeyD6/fmbi
Yu5JMqb/825+PPci2foFui38m3vTZZhs/DVtCfeiZDx8fmFCAveiZbQ52Mdt
KfdiZKxqt89pGfdi2f2/4VuH5dyLk7Fb9d54BffmyOjsvfrRCu7NY5+/wLkw
kXvzZQwLPrF9JfcWyli9Pmx7EvcWsfWtd2LtKu7Fs/W7/ip+NfeWyHDI2Dox
mXsJMnrl9nNcw71lMiza7zFcy73lMpzfVhev5V6ijK6t2u5L4V6SjDrPp2xc
x71VMryVAXPXcy9ZRvGeIbpU7q2R8bP7B58N3EuRod05sWMa99bLWH8y4XUa
91LZ/ZqblZ/OvTR2v1YXbNzIvXQZPQff25DBvQwZec1Or9vEvc0ydo49enIz
97bI2FSW/9dW7m1j+8lmWvA27m2XkZ1zZc127mWy/THxx8Ud3NvF9iPeVGZy
bzcbj9+qrzu5t5f1uMrReTf3slg/Fs/z3cO9bBnjQndG7eXeAbYfG6WnZXHv
oIwp/qFX93EvR0Zo8/cvsrl3mK3/62Hv9nMvV8aKUZElB7iXJ+Pa+BnnDnLv
mIysjb5rD3HvBFuPN8aROdzLl2E+Zb3PYe6dlPFJz6DbEe4VyPhd6NIpl73+
P4Iuyys=
        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
+FW6dm8YeeUS5L275hNK3msJbGMHdBaSV6nuEyz9GkjeOwmiC6cODSCvWr1v
P6dvFJD3RYKh51t29COvRgJRs4VnfMirVfeP/e0d3uTVSxBeEzzFi/tP3Rcv
27X05P6TQrzecb07958UiTZDVW7cf1IYzplp7sr9J8WJAaNbuHD/STHGOPSY
M/efFFtmfI9y4v6TovexZn0cuf+k6By0qsCe+08K6ZT8EXbcf1LUjvXdacv9
J8X38XMG2nD/SbH/kPmWMdx/Uuy7Pq2XNfefFP0PKRMtuf+kCN9zqs6C+0+K
FxvXTzPn/pPivV+6oRn3nxRj93mMNeX+U78+pw0jTbj/pLDIvft2FPefFBWp
s7cacf9J8U3LI2Ek958Uv14ZTDTk/lO/vlkTJCO4/6RoI1FaGnD/SbEt70qn
4dx/UrQ+XDRwGPefFB7Fbc2Hcv+pX38rC8UQ7j8pgmZf1xzC/SeF0kLz0mDu
PykC7e9vGcz9J4XfaYvwwdx/UvxperD3YO4/9T60tHuiz/2nnv9MVZY+958U
7cJtx+hz/0nh7tDjtx73nxTJR1ue0OP+k2JPrvoak/tPipVRY5cP4v6T4tKX
3LqB3H9SBPexlw3k/pNixb1ONwdw/0lx9ncXywHcf1L4z3Df3p/7T4r86e4P
dbn/1M+vsbqNLvefOv8ebiH9uP+kiD1vs7sv958Uy8JWdevL/SdF97xu8/tw
/0mRenfzsd7cf1K83et8uBf3nxRz3w1L6Mn9J8XQ1ZMH6HD/STEvbsT17tx/
UkwZFL66G/efFJ9/No7pyv0nRdfBP627cP9JIU+Mq+rM/SfFDPni0E7cf+r9
Nxx7uAP3nxTPO81r1577T4pjjmbztbj/pDi3YFJ9G+4/KUQbH+5ozf0nhWv2
/LhW3H9SzF63bmxL7j/1+y/W+2ML7j/1/FYzNjXn/lO/X26t7daM+0+Kgt3W
K5tw/0nhuFjWRoP7T4pdeh0WNr6l/lP3wa+3vf68pf6TonB75trfb6n/pFAk
LXha/5b6T4qPe1oOqHtL/SdFxu1FHrXkacjwc1ln0XfymsmwYb++2TfyNGVY
bTJ72BfyWsswY+f3Gx/J05LhRNNjyz6Q11GGPc2PRb0jT1sGvZmVkiryusnQ
vOrZwArydGTYtCquz2vyessw4Pjh7i/J05XhmLC14QvyBsqwIKeJ0zPy9GX4
/uyN3hPyhsrQ8emTKWXkGciwxk128SF5RjK4vJzZ5QF5JjJclD5yvUeeuQzn
GrQ3lJJnKcPriufVt9XHN//TfzIcfjDa9pb6uMl/+k+Godb2ejfIc5BBsXXt
/avkOcuwakh5zhXyXGXw3fR6UjF5HjKUNnZefpE8HxkOVDYtOU+eQAbNc4ub
nyMvUIY5GadCz5InlGHQnaSC0+SJZJCOKml7ijyxDPdicuQnyJPJ4D+k8/fj
5ClluDu+zvMYeVEyxLlEXjhCXrQMt+rC+x4mL1Z9/k1eJhwiL16Gsfbtsg+Q
N02G4XeLXu4jL0E9T63moL3kJan3RfZCuYe8ZBm8xEMu7SJvvnqeAbqtd5KX
IsMK4S7PPPJSZbgTr7yynbw0GUY/GpOwjbyV6nysjnfYSl66DJELK5Zmk5cp
Q0t334FbyMuS4d0J45ObyNsow4gTmLSRvGwZnC/qBm0gb5v6/XAsFOvJy5Ph
xnKniCzydqn3L7Rv1jry8tXnc5XF3bXkHZChf2PNt0zyCmSQ/1k1IpO8ozLY
z2w+fw15hTJsddz3KIO8UzJstlthmEFekQxRgTsWpJN3QX3+8hJ+rCavWIYO
vr/dV5NXIsOwyYanV5F3XQbrqq31K8m7LcPZ01YTVpJ3V4aKXavPryDvgQwT
LnpWLCevTP3+K33/cRl5T2VIP5E1fBl55er7+w7zTiPvtTqfG03il5JXKcPU
CVMOLiHvnQwBZnpfUsmrlsGqPsI1lbwvMtz/2v30Yu4/Gbqof+Uu5v5Tn981
12sWcf+p37+bGiMXkdcgw5UTx5elkKchx5qahVkLuf/kGDQ6J3cB958cm04e
mTWf+08O2eEhgfPI05Ij8u+RX8nkdZSjx4GPd+dw/8lxdHtU+mzuPzne79Dt
N4v7Tw7dAV57EsnrLcf9x18tZpKnK8fME33qZ3D/ydH/+b4T07n/5Mjomps0
jftPjh3PGoKnkmcgx+9lx3tNIc9IjmzTG3Vx3H/q17fN89Rk7j85+v51UsZy
/8lRsWB3xxjuPznK2kTcn8j9J8cGnaDD0dx/cmyzS9k7gftPjqxUo2Xjuf/k
eHncbGIU958coz+azlVx/8lxbfLsNZHcf3LMH9h5t5L7Tw7Fi89nFNx/cjQP
zmyp4P6TY+iuv73l3H9yOG95NEfG/SfHnzUjS6Tcf3KUivo6S7n/5Pj0Y8ku
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
6asx4Pu1L8/pGaqxaeYRqyx6RmpYnfKYnE7PWI2k4Rbb7tEzU2NI+qdHt+iZ
qxFf+tokhZ6lGlgx3OAyPSs17hakVV2gZ61G92a3WsTTs1WjX8bzvjH02qvx
97a34Sfo2auxQGv45gi9LmoIVx95HKTXXY1FfY9e2UuvlxqVyycY7qTnpMaB
vJKuEfSc1WizrIvvJnouanxqOWtJKL2BarRv+1f4anpQ45HTzoggesPV2Ffb
/uQSeq5q1DN7lCLRc1NjwxTTuxp67mqYXH1/xZ+ehxoO0aXnfel5qpHlummf
Dz0vNYaufqr1puethnWfdMdJ9Gao8f6+b4/x9Garcf/NkRZ/0PNVo/70hvoj
6fmp0fasQX3QU6hx0tSw0wB6ajUsE4Z0dqYnqLFVb29XR3oL1Wi2r2nP7vQC
1LjS+lTvTvQC1bgWmfqHHb0gNXKS90xoQy9YjUsTOo5qSS9Efr82a5A5vVA1
ckv0RpvQC1Pj4c6+1kb0wtVoEhX8tz69CLm+JjfZ+us1808Nj9zmyytfM//k
/Ti9a2nFa+afGvMn91vy6TXzT43ip5Mmvn/N/JPfr3qLN/SOyu8b33dyPr1o
uV4tGrq+pHdKjXOu8R2f0YuR18+gvCCDXpwaMa+Pxz+gl6DGoOgAl1R6iWoM
Lhwcl0IvSa7PHUk7L9NLVqNFxPYtifRS1NDOTN0XT++mPP+O5idj6KWqod9j
+LET9O6pseJxpxVH6KWpkXHfV3GAXobcH8c++++hlyX355m9iu30nqlh9rPB
qC30stXov1FlHkYvVw1F/Yz0EHr5aiw7f+bcSnpFamzbtG5VIL0SNXbPWeex
iF6pvP8NH/TR0StTY9Tar18V9D6roX41+tI8euVqVDWtPDSL3je5nyIK9k2j
V6mGY9XPk5PpVavxeJryowe9ehqk+lwzc6enr4GJSac+o+gZanBt5ZWgYfSM
NIj5PDN1ED1jDSzCrPu60DPToN6a3GN96JlrEBh6wKIXPUsNEobOWt+NnpUG
drUdbTrRs5Y/n198wY6erfz+lwe72tBrr8EFvQm3rOjZazBvcpWPBb0uGixZ
t6/KjF53DS7DcbcxvV4a3E28Z9eInpMGfVcoDujTc9YgZfT3rrV5zD8NBhaq
H1TlMf80sE2Ki/iWx/zToLlPgde/ecw/DXoNfOvwMY/5p8H92LAh7+m5afBl
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
kF6uiONn83uL9PLkfrfZVKWlly/i9aB/E9T0CkT033Vdo6RXJJ/nxpWd/OkV
y76yPGs+vRIRr8ZMDfal905EV7P7A+bQKxXxb+wIw1n0PsjrMaxD5gx6ZSJ2
DW14Zhq9jyJu+7qvm0rvs3z+Hbs8zIveF/n8+au76SR65XLeFPWpnECvQu6H
vvuLxtP7JmLRHwePjKX3Q8SE8P3CGHqVIjp7DzN3o/dTvq8890x0pVct5/X7
DO8R9H6J2Fyb3WoYvXoSnMd3uzaEnp6Et+GLpUH09CX8efl8nwH0DCTYp3p/
/52eoYSdsz/edabXSEKPyFWpfegZSVjgXv64N70mEr6sHPmxFz1jCb0++f/s
Sc9EQt6KDx170DOTEDrztqYbvaYSLnb550IXeuYSLCcWGnem11xCg45tV9vT
s5Rg+97GoCO9lhJUC9IetadnJWFUt+OX7Oi1lpA2s3NcO3rWEsr2vd9oS89G
QrGJckpberYSJtxt28GGXjsJ/S/uLrSm117Co+K5a1vT6yChPENl34qevYQb
++yet6TXWcIWm4zrLeh1kTD0Ztg9S3rdJChtdJkW9LpLeDb4w9vm9HpKiDxk
/9mcXi8JK3ds/tGMnqOEpDMf2zSj5yShZSezvk3p9ZHw7c7XQWb0nCVcfmQ4
ypTe7xKqeg/3MKHnIuHHS3XAb/QGyPt3JXm/Mb2B8vyHb81sQm+wvN8Gj0ob
04OEcwuzy43oDZVQOvVWKyN6wyW8f77cqRG9ERL89c5Pa0jPVcKhbMuzhvRG
S6hptqe2AT03ef+Mw2c3oDdGwr5nkdcN6LlLyB9n5WhAb5y8Pg3jovTpeUhY
XzXLTJ/eBAm3qnLE+vQ8Jbz0nvpLj94kCb0LSjfq0fOSELzpzxZ69KZKWOvp
dqwePW8JOW1mDalHb7qEf56Yf699wfufBLsOT2P/8/z/9z+53rJ9pv7n+b/e
bAmvI7/r/ef5/+9/El4tOHTm1wve/yRsu2kx6he9eRKy5/o8qaHnJ2HYpx+6
Gnr+EpZ3ne5cQ08hYZ56sFUNPZWEX6MiW9bQU8vjHfKjRZ2nlRDTbnPHOk+Q
+93Fa2idJ8r9+2y8qs5bKNdnU5P1dd4iCaNX3DlS5wXI+ZRyNq3OWyr//Hr4
tzovUN5fO0ODuvkulxDisKJp3XyDJBx/+8XmF72V8n4+/LP/L3rBcr0f+/Xf
9fn/+5+Eyi6qyXVeiITH689OqvPWyuN/eKRfnRcqYXGLA63qvA0Skn+bVFA3
vjAJc/Uebaqb7yYJVy5Mda6bb7jcf91711TT2yIhKsjiVjW9CAktLtnuraa3
Vc63aU7aanrb5fy97Ni3mt4OCWuaNsj/SW+X3L8rrU78pLdHwpvEftqf9PZK
WHpxVt+f9CIlpE/yy6+it19C154LVlTROyjhrlFgqyp6UfJ+FEVerKR3WILC
Jfb3SnpH5fNk5MUDP+gdk/BwUKnZD3rRElYFYdt3eiclTFp/uMF3eqfk9Ypp
FfiN3hkJq0vOlH2lFyNhUc/Js7/Si5XPm5WWTyroxcnPG/WkCnrxEtrOqjGt
oJcgYaZQG1JO77x8ntxobVhOL1GCw96xG/6ld0lCu1Y7P36hlyTn36tvk77Q
uyzn+yvp8md6yRJmmxvZfaZ3VcLvked3faKXIo//3ZIm/3n+P7p2EAc=
        
        "]]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 99.31947054685479},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{290.55078125, Automatic},
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"TWAP\"", TraditionalForm],
    PlotRange->{{0, 300.}, {99.31947054685479, 100.65174275241587`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.822302650075466*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"49e1668b-1fb9-46a9-82d4-7e84cc6eb1e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"data", " ", "=", " ", 
  RowBox[{"RandomFunction", "[", 
   RowBox[{"\[ScriptCapitalP]", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "T", ",", ".1"}], "}"}], ",", "1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"moSignals", ";"}], "\[IndentingNewLine]", 
 RowBox[{"data", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loDepth", "=", 
   RowBox[{"optDepth", "[", "mat3", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.822303378161314*^9, 3.82230341350776*^9}, {
  3.822303829749434*^9, 3.822303840292757*^9}, {3.822348261406818*^9, 
  3.822348262235848*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"1a85790c-9cb6-4123-88af-f5babcdcc796"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TemporalData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJxFU30s1HEYP6zIslmspuG8xWnSi9Gy6Mm7qVvn0HN1xHnN270sTV5iGrVJ
jLTFHxFl0ZDRToWwjM41hYjCdUZeOuvyFpV+57v9erbffvv8nuf7+Xye5/d8
LQXCwGhtBoNxkno0b+fpXu9m7rA7Yzt4sMw/wJktNAI/RZpx/RrCG5mVbq7A
BmI0sYrAdJwvO+bvCPW+VMFfhH2CMaXRlhN0r7D4hdo8eOBcUPvF4wSp38mD
hrrx/BYHd7DnF3at6PGAOfySreo4DdUiN/0RHR5wK9+2GYV6gdQ8d4FD5WXu
dq4g9wEnTVD5GxW1bGOJP12fNZguWpoLAI09Xy0exA0WpPKD2TTuC4i8LU07
R/vJvmcb6dPMoflDPP/sYOlxQUzRVVH9VoUsl38IDqLPFwcWSxkFwbDK0hhG
qGz0rMyZCCF8aoTAtXLDWyZI/CkRrCt0zyiSeYRvCiG+oSRNp/0C0fuGwK3p
Ofxk9SJo2FiLCHwtg2cP/UNJfh1B12tDyswLg0UO9WUTwf67bnP0q0s0dsm4
25aVF076/4nAupoadcc6gj5/0DLmR488gq6P3VKuKa8IoOw+Fb8QVjgtnV2G
kaCR528hlAQXiWWtkXQ+R94+XXo+CuT9VPxGeJqa+d5LHUXzzQx5V5uVRdP/
X/wowlXqEgNMSl6qQthtd/N5xtR/vG7KWNXOioV0apyKeQQLn10NSfvjyD7N
IqCFKVu7O47Mj+pHkZzTiOGXid4CwrVk9fqofjxQ0xS5UefPVqpfuDXFE79z
CBI/H4hiJ9D1NRVVdc1rCUR/AuFQUtBYT2ki6eczgiqxNKftSBLxM4bQYTZl
ODGaRPgprPC4LnidkkxjIxPbsn6mkOyDAiHbKiygrUdI8zEHliePHxUR/XGE
vNhTBo9zRWQ+HxH2tjqZpgyJyL6PIjgqHcw/2YuJv3cISlsVvyFTTPrpQ+i0
4WXOyMRkfwYQ7DZ7i5osJKCBIjlCS/7X3EmhhMxvBGFpT93GVocEtq8rtW//
ANd/u54=
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$1423527#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 99.15}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 99.15}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 300.}, {99.15, 100.14}}, PlotRangeClipping -> 
              True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["300.`", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3001", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Paths: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJxFU30s1HEYP6zIslmspuG8xWnSi9Gy6Mm7qVvn0HN1xHnN270sTV5iGrVJ
jLTFHxFl0ZDRToWwjM41hYjCdUZeOuvyFpV+57v9erbffvv8nuf7+Xye5/d8
LQXCwGhtBoNxkno0b+fpXu9m7rA7Yzt4sMw/wJktNAI/RZpx/RrCG5mVbq7A
BmI0sYrAdJwvO+bvCPW+VMFfhH2CMaXRlhN0r7D4hdo8eOBcUPvF4wSp38mD
hrrx/BYHd7DnF3at6PGAOfySreo4DdUiN/0RHR5wK9+2GYV6gdQ8d4FD5WXu
dq4g9wEnTVD5GxW1bGOJP12fNZguWpoLAI09Xy0exA0WpPKD2TTuC4i8LU07
R/vJvmcb6dPMoflDPP/sYOlxQUzRVVH9VoUsl38IDqLPFwcWSxkFwbDK0hhG
qGz0rMyZCCF8aoTAtXLDWyZI/CkRrCt0zyiSeYRvCiG+oSRNp/0C0fuGwK3p
Ofxk9SJo2FiLCHwtg2cP/UNJfh1B12tDyswLg0UO9WUTwf67bnP0q0s0dsm4
25aVF076/4nAupoadcc6gj5/0DLmR488gq6P3VKuKa8IoOw+Fb8QVjgtnV2G
kaCR528hlAQXiWWtkXQ+R94+XXo+CuT9VPxGeJqa+d5LHUXzzQx5V5uVRdP/
X/wowlXqEgNMSl6qQthtd/N5xtR/vG7KWNXOioV0apyKeQQLn10NSfvjyD7N
IqCFKVu7O47Mj+pHkZzTiOGXid4CwrVk9fqofjxQ0xS5UefPVqpfuDXFE79z
CBI/H4hiJ9D1NRVVdc1rCUR/AuFQUtBYT2ki6eczgiqxNKftSBLxM4bQYTZl
ODGaRPgprPC4LnidkkxjIxPbsn6mkOyDAiHbKiygrUdI8zEHliePHxUR/XGE
vNhTBo9zRWQ+HxH2tjqZpgyJyL6PIjgqHcw/2YuJv3cISlsVvyFTTPrpQ+i0
4WXOyMRkfwYQ7DZ7i5osJKCBIjlCS/7X3EmhhMxvBGFpT93GVocEtq8rtW//
ANd/u54=
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$1423527#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 99.15}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 99.15}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 300.}, {99.15, 100.14}}, PlotRangeClipping -> 
              True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["300.`", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3001", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Paths: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.1`", "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"HoldValueFromLeft\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[Automatic, {CompressedData["
1:eJydmz2MlkUQxwE/UNCOGmOHtTXJddhCdSRUJtqKLdbU1NpqTY2tNoqgIiKo
iCIiCIifgJ/o+w7PP3v53f0yz3HJ5Z/ZnZ3dnZ2ZnWd332dffOXAS9u2bNmy
dfH/9s4t09/BFeKre3ecf3MDJN/xfZeP7Lq/ug6X7If/XV155ujN/SfuD7R6
6/fYO3f2HPpv8J0+tfj7Z+Ct/Sd2H/170IeWDdaUL7vZ+9fqymu7Fj1vgOGz
esM3Xl/8/TlwIeXm/j9WV55bDmCBLyymefzeoMOXcuLdPUvG1ZWl+CO/D3zr
8EIRvw36+eXfgi79/Ly6cmDZ8S+rK0sx+zbA8JV612DqQ4fP5MztJ3zvLpbt
2K9jvCnnfDiv1IdmOfmDpq+5uDSv3XcGpjzr8vLy7+6gO4ycpfntuDcw6x15
rGc/HBcx7WJ/hrG/2GPKY//B+A/9jH4VOfQv9pN6+kvKg+w/8cHiSzDxIWhx
pOzikYMP1vXRQQdLn4+tr095sNZlgTW/JwaWPjega723O7Id29f6bh9IvrkY
eWVfjw95oTOv8qc186YeUl/+vW3oK3Qwei+/3zraEVPP9iyvOLN1YOSHzrqH
pjxrT0x9+g8aH/epoMm3fZRyM27aHe0x+g+GL+vK9e7skfZGOXPlh47dlZ/v
OPjA/58cdLDixwZ0xYWdA609MXbf8Wd8xLSnn0YeacolH/3R4gAx9aZ/6pl8
RK6vrXNnNymPHcZe6d+Ms7RX8lscCNI/yc+4wn7T3sYXpJyuP2vP+rnlGW/W
wezE4nu333SY9TV/7+yRdmftrL31Z/um0fTTYPgsLpE/yLjU0cTUcxwWb6hP
y1MsXzG9kTY9WB7CfKCzZ/qz+V0XL2gvnI+tl+0vlW8+NTDrVHnvgq489OlR
zv3F8j3u2xw3y7le1p58lMu4avokTbth/hdk3LM4yLyP7cnH+Mpy42O8tHkQ
aceWT1FfzCctnwsmH2T+yTyPeSbbW75o5d13ke2j5q8s5/jp92xv/BbHOvsi
39z+Lf+378aUWx7C7xwbL/OGDu271OKCxQnasX3Pmp/Y91qXD1EvRNsf7PuH
35m2bjxP5PkhaZ4n8LzSzi9zLsJ29DuW0/8sHnT5tMUtsw/L4y3f53cF80vu
P4yrc79rLC+JXM6LdmLfBeanFge7cwG2s3OBzcbr8NOO7Jy8i+tzzy2Yh3Xn
M51+O/117XiO052LWF7CfcX2B/oR7b/Ls7v9a64dZl3tPIt6NP65+QXl81yX
9yl2r8P7F57f2v1LaLvHSfsg7114bpxzZp5r8zyd5/k8X+c9AO8TeC+R+wze
i5Sebk96+nGa361pPrfW0+QLppxYerq5nq9rV3Zz25H3RBVffhr1oa3e+gk/
75EMc28UND6Ol3oPnXFYPfVOzDpx/bIOLC87vTHd81wbWPZ5fbLbG45pT6zv
2R8Gsrzs/vror+z/2mT/3w8su7862fnVya6vTPr+dtLv5cnOrwy61u8hsNbp
m2mdNsDIJ2Y8kRN+ygtt/ZWdfr2+X/KzHedRdnRpYOQGy54uTfb11cCUh4/z
C0bfHWY81FfGT/lpl3UOVnz7btgDMfYTu4r90v7iB8T4RejwWzxke9q/+QfH
Y/yUS38izvXT6Mf0FJp85Ldyjp96C3bxPJhyQ4vrjPuGaWfvBhLXuZ/yPYKN
N3zclxjnaX/Un+3Hti9zXNwPOX7bP7kvct9L3sF8hEi+6NHeXbA8cpjfUK7l
P+Tr8inKt3cTydeYx/G9jL2rSDu+M2A+ynq+e2D+yTzXkHkq30PwXQTHl/4j
h+04bua9lB+a8+D4bB5dfs88nuO3/J/9Mu/nOxB+B/N7xL5Tgvxe7s53KJff
Q6HZD9G+k6hf2hvtsbO76DV20L1bon/Hry0emP9bfGB50OIZ/TrjJtp7KZbz
XZS9u+N7Pevfxm1x1N6xUT8cv82X69fFQ8YDw/AFOV/r196rpdzinpXb+vC9
XJDxnvwpZ3w1pL9157t2fmFx8mHfm3bnHaZfvksNbXG5O2+Z+27P3vltdh81
PXX7hZ1ndfJNLudP+7X8w+yd+Qb13vmJ7aebzVf4XtPW2d4tc95d/OriFPXX
IeV1+RH1Zu+4zU9p9+ZPti/butH/7P6K+YvdY9l9geU5jG+RT5z7fpH5VcbT
+av5LfUT7PJey+ctznfxvLMH2lP3uwGzV7PTTl+0W+anXHdbZ3uHYHZm+Tft
zcafcVOOrVfnP939Bf0hdHd/Z35g71zs/tzu++2eyO6FGBdsPR7W/iNnbr7U
+a+1Z7vNjo/xxfyT8djypS6/6vY75vWWTzNvtnMflrPezk9s/7W8ujtHoV4t
/jLv5DkOv/ceVg8517JzLv7eqPseSzue49k5Ks//7PzVzjXt3JTnhUE7pzW5
dv/Gc1mO0+7jrNx+N2b3o3buTH1zHjnXDdrvzYLUi90jctxEyrH7RN4rkmb5
3HtGtqdddHZAjBzaWTde9m/jt3sK6in1uU/hvYndt9j9UIfdfQ7lhub9qt3X
5N7V7nlynxY+3sfOxdzbBnOPF9rue3mvZ/fDNk+On8h2RLsv5PrYPU13P0O7
pZ2TZnxkPLJ7E+4XVs/9ied+vIfp7nm6+5LQ1o+Nu4uHVh75lDP33QbvA01f
3T5itO2rXZxknON+ZO9tLL5bXOE7ns3ym18wrtm9tvkp34+QDlqc6+Isx2Xv
BWz8jOt2v2v7hr0DYPyZu/9w3IxnfAdg5Yy3jMtz467FYcbxuftUyjlf0yv1
aPZq+6u9m+B8uG7dOlpeYevSvQvp3mnZuw17L2Pv/+y9jOVp9t7A3hFmPt34
TK/mD51fWD/mn5tdf66TxYXunZ35keV71o75luV1eZ+Vd1t8l8f3bnwPdgzv
0vhu7TjeqZU9XezptDO5fBcXOu0pN/KCtT4X1/OnvNbni4Gl1wuTvj+f1nVN
fdnRl6N9aJsf50nkuKlP8tk7wPST8WS8pifqt/KWDd5Rks/6jT6o7/CzPsj1
Nb2wv7l6I3K+7NfsmUg7MHvienBdrB/Wc96mH86D8+H87Z1qZwdsTz6zB87f
1tHsjUj/o1/Gf+nP8fOgrRvlMD4Yhq/i+flBUw77pZz0b3HF4g71Hn1x3fgO
m37BdaA/U//Um2H0QP8wmu1ST5rjCs6NC2Z3tg/ZvtXtZxZ3LY7ZOlh/5sf0
d9v3ifb+vdOLvatnvb0r5+8FmLfwvbvFsW5/oH7pX2aP9DPb37r93OJ1ly90
cYB+Y/GQ5Zwv52dxrvLR81M++tkoZ33o8AVZz/jJ+Mu4yrhAPhsvyyvvvuD9
Wpy2PId2Y/kaaRt/xhfMPCrvP+d6JD/5uH71/XBuOi/8dPLLs4Mu/zy7vjzj
CIYv9cHIJ6ZdaLMnyrP5c16kWU59Wj3l056i78jh+Nl/h/QH2of5Bf3Dvm/I
b/GC+63JDU17Zf5DPrMPrgcxdmjtUh+MXRJrH/l4YO0ja7D2xTOD7vhrv/to
itsfDprY8VNusPaNDeSSj+MjX+0fpwem/8hne44vfBxP+IIV/05N8e6DyV5O
TvZ0amD4WF52c3K0I6Y+8oOdnNBd/9ZP6LLj9ya7fn+y9zW0YeSGfy6mffpN
eWiOx/SRdbP1ol2EZj3Xl/ohko/8XF/azdz1z7g4XrN3Iuvpb/SP0JWffjKw
8tczAxNPGEcYZxh/wkd57M/iU+ZBPQRTH32ZPsxerJ7t01/skOtl7S3eMj6x
H+Jc+2RcMDsyuWaH9MMg7dLsL7TpwfYp7nvMp7gPW16WvMfyy5Tbd0Dqu7yD
+TbPT5hHW/5j57b2HWbnKPxdu32/5j0Fz+VJG193fk+a5/b2HZl6Oyf4H4j9
MjM=
    "], {{0., 300., 0.1}}, 1, {"Discrete", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 0}, 
     ValueDimensions -> 1}}, False, 12.2],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.822348263234091*^9, 3.82234829511982*^9}},
 CellLabel->
  "Out[421]=",ExpressionUUID->"5f159645-9aa9-4ae7-9a66-8ff71589ab1d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"timeLine", " ", "=", 
   RowBox[{"N", "@", 
    RowBox[{"Subdivide", "[", 
     RowBox[{"0", ",", "300", ",", "3000"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.822304848728631*^9, 3.822304878465089*^9}, {
  3.8223458688318663`*^9, 3.822345869914487*^9}},
 CellLabel->
  "In[275]:=",ExpressionUUID->"e35a10fe-1a1b-4c2d-8da0-d179bb4b04a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dt", "=", 
  RowBox[{"First", "@", 
   RowBox[{"Differences", "@", "timeLine"}]}]}]], "Input",
 CellChangeTimes->{{3.822303612928761*^9, 3.822303659963228*^9}, {
  3.822342826253483*^9, 3.822342843135714*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"6fa8b43f-e4e9-4396-8554-34a9ca5e3977"],

Cell[BoxData["0.0033333333333333335`"], "Output",
 CellChangeTimes->{{3.822342828657522*^9, 3.8223428436432533`*^9}},
 CellLabel->
  "Out[246]=",ExpressionUUID->"8d2bf870-35e4-48b1-b012-ea86ff91afc9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"midPrice", "=", 
   RowBox[{"Last", "@", 
    RowBox[{"Transpose", "[", 
     RowBox[{"First", "@", 
      RowBox[{"Normal", "[", "data", "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.822346459940276*^9, 3.822346515884568*^9}},
 CellLabel->
  "In[425]:=",ExpressionUUID->"c4783f27-bcaa-460a-b1b8-3db95670a7d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"midPrice", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.822346690043714*^9, 3.822346693655217*^9}},
 CellLabel->
  "In[385]:=",ExpressionUUID->"d802d905-e83b-4b42-b31c-2e38d5e9399e"],

Cell[BoxData["100.`"], "Output",
 CellChangeTimes->{{3.822346690927408*^9, 3.822346694016761*^9}, 
   3.822347911388987*^9},
 CellLabel->
  "Out[385]=",ExpressionUUID->"6c5f1fc5-f460-450e-b26d-0af3f3256ea9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"data", " ", "=", " ", 
     RowBox[{"RandomFunction", "[", 
      RowBox[{"\[ScriptCapitalP]", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "T", ",", ".1"}], "}"}], ",", "1"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"midPrice", "=", 
     RowBox[{"Last", "@", 
      RowBox[{"Transpose", "[", 
       RowBox[{"First", "@", 
        RowBox[{"Normal", "[", "data", "]"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"inv", ",", "cash"}], "}"}], "=", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "inventory", ",", "\[IndentingNewLine]", "money", ",", 
         "\[IndentingNewLine]", "curInv", ",", "\[IndentingNewLine]", 
         "curTime", ",", "\[IndentingNewLine]", "depth", ",", 
         "\[IndentingNewLine]", "isFilled", ",", "\[IndentingNewLine]", 
         "isMO"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"inventory", "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", "3002"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"money", "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", "3002"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"curInv", "=", 
            RowBox[{"inventory", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"curTime", "=", 
            RowBox[{"timeLine", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"inventory", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", " ", "10"}], ",", 
               RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"depth", "=", 
            RowBox[{
             RowBox[{"loDepth", "[", 
              RowBox[{"[", 
               RowBox[{"curInv", "+", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"isFilled", "=", 
            RowBox[{
             RowBox[{"RandomReal", "[", "1", "]"}], "<", 
             RowBox[{"\[Lambda]", "*", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Kappa]"}], "*", "depth"}]], "*", "dt"}]}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"isMO", "=", 
            RowBox[{
             RowBox[{"Ceiling", "[", 
              RowBox[{"moSignals", "[", 
               RowBox[{"[", 
                RowBox[{"curInv", "+", "1"}], "]"}], "]"}], "]"}], "\[Equal]",
              " ", 
             RowBox[{"Ceiling", "[", "curTime", "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"isFilled", "||", "isMO"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"inventory", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+=", "1"}], ";", 
              RowBox[{
               RowBox[{"money", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+=", 
               RowBox[{"midPrice", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"isFilled", ",", 
             RowBox[{
              RowBox[{"money", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "+=", "depth"}]}], " ", "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"isMO", ",", 
             RowBox[{
              RowBox[{"money", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "-=", "\[CapitalUpsilon]"}]}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"inventory", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
            RowBox[{"inventory", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"money", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
            RowBox[{"money", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"inventory", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", " ", "10"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"inventory", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ";;", 
                  RowBox[{"-", "1"}]}], "]"}], "]"}], "=", "10"}], ";", 
              RowBox[{
               RowBox[{"money", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ";;", 
                  RowBox[{"-", "1"}]}], "]"}], "]"}], "=", 
               RowBox[{"money", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ";", 
              RowBox[{"Break", "[", "]"}]}]}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "3001"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"timeLine", ",", 
             RowBox[{"inventory", "[", 
              RowBox[{"[", 
               RowBox[{";;", 
                RowBox[{"-", "2"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"money", "[", 
           RowBox[{"[", 
            RowBox[{";;", 
             RowBox[{"-", "2"}]}], "]"}], "]"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"moSignals", ",", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"Length", "[", "moSignals", "]"}], "-", "1"}]}], "]"}]}],
          "}"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Trigger Boundary\>\"", "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"IS", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "300"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Dashed"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<AC Targets\>\"", "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{"inv", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Algo\>\"", "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time(Sec.)\>\"", ",", "\"\<Inventory\>\""}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.822305379064805*^9, 3.8223054214741096`*^9}, {
  3.8223443928924513`*^9, 3.822344402694456*^9}, {3.8223452046615553`*^9, 
  3.822345213395464*^9}, {3.8223453360370197`*^9, 3.822345482901816*^9}, {
  3.822345589133534*^9, 3.8223456165697937`*^9}, {3.8223457634119453`*^9, 
  3.822345844053746*^9}, {3.822345887236668*^9, 3.822345925248736*^9}, {
  3.8223459599307327`*^9, 3.822345991208332*^9}, {3.822346203022694*^9, 
  3.822346204078802*^9}, {3.822346372603245*^9, 3.822346437715291*^9}, {
  3.822346522444817*^9, 3.822346620136712*^9}, {3.822346676896668*^9, 
  3.822346742054536*^9}, {3.822346776262413*^9, 3.8223467810463867`*^9}, {
  3.822346814242195*^9, 3.8223468775213413`*^9}, {3.822348316547125*^9, 
  3.822348330623102*^9}},
 CellLabel->
  "In[456]:=",ExpressionUUID->"734aa5b5-b965-41e1-bba6-41d111771cc6"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[{{4.1, 0.}, {10.1, 1.}, {16.9, 2.}, {24.8, 3.}, {34.3, 
          4.}, {46.2, 5.}, {62.2, 6.}, {86.4, 7.}, {137.1, 8.}, {299.9, 
          9.}}]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwVzn0w1AkAxnFraoqTOmnVdTb2d02SlIpWtPsooZKXsAmb18R6/9VoFLpJ
lGSJvZyIkpc03s5yXGrtNb3RkVxs8v5SQt5WWYzs/e6PZ77z+e/R9Qk7flpZ
SUnpGLX/K+Iufhsv7WArKXmZGidVsRNfnJI6Cmo4kncZsr5/0zipHy5fZAhe
cvrKfxMdfpPHEQ4Jm5YJpBz8YafMe1HJuTVyZ1aePMyxkdmvFlU95WgFM5Om
k+WcPeuzcytutnJOlPq5TCSvAD07x7bWdoAjb4p/9CVZC0Yiw5hnL6Y5Is23
qxKS9GASMtQUHUhD+LY9LU/MdiFBrcBoL7kSdGu5sGEtCzp7b8csS1fHzBMt
fh6fDfOesTu9+zQQ78lYn6F/AKOFyj0tDzRRkuwZd9DzENyu1/vULtKxMcoj
eO6KDQ506xtMK9ajqLizKeHcUdhGTuecLf4JzVcTay7et0NjyaxMYvEzrrd1
qW1udoBsacZakqaNluet0WsOHkdXg8l0aC0DQ2p9O8ulTqjZxBUXt27C1UjD
e/scXfDjte/5HTwdyE2ELlGjXAjo9v2CJh380C61MY92xTGNtEoDQ12UZXjM
jclOQt8scfVijC4YFXNjdonuqM60mbjTqAvtsbasnGU8rFWKmOpXYWI0ujHl
Xu4peOwu6Ii2YqI00s5buMELPllx/oMXmNiO967NbV7oZh74tK2QibXVIbL+
e964xqLNit4wYVFHjAZ5+SD1aJDK0jQTf1fY0FgbfdG/deLYwGoCRY5Rj7o/
+mK/kb9HjgGBtrjGt/N5flDO7njlYUmA770laTLsNJ6aBkf94k7A0XDGd4up
Pwab9NJ6QglcutF7u+2rP7ifPOlGlwho3pKe5UnOICV2/NmQgMDUzqmH7rEB
+LrB4dJQFgFG3XlaNisQvIXv7INFBERTqgvVyny8DNIzZ1cSSKkRO1jV81HG
pTnx6gi0bo09XJEUBIszJfnbnxHw2H7qbuqRYAQ30nvjXxNg6ZTSRctDQBfl
WSjeErgoXrGjvCUETmocrv17AssnLhfoCkIxmrnEz+0mMPtKRRziHobjGgLf
9gEC2Q2KhRiNcFj36RnEDBPwlqta/RoeDj+H0LqoMQIdCxt9wtrDcYGf/PDC
JIFvVvtLM40j0LPGWH9eRuCRKn3lx7QIuB99QrBmCezK/7pbey4C487y2Ix5
AnYJg4JULgkHebNOwSIB6yMCWxNXEgahlbmVlKFuqtp1koRk5qG2hLLRLUH8
Fh6Js/qj9E7KmoWm0WJfEgO7VRVrvhPofJ4S+CWcRJS3VnE05YDl5pY2SSTe
JaTGOi1R/xs+0SZukFDiuQx7UXZLvlmfLiBR2F5oH0rZdt3wvt6bJKRZS4xE
yjs2pxlF/k7CrW6kVkx51vIzI7+AxKDvVNdWBYHJleldh4tIWLuysZfy53/2
3558QGLzZef7lpQ7nNPXmZWQUJz4HOBJ+bEfW621koSmMV0mpFytN9JwvopE
3tIq5zzKZV/Sr2r/SeJN/Vh1OeW750aUA/8i4acSENVIOZMllKjXkRinqXdK
KactsmOrHpNwbX1g/pHydcmImZuYRNku8xwZ5bgrwnlFPYmpD68VCsr/AcZW
SaY=
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$1429823#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxd1nFo4/d98HF118dP7omfzq0zL2q8zKkzPfXqp3OixKkSJ1HnRIsTJY8T
JU6UOIkzJ0qcKIkTlaOmR1G5YnpUlCsuR/X0KC5XRI+ackXjqOlRNG6YHdPG
DY9jYsfwuCF2zAwXlaOmRxnNL5cf39fvny9v9Pu9fl8+fPmh2/7y3ade+71E
IrF5YyLxu9Xr/9d/d20+GPb5jzr9wbXN750HQ2WH+y9/1KUPri7PX/mo/779
u2sXb4/7f4nf4/lf8b6reL/G28f7Dd41vN/iJbLh/XFH/sc+6uj53/uoo/cd
+Kij6+N4cUfe/8Drw/ufeDfgxR15B/H+F96NeP14cUfe/8b7BN7v4w1w//Xe
ezDy446e/+RHHb0v7mj91EcdeZ/C+xTeIN4g3k14N+HdhPcHeH+AN4Q3hDeE
94d4f4h3M97NeDfjJfGSeJ/G+zTep/FuwbsFbxhvGG8Y74/w/gjvVrxb8W7F
+2O8P8Yb4f64I3+E5+OO3jeCdxvebXi34d2GdxveZ/A+g/cZvLgjL+5oHcUb
xRvFG8Ubxbsd73onspEXd+TFHXlxR8uffNSRF3fkxR15cUde3NGSwos78uKO
vLgjL+5o+T94cUde3JEXd+TFHS2fxYs78uKOvLgjL+5oGcOLO/Lijry4Iy/u
aPlTvLgjL+7Iizvy4o6Wz+HFHXlxR17ckRd3tIzjxR15cUde3JEXd7T8X7y4
Iy/uyIs78uKOls/jxR15cUde3JEXd7T8GV7ckRd35MUdeXFHy0R4f/J63/Ch
H/cHz+fjjt4X9wdLNe7o/XhNvDZeFy9xR+gl7wi99B2hl78j9Ep3hF4Vr47X
xGvjdfESd7K/O0MvfWfo5e8MvdKdoVfFq+M18dp4XbxEmv2lQy+dDr18OvRK
6dCr4tXxmnhtvC5e4i72d1fope8KvfxdoVe6K/SqeHW8Jl4br4uXuJv93R16
6btDL3936JXuDr0qXh2vidfG6+IlJtnfZOilJ0MvPxl6pcnQq+LV8Zp4bbwu
XuIe9ndP6KXvCb38PaFXuif0qnh1vCZeG6+Ll/gC+7veAx/uL+5of3FH+4s7
2l/c0f7wmnhtvC5eIhN6yUzopTOhl8+EXikTelW8Ol4Tr43XxUvcy/7uDb30
vaGXvzf0SveGXhWvjtfEa+N18RL3sb/7Qi99X+jl7wu90n2hV8Wr4zXx2nhd
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
          "]]}}}, {{}, {}}}}, {
    PlotRange -> All, AxesLabel -> {
       FormBox["\"Time(Sec.)\"", TraditionalForm], 
       FormBox["\"Inventory\"", TraditionalForm]}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 299.9}, {0, 9.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Trigger Boundary\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"AC Targets\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Algo\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.822346204953306*^9, {3.822346620884344*^9, 3.8223466254900312`*^9}, 
   3.822346681663707*^9, {3.822346718985012*^9, 3.822346743123703*^9}, 
   3.822346782598056*^9, 3.822346840338016*^9, 3.822346878607689*^9, 
   3.8223473314098988`*^9, 3.822347769753989*^9, 3.822347913791975*^9, 
   3.82234812798695*^9, {3.822348270365692*^9, 3.822348346515665*^9}},
 CellLabel->
  "Out[459]=",ExpressionUUID->"14c08a6c-2d08-4673-bc48-a8dd02109d65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"timeLine", ",", 
          RowBox[{"cash", "/", 
           RowBox[{"Last", "@", 
            RowBox[{"Transpose", "@", "inv"}]}]}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"_", ",", "Indeterminate"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Price Per Share\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TWAP", "[", "data", "]"}], "+", "\[CapitalUpsilon]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<TWAP\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Min", "[", 
       RowBox[{"TWAP", "[", "data", "]"}], "]"}]}], "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.822346914654264*^9, 3.8223470171522837`*^9}, {
  3.822347222580565*^9, 3.822347253847176*^9}, {3.822347343571059*^9, 
  3.8223473614746923`*^9}, {3.822347419751295*^9, 3.822347478419384*^9}, {
  3.8223475610822678`*^9, 3.822347563359441*^9}, {3.8223479968725863`*^9, 
  3.8223480243706903`*^9}},
 CellLabel->
  "In[461]:=",ExpressionUUID->"08e38cf2-893c-485c-a8ba-acfd3c2f2fe0"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 461, 347, 17872158765385051074, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.822346920514823*^9, 3.822346986250133*^9}, 
   3.822347017523406*^9, 3.822347224197259*^9, 3.82234725431665*^9, {
   3.822347323486167*^9, 3.822347361802511*^9}, {3.822347431175061*^9, 
   3.8223474451759872`*^9}, 3.822347478909223*^9, 3.8223475639775867`*^9, 
   3.822347772208229*^9, 3.822347874344014*^9, 3.822347915943008*^9, 
   3.8223480247157927`*^9, 3.822348130570915*^9, 3.822348357835371*^9},
 CellLabel->
  "During evaluation of \
In[461]:=",ExpressionUUID->"1cd83aa8-f92f-48c0-ba9d-e03cd8adedef"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 461, 348, 17872158765385051074, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.822346920514823*^9, 3.822346986250133*^9}, 
   3.822347017523406*^9, 3.822347224197259*^9, 3.82234725431665*^9, {
   3.822347323486167*^9, 3.822347361802511*^9}, {3.822347431175061*^9, 
   3.8223474451759872`*^9}, 3.822347478909223*^9, 3.8223475639775867`*^9, 
   3.822347772208229*^9, 3.822347874344014*^9, 3.822347915943008*^9, 
   3.8223480247157927`*^9, 3.822348130570915*^9, 3.822348357897058*^9},
 CellLabel->
  "During evaluation of \
In[461]:=",ExpressionUUID->"1d393634-8ef1-4311-8290-e1d08c537c71"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 461, 349, 17872158765385051074, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.822346920514823*^9, 3.822346986250133*^9}, 
   3.822347017523406*^9, 3.822347224197259*^9, 3.82234725431665*^9, {
   3.822347323486167*^9, 3.822347361802511*^9}, {3.822347431175061*^9, 
   3.8223474451759872`*^9}, 3.822347478909223*^9, 3.8223475639775867`*^9, 
   3.822347772208229*^9, 3.822347874344014*^9, 3.822347915943008*^9, 
   3.8223480247157927`*^9, 3.822348130570915*^9, 3.82234835795082*^9},
 CellLabel->
  "During evaluation of \
In[461]:=",ExpressionUUID->"63a34e82-bc1f-4758-bda1-2bfb3b213fb3"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 461, 350, 17872158765385051074, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.822346920514823*^9, 3.822346986250133*^9}, 
   3.822347017523406*^9, 3.822347224197259*^9, 3.82234725431665*^9, {
   3.822347323486167*^9, 3.822347361802511*^9}, {3.822347431175061*^9, 
   3.8223474451759872`*^9}, 3.822347478909223*^9, 3.8223475639775867`*^9, 
   3.822347772208229*^9, 3.822347874344014*^9, 3.822347915943008*^9, 
   3.8223480247157927`*^9, 3.822348130570915*^9, 3.8223483580083323`*^9},
 CellLabel->
  "During evaluation of \
In[461]:=",ExpressionUUID->"ec4a010a-5d49-49ca-9425-107db604e8de"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 461, 351, 
   17872158765385051074, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.822346920514823*^9, 3.822346986250133*^9}, 
   3.822347017523406*^9, 3.822347224197259*^9, 3.82234725431665*^9, {
   3.822347323486167*^9, 3.822347361802511*^9}, {3.822347431175061*^9, 
   3.8223474451759872`*^9}, 3.822347478909223*^9, 3.8223475639775867`*^9, 
   3.822347772208229*^9, 3.822347874344014*^9, 3.822347915943008*^9, 
   3.8223480247157927`*^9, 3.822348130570915*^9, 3.822348358062027*^9},
 CellLabel->
  "During evaluation of \
In[461]:=",ExpressionUUID->"1aec331d-de90-48c9-9e54-a5ebee2782c1"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 461, 352, 
   17872158765385051074, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.822346920514823*^9, 3.822346986250133*^9}, 
   3.822347017523406*^9, 3.822347224197259*^9, 3.82234725431665*^9, {
   3.822347323486167*^9, 3.822347361802511*^9}, {3.822347431175061*^9, 
   3.8223474451759872`*^9}, 3.822347478909223*^9, 3.8223475639775867`*^9, 
   3.822347772208229*^9, 3.822347874344014*^9, 3.822347915943008*^9, 
   3.8223480247157927`*^9, 3.822348130570915*^9, 3.822348358118026*^9},
 CellLabel->
  "During evaluation of \
In[461]:=",ExpressionUUID->"b3f8d880-f3b0-466c-94dc-81e5435aa06d"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 461, 353, 
   17872158765385051074, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.822346920514823*^9, 3.822346986250133*^9}, 
   3.822347017523406*^9, 3.822347224197259*^9, 3.82234725431665*^9, {
   3.822347323486167*^9, 3.822347361802511*^9}, {3.822347431175061*^9, 
   3.8223474451759872`*^9}, 3.822347478909223*^9, 3.8223475639775867`*^9, 
   3.822347772208229*^9, 3.822347874344014*^9, 3.822347915943008*^9, 
   3.8223480247157927`*^9, 3.822348130570915*^9, 3.822348358172871*^9},
 CellLabel->
  "During evaluation of \
In[461]:=",ExpressionUUID->"a5aca0b5-c3aa-407d-90cb-9839ddf8a839"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 461, 354, 17872158765385051074, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.822346920514823*^9, 3.822346986250133*^9}, 
   3.822347017523406*^9, 3.822347224197259*^9, 3.82234725431665*^9, {
   3.822347323486167*^9, 3.822347361802511*^9}, {3.822347431175061*^9, 
   3.8223474451759872`*^9}, 3.822347478909223*^9, 3.8223475639775867`*^9, 
   3.822347772208229*^9, 3.822347874344014*^9, 3.822347915943008*^9, 
   3.8223480247157927`*^9, 3.822348130570915*^9, 3.822348358230179*^9},
 CellLabel->
  "During evaluation of \
In[461]:=",ExpressionUUID->"78e326a8-a3d2-4c66-a5f0-0ac46f8d50b9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Nffm/w9x48Rm
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 180], 0.005555555555555556]], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxU3Xdczf/7P/DICCGyMiNSlJKUBj3ae572PPuEzDIykpWVGZGZIiszIntT
GRGSGRGlUqJk/o7P53Nd39uvf9633nXuXec6j65eznk+n2egeIqfrKWKikpe
BxWVf/+lj2lj25dkqoRga9q/jzwblzdzuh35G/y/z/Ntogyab2xQfm466t9H
sU2175n+S/nrpTZx0etr5ik//69WZrP26je9cP7+cpuwV72uOCg/V8j/fVTY
JH1SAnz7Spu6WuXHn2DcvfPvo9pGe6nyG/6QV8ef//f7620G/O/z//oN/PX/
3v6rTWvN3zuy/9DPa7Rx+t1ndzJ7321slHd3KnvNNj5eyg/2ftqIO+QKO7D3
y+Z1130J93+T98dmx7+b/SZPBfjn/abvV0G64eNSv9/kt8ApwXmFPt++JWT5
Rqm/ftHPU0XqsqWhxb/IawV5x8zfWb/Ia4VfaWuezvpFXmscfr+6i8cv8tog
W19sZ8peW0w6H5fSiz01vKq6dPjPT/LUsEH5+Lz4SV47eMWcu577k7z2iNT7
dmXNT/I6IG/S89xJP8lTR7+PJxd6saeOyhn31hiw1xGJM/xk6ux1wvHKrUcq
f5DXGUHle7dd/0GeBhK6Hwza/YO+XwNNJzZdWfCDfA0UTJ9wLkr5+X9uPqoL
0ru+07f9QT+vCwZoWm8Zyl5XbNE00OnMXld0VtSb/mwmryu03BOOv2umejTR
NdRV634zeZp4u73L3gvN5HVD78QKj5xm8rrBO37Ewmz2umG37Mex7ex1h9bo
X5NWstcdid6F1xey1wPu9vfmz2SvB37XT3ohY68Hgt+q7g5mrydajN/t5sRe
T3zLzX48kr1eWNEnRr0/e70waImGnRp7vdC03i/8+3fytBCh/AX9+J08LTjn
Nvx+9J283sgo6HDw/HfyeqObpbrG3u/k9caFz4MCV7DXB3nTe7aPYU/5eX/l
LyR7fVFgusbSjL2+ePy+sa0We33h2V8v41cTef1wojDdvLyJvH7Y2PD0wJ0m
8vrj7dCWJ3ObyOuPVx8DTuxrIq8/NraoMNjG3gDc37j9+xr2BmDt5sldF7On
jZVGLvPjmyhf2nB9O3PwZPa10b3+R3sZ314b6//NN/552rhhOn2egL2BOB63
QdWdvYGI2rfmvB17A7E+WTN/DHsDseVa3wpj9gYi11J3tjF7g/Ds1jGbEewN
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
aEOnV8+4f1640mVz5Avunxcu2N/xf8n984Is81brV9w/L0y99Xoa5znHC9Lc
CWmvuH9emHvr0eVX3D8v7NDp//EV988LrSYMEbzm/nlB3BDsWMb988KGPbOO
lnH/vDHY5+TjMu6fN/QWPfhZxv3zhmfMjP1vuH/emOXi3+Ut988bx6xexr/l
/nkj7KjG27fcP28sMsq7X87984Z5za7z77h/3uj0+Mb+99w/b3yznXaH50Gi
N5Zf+Pv5PffPG02PNB+85/55w9D4z5T33D9v9G+qWPmO++cNxxnLs8q5f97Y
VPjmKtd3xxt16zMkPF9KvaG/eZLTW+6fN6STLGv5/jZ4I6B877Z33D8fGEn1
V1TQ97fxwa7x8V8+cD990Dn73bZKur2mD/5zOcj99cHpuosHqsnT9sFrVT/v
Wu63D1qOmGjK89XAB8ub3Erquf8+sPUsm91AnoUPLmzd+/QrPx4+GJA/J/cb
eU4+WBjgKWjkx8cH7av3fOb5LvBBcUWfwkZ+vHxQP+1MRSN5Qh/oxnhfbeTH
zwcWN1vuZC9GeX+jHsazF+uDy5uPdGsiL94HkS+XTmnix9cHD5pXtvtOXpIP
5u+Oe/udH28fdE+JndtMXooPDqz6pfmDH38f9Nn0O+YHeek+0DY5e4P/fmX5
IPlGt4if5GX7QDXoZ8NPzocPFkdp5/8iL88Hq5MydvzmvPhgfdKiaX/Iu+mD
/ITqW384Pz7oMezq6z/kFfvA4+zSpj+cJ+XPczDv/Je8MuXj/fyJ7l/Ol7I/
m6Tj/pJX7YOIpLKAv5w3Hxy+4jbpL3nNys/DMpewp+ILvftH/VXo738bX0zo
lF6hwtczvjjT7PNbha4HNH1h8WhMu5Z8feOLTlODu6nS9YG2Lx7MTH6jytc7
vhjiHJHRmjwDX7Q7+OVDG77+8YXx8Jnj1ciz8IVBj7267fl6SPm5ccneDuQ5
+aLEwfeDOl8f+WJ3p38v+FP+lF5J9iYNvl7yRdbY4BtdyRP6/mf9TTe+fvLF
xD6BE3uQF+OLDVnO/Xvx9ZQvqs/87NCbvHhfZD8badqXr698cWL/o9D+5CX5
wvrF+wV8/ZbsiydvNF4PIi/FF4EeoTcG8/WXL7x9bAYOJS9d2a8/Nl/0+XrM
FzeKV/zi68tsX1Q8Sm9lzNdnvhjaplOICXl5vng6tqzClK/XfHEwqOSjOXk3
faEfXzzdkq/ffJEbrn/ZmrxiX3RX3+xkw9fDvih6PLrQlrwyX9jEGV9z4Otj
X3h9SE5wJq9a2a89jeZufL3sC8+NN/Q9yWv2RZ1l3gRvvn72g9hA86Av588P
sX0ffxBw/vzQ9Fk1MpDz54eQeX5OIZw/P8R9fnUmjPPnh+nHPn2O4Pz5YdTG
3lFCzp8f2kqM20g4f34QYvwhGefPDwjy6x7N+fPD3syV8ydw/vzQ7HPrYAzn
zw9FXz67TOH8+eFUyc/p0zh/fvjpJ9WP5fz5Ib542yv+95RceX8Sz4bM5Pz5
oSBxn/pszp8fOhkqLvK/x+L98PzCj8lzOX9+sJ0g6T+f8+eHnfP7bEzg/PnB
P29W1ALOnx+2/FyWt4Dz5we93Q2LEzl/yp/Xdlv3hZw/5c/b/CprIefPDxfK
D/1dyPlT9meudfAizp8fzuxYd2wR588P95ftV1vM+fODbNYS4WLOnx+O5Kwa
uoTz54cvKp4RSzl/fuj6Jz8/ifPnh68ahTHLOX/K+yMv27WC8+eHFTfmtlvF
+fPD2JbyA8mcPz8kWkUvWMP5E+BLqfuqdZw/ARpn3N+0gfMnwItpX3du5PwJ
cKnp8ZRUzp8A90MTbfjf59oCbPIaVZLG+ROgOHjpnm2cP8F/lqvzv+9HCTBu
aOvWuzh/AiRsDNmSzvkTwNJ/8rLdnD8B1tevtcng/AmQbDjHMJPzJ4DjwSaf
PZw/AZqebhq7l/MnQPykwhb7OH8CvGpTcn0/508Az8K8pIOcPwGO9qrde4jz
J8Dk0/VGhzl/AgTvCht8lPMnQIdt2p7HOX8CmPl0PJjD+RMgNGjy1FzOn/L+
r9UpOMP5EyCy2GfQOc6fAOYZTbMvcP4ECJitde8S50+AoKLTA69y/pT1x6u+
us75E+C0/7q7tzh/AkQFmp8r4PwJkO//I+su50+AJYFHbhRx/gQ48S3qLT8/
VCZAxqAuv59w/gToX3it+zPOnwC37NuJXnL+BKiPMDlYxvkTIEzbtr6c8+eP
SSkbJ3zg/Pkj4I2L2yfOnz/CrF0bajl//nB9N+DeF86fP0reLcpq5Pz5Y+dg
z+xmzp8/hhUNefeL8+cP3WlftVT4+UPl501nPVXp+TwLf/h6z13Qhp9P9FfO
2+AyNXp+z8kf1sMjYjvw84v+UD00/EFH8gT++KneSqTBzzf6o3OlYaAmeUJ/
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
V5AXq3x8lyavmUDeTBnOnx1iO4m8eBk21Kx8NoW8eTLMPCq1m05eogy1FssO
xJG3WIbcV186zyIvSQaty39Xx5O3QgbvoEydeeQly5CTvOhMAnnrZNh7eofH
QvJSZBjaXmvzYvJSlbe/l357Kb8/gwwjD7UZtpy87TKsNjyzciV56TIo9p6q
SiYvU4YTDbdGriUvS/n7ofMjaj15B2R4ln96bwp52cr8ddzxcBN5x2QYWH2y
YjN5Ocp6G4x+pJGXq8z/+E4dt5OXJ8OLFtmKneSdl+HWWgNROnmXlf2O6xWa
Qd41GRy+TPHbQ95NZT5dR7llkZcvQ9x5se1+8u7I8Kegrc9B8opkkEzoGplN
XrGyXwcTBUfIeyJDu3OhwmPklSp/H5p3+Z8g74UMHsZhxifJK1N+feDmhlPk
lSvztNy44jS/34Uy/3OG1OWRV6nMS+dFzefIq5bh3kqnlhfJq5Ohsmvh1Uvk
NSj7N6OT4Ap5jTIcTmpReJW8Zhnu6y+zu87zT4ZFlwt23+D5J8eb1fG9bvH8
kyM/fEXWbZ5/cnT889m9gOefHGneL+oKef7JcVFl1fy7PP/kMFju9Owezz85
NC/otC3i+SdH5Y66Pg94/skxcMfpXg95/skxbOji3w95/skxPiOioJjnnxzf
q3+lPuL5J8dCbZHkMc8/Obz3F0c+4fknh9/HndNKeP7J0bXX/JinPP/kuPS3
q6KU558cqTn5rs94/slx6u5D++c8/+QYNG5wwAuef3Ls+ZEz/yXPP6W/qHbv
K55/cnx2l3cr4/mnrD9qzvE3PP/kWL5ti1k5zz85HN2cz/H7kwnkCP/ZUa+C
558ctZcDr33g+SfHmgf6kZU8/+QwsTuYX8XzT47pt6+aVvP8U96fSc9za3j+
yZH8cOmYzzz/5BiiezWvjuefHKVTa32/8PyTwzU6rNdXnn9yWFQ4vfrG80+O
hoHHM5t4/snx91XVgmaef0pPVDX9J88/ObqUfU75zfNPjmnf4rqo0Pu3JcmR
d6LFrJb0fm8rlHnzLHve6gfNPznKbngGtf1B80/Zr8WobEfvN5cix6aN6h7q
5KXKMWBJ5I1O/P5xcvS9ahDQhbztcuibd7+rSV66HIdaDzLsQV6m8vfj4v7M
XuRlybFVMV+rD3kH5Kg+8up8P/Ky5XgatWOmNnnH5DAO3mykQ16OHD0/3fkw
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
c/Lz4mX0UuXzanK/hOX0Dst53Ob04DB6R+X+3mDxK4zeMREe7TRxK+idELHe
7FXblfROyt//wzt9Jb00EduiL3QLp5cuomml3ZlwemdEnNIkOq2id06uxzff
davoZcj5MH/4vVX0LoiYdHDy8NX0Lsnn342x91bTuyxi5aPuwyPoXRXR+OA/
RRH0rsn5/Pq0/xp6mfL5+2XE3TX0bohYZV4wbC29LBH2qdWer6V3S4TVZWtN
JL1sEe5DLH5F0rsjYuSznVvW0csVUfNcudl6enfleq0LVaynlydC8+zXzfX0
7osIOj7deQO9fBFj7Gsu3UDvkQiTq/vubqBXIGL6ZpdWUfSeiBDiD4RE0SsU
URhx5WEUvWciDl9pGhBNr0g+j3EhLpreCxE73x24E02vWESjluuNNtIrkT9f
PLPbRnqvRGyuerJwI7038nwNIgo30isVcWdjWIcYemUikibX3hBD751c3+ll
RTH0PohofSe98yZ6n+R8OPhkziZ6n+XzIOpL+iZ65SI+P4mtvpneVxHV128a
vJlehXxe1226azO9HyJernb+u5lepYgP52OHxdL7JaLJ3C+7Y+lViRiU3rs8
lt4fEWNXLvHeQs9Aws2c8Ze30DOUMLusZa+t9IwkYMGA1K30jCUMWDimURw9
UwknW2XPj6NnLqH68w4FcfQsJGSVmg3YRq+GhCnqEVe30bOUcGBDzSHb6dWS
0Lb5kUfb6VlJsOh6VtxBr46EpUbtbHfSqyuhMOHvpp306knIHXXBKp6ejYT6
TUq2xdNrKOHRnM+tdtGzlTC585Nbu+g1lpDW9dSoBHpNJEwqCXmeQK+ZhO9H
Usbtpmcnwax9Yfpuei0kfLFYY76Hnr2Eg1O8e+yh10rCipErJu2h5yDBw7rD
xj302kp48O+da3voOUq4u3TtY73XTsLY/Uf/6D1nCXG9K00S6XWQkFh7SbdE
eh0lPFdFBybS6yRhiBAfmkjPVcIfy4JVifTcJCxznLtT77lLuLjoUY7e6yZB
OnOnXO95SJhxcILFXno95PX23t9jLz1PCR9rvNXspddLgrORfcJeepD7wfP7
1b30+kioFaos0HteEkZsDi3Se94STPr2LNB7/SX0NEv5oPd8JHTImP5a7/lK
iHy94KreGyTB1s0rWu/5SYhaKPTVe0MkOEQcLNfPd5gEw4teJ/Tz9Zf72+21
pK/fCAmbbv0Lff1Gyl7T17X09QuQYHUp5Y5+fcdIUMfOXa9f37ESNq/aGqhf
3/Fyf90399Cvb6CEgJpH3u6mN1FCm4mxor7/guT+P/nAVN9/k+V+2NVmRwK9
qRJGb8jure/naRJCrl/6vIveDAn7Ig2O76IXLGFVcq1p+v2hkNcvc25ZPD2V
hNcPv0nx9NQSyl//tNHvN63cXxkDsnbSEyR4vXGbtJOeKKFrrsJIv39nSTir
7r92B73ZEkqedK27g16IhI7ndSn6PJgn4XJ4RKft9OZLUEk2+fp8WSihwHOl
Wp8viyTUjSr4qs+rJfJ+bahdq8+rUAlrN76tq8+rZRL+uXc7XZ9/YRJuJ71R
6fNvhYRih7dWW+mFy/5lu2v6PF0t98OOaXP1eRoh9+/VjU220Fsr4f6m3Mv6
fI6U12tDrzn6fF4v9//T8X/0eR8lITh53Sp93kfL61maZ7WZXoyErTs7bNtE
b5OE67OHVOrPo1h5v14TBsbQ2yoh3ikrRX++xUm4UDWiwUZ62+X9El0zJpre
Dvl5W536oj9/4yXsbTzdO4pegoT8aq6x+vN8t4Tj95q90d8PEuX+sezmo78f
7JXQY8rEbevoJUkYk5Vhrr9v7JfzpGdbRSS9FAl9O+eU6+8vByX0uRgqrKWX
KuGNrf8v/X3osIRwRYd5+vvQUQmDxtkURNA7JufdnXrO+vvVCTnfJrqtW03v
pIR0hVilv6+lSUjWZq1aRS9d7sepXequondGwqiItKhweufk8+PH4Frh9DLk
9Qz4mqy/T16Q6zUkeehKepck/PWcUPf/j/8f2O2Gow==
          "]]}}}, {{}, {}}}}, {
    PlotRange -> All, AxesOrigin -> {0, 99.6432372881356}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 99.6862169312169}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 300.}, {99.6862169312169, 99.86666666666667}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Price Per Share\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"TWAP\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.822346915724002*^9, 3.822346986757907*^9}, 
   3.8223470181364727`*^9, 3.822347224796253*^9, 3.822347254918984*^9, {
   3.822347324092474*^9, 3.822347362429846*^9}, {3.822347431773815*^9, 
   3.822347445743362*^9}, 3.822347479523158*^9, 3.822347564659869*^9, 
   3.8223477728816137`*^9, 3.822347874961184*^9, 3.82234791664005*^9, 
   3.822348025433423*^9, 3.822348131445919*^9, 3.82234835852794*^9},
 CellLabel->
  "Out[461]=",ExpressionUUID->"9366cb65-a6b9-4eff-bc26-41de3c42f740"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AC", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"IS", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "timeLine"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.822347582064383*^9, 3.8223475821931963`*^9}, {
  3.822347668569961*^9, 3.822347685670673*^9}},
 CellLabel->
  "In[462]:=",ExpressionUUID->"97020029-4405-463f-93d1-485260157110"],

Cell[BoxData[
 RowBox[{
  RowBox[{"diff", "=", 
   RowBox[{"Differences", "[", "AC", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.822347730835272*^9, 3.822347733471181*^9}},
 CellLabel->
  "In[463]:=",ExpressionUUID->"7b81ada9-97f7-4e78-819a-9926496a5a76"],

Cell[BoxData[
 RowBox[{
  RowBox[{"amt", "=", 
   RowBox[{"PrependTo", "[", 
    RowBox[{"diff", ",", 
     RowBox[{"First", "@", "AC"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.822347687042369*^9, 3.822347736152399*^9}},
 CellLabel->
  "In[464]:=",ExpressionUUID->"5895321e-85d9-4249-957e-44888c9729c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"money2", "=", 
   RowBox[{"FoldList", "[", 
    RowBox[{"Plus", ",", 
     RowBox[{"amt", "*", 
      RowBox[{"(", 
       RowBox[{"midPrice", "-", "\[CapitalUpsilon]"}], ")"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.822347738385639*^9, 3.822347745478921*^9}, {
  3.822347782423979*^9, 3.82234783648207*^9}},
 CellLabel->
  "In[465]:=",ExpressionUUID->"6ceaef57-328a-49e0-9f38-85b641bb0f57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ACtwap", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"timeLine", ",", 
     RowBox[{"money2", "/", "AC"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8223478381007442`*^9, 3.82234786396167*^9}},
 CellLabel->
  "In[466]:=",ExpressionUUID->"5882b561-0c97-457d-ab69-09f8544ebad2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.`", ",", "99.99000000000001`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.1`", ",", "99.96`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.2`", ",", "99.96499500006335`"}], "}"}], ",", 
           TemplateBox[{"2995"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{"299.8`", ",", "99.76554282445218`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"299.9`", ",", "99.76554564490601`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"300.`", ",", "99.76554866359416`"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{115., {4., 15.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{99., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 466, 17872158765385051074, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{110., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 466, 17872158765385051074, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{82., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 466, 17872158765385051074, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{147., {1., 16.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[17872158765385051074 === $SessionID, 
   Out[466], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{{3.822347841074369*^9, 3.822347864428129*^9}, 
   3.822348039473452*^9, 3.822348150156551*^9, 3.8223481901209707`*^9, 
   3.822348370564391*^9},
 CellLabel->
  "Out[466]=",ExpressionUUID->"2047cf26-64ba-48f6-a1b3-3f8e3b6a2f77"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"timeLine", ",", 
          RowBox[{"cash", "/", 
           RowBox[{"Last", "@", 
            RowBox[{"Transpose", "@", "inv"}]}]}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"_", ",", "Indeterminate"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Price Per Share\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"TWAP", "[", "data", "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<TWAP\>\"", "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"ACtwap", ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Gray"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<AC\>\"", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "99.2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.822348046323269*^9, 3.82234810681136*^9}, {
  3.8223481684557943`*^9, 3.8223481687102823`*^9}, {3.822348242225994*^9, 
  3.822348245909034*^9}, {3.822348382746524*^9, 3.822348392227605*^9}, {
  3.822360198837061*^9, 3.822360205109254*^9}},
 CellLabel->
  "In[470]:=",ExpressionUUID->"ca081e06-44ec-4ddb-8acc-5632fe78395e"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 470, 379, 17872158765385051074, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.822348246418118*^9, {3.822348371567503*^9, 3.822348392520438*^9}, 
   3.822360206264576*^9},
 CellLabel->
  "During evaluation of \
In[470]:=",ExpressionUUID->"b0fdd07a-3733-4926-b592-2b5dee69a17d"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 470, 380, 17872158765385051074, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.822348246418118*^9, {3.822348371567503*^9, 3.822348392520438*^9}, 
   3.822360206430551*^9},
 CellLabel->
  "During evaluation of \
In[470]:=",ExpressionUUID->"6ed4612d-5e19-4202-9d29-ce78e98b9ba6"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 470, 381, 17872158765385051074, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.822348246418118*^9, {3.822348371567503*^9, 3.822348392520438*^9}, 
   3.8223602064840097`*^9},
 CellLabel->
  "During evaluation of \
In[470]:=",ExpressionUUID->"db19d237-43a3-4856-a4e7-4b8e031c6c85"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 470, 382, 17872158765385051074, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.822348246418118*^9, {3.822348371567503*^9, 3.822348392520438*^9}, 
   3.822360206539915*^9},
 CellLabel->
  "During evaluation of \
In[470]:=",ExpressionUUID->"7b91cac7-62d3-4db2-bfd3-25f063123133"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 470, 383, 
   17872158765385051074, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.822348246418118*^9, {3.822348371567503*^9, 3.822348392520438*^9}, 
   3.8223602065961123`*^9},
 CellLabel->
  "During evaluation of \
In[470]:=",ExpressionUUID->"38e53abc-dcc6-464b-b051-617bc9933f46"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 470, 384, 
   17872158765385051074, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.822348246418118*^9, {3.822348371567503*^9, 3.822348392520438*^9}, 
   3.822360206658704*^9},
 CellLabel->
  "During evaluation of \
In[470]:=",ExpressionUUID->"daf002db-1faf-4da2-8743-fa57a779bd9f"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 470, 385, 
   17872158765385051074, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.822348246418118*^9, {3.822348371567503*^9, 3.822348392520438*^9}, 
   3.8223602067088842`*^9},
 CellLabel->
  "During evaluation of \
In[470]:=",ExpressionUUID->"c7c5f1b4-53ad-4eab-8b94-e56b0b0b89e5"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 470, 386, 17872158765385051074, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.822348246418118*^9, {3.822348371567503*^9, 3.822348392520438*^9}, 
   3.822360206765848*^9},
 CellLabel->
  "During evaluation of \
In[470]:=",ExpressionUUID->"190e4c53-cf32-44d7-9304-6aecf58d3eb3"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
Nffm/w9x48Rm
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 180], 0.005555555555555556]], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxU3XVYE2D3N3AUxULFQhADCwtpUUL40ildI9cbChYWFlhYmFgoKhaiIgYW
JhhYmCiIiYUBIoKiYL3zeZ5z3uvHP1672D6cnX13wO2+7/UVTwiQNVdTU8tv
p6b279//+yXA5vR/X/n2Zbsmjm77N+x/l6/b1/z7+hMGC/N/XyX2s7rmur38
Q98vt1cftli7XHX5v06Ffe9FVf6n+Pqv7T9mdviYqbqskP/7qrTvprr5TL79
B/ukI2+6e6ku3yr+91Vtf0j17a7s1fLl/17/i33u/y7/16/n7//39l/t1z2s
K2rNP6/B/uGFTjfe/ybvh/3tf1f7TV6j/Qst5+n7f5P30/7LrQNLFb/J+2U/
/mHG3mG/yftjbxi56uK3X+Sp4c5/rkbXV4Nx7Y3mh36R3wzO2kdXL/pFt2+O
r8sHXgj7RT9PHQM9Zy0wZq8Fvt3ZZKDOXgssj1zY7MFP8lrCNnuBdfZP8jRg
Ux06bvVP8lrh19yxZ6f8JK814g8eLw3/SV5r9FU9PqPYa4NnRkc+dWavLT59
VH01kdcO7ib3XlxvIk8TOftVX03kaWLGqMsnlzSR1x4dR7mvVDaR1wHIWV3m
wl5HVO7ZclmfPS20f7Q9+XcjXV8LKVOXf3zSSL4WBCOEb86oLv/n5uadYPyw
PGBrI/28Tsh9aFq4oJG8zhhU2td7HHudsW3Iu6hQ9joju/2Ux2ikerpgR097
x2HsdcGkmFa3ddnrin2OT6d2ZK8rntsM2N+ava4wGVxb/uMHed2Q/f3Lhsof
5HVDx86Fn579IE8bj1tezrr/gzxtpB6TtLz4gzxtvNvdeP0Ye92xetjGhJ3s
dcfCxJ1/VrCnA53nohEz2dPBEVeNcVL2dJAS5L4oiD1dVPuf6u3Cni5KZ3ww
MGWvB0xXNCvRYa8Hdv1qZtWMvR7wPqqT9PY7eXpwH9He/Np38lSXVU/H3O/k
9YTg+wLJ2u/k9YQ0u9pk6nfyeuJpRa+bYez1gsPKDUJ79nqh/4nb9wez1xuT
Pn5/2pm93og/4PVEnb3e6H/5SfD3BvL6IDp0bd+qBvL6oHe41OZFA3n60K0b
nfWwgfKlj0e748bcaCBfH7vzas0L+fb60P833xro5+kj6LtizyH2+gIjlxju
Za8vamIXvt3GXl/o+7apW8deXwxK6dxxBXt94fJbb0cqe/0QuyxLuYy9fkhb
cT5nIXv9sNFFKVjIXj+EfihrtZC9fjidO+fPPPb6w0fv/bF53J/+2F854WwS
e/2x97LN/fns9UfArXNJi9nrj05XT59awd4AWCkN76exNwC/pTdNN7E3AFqv
c2ZlsDcAS7c+WrqVvQGYW/t87Tb2BqK61iV3J3sD8SukWdE+9gbijnvByEPs
DYR6G/2OeewNRM//PT7/9Qxwt3D4xAL2DJB4JXT2FfYMYFXyO/QWewZQt47P
LGHPAK0TMqyesDcIha0cj7xibxDiqk6Mr2JvEG4tstf4yt4guBuF6/xkbxA2
W96NVec8D8aDf79vOf+DkX9p7Fctzvdg7JZMstbm58Ng7D1xZKwe530wXBYd
WaTP3hCcCatbPpC9ISjb82XOUPaGwK5t2S4T9oYgKSGxYSR7Q5B2dvkRB/aG
Ymz9xRRv9oaibPPUgwL2hqKjyzC5jL2huJTaLX8Ce0Px/u2g3BnsDcP8eaov
9obBL/aF+TL2hqGH79XgDewNw7hFSZ+3szcMLe9WddjLniGcmppX5bBniEfW
OoNPsGcIvbm6zhfYM0SW0Un7a+wZwnNY/+gS9obD1KlZ96fsDUd3r7lH3rA3
HLrX7nWuZm84Jn26UvCdveGQRD11Ved5agS9Jy/2dOD5a4Q7Jeuf6/J8NYJg
+fkvA3geG2GQW7cKY563RhjXr9eKUewZY3/5LS2wZ4wpZ3JlLuwZY/lJ932e
7BkjxuHzE1/2jOF2ov53EHsm0Bm/p2M4XV/XBINu+neK+UHzxgTvWmxoIaPb
e5sgcmXRWyX/PBOUKAMLYslLNkGro++2Kfnnm+CS5OYiOXl5JrA2OxfHXrEJ
ri8SusnJqzTBppt/TGVcnyny5/fvJuP6TAHXSy2kXJ8pFAP2dBZxfaa4EGDf
I4brM0WI9dZBUVyfKSrWt4wWcH0qf5d4ezDXZ4pLRwaVBXB9pui03LyZP9dn
CluDGSa+XJ8ZnpfHrvfi+sywLWfDSFeuzwxuU6I3OXF9ZtCeNLcnuD4z2E7t
0dya6zPDJFP17uZcnxncez+zM+T6zNDuEzYP4PrMcPyj8/teXJ8ZrnxcO06b
6zPHwqGFXu25PnN8Gxy5qjnnxxwfF12+9oPy622O2h1rx33ivJtjWIb88Wt6
fiSbY99Bq9Ryzr85RKF6j4vp+ZJnjteCe+4F/Hwwh3/zZ2V55FWa4/HoxLBs
fr5ZQKAV05BBnq4FGjbMerman38W2LY+N38R12eBw6+6eczm+ixQMutZyCSu
zwLP7pcnybk+C6SscFkZyfVZIP/ff1C4PguoX70vduP6LPDV9k69Ldc3AoKz
U+ssuL4R6K9MtzPk+kbgVP85QwZyfSOgfi1gYG+ubwQKy44e6Mb1jcDHyT8X
aHJ9I+B/bt3h5lzfCPzn1xn/vhiB+L6LAz7Q75fKEXD+qt/pKf8+soTp7SyT
2/T7RtcS9//P7ztLtDpj2uUoed6WGBNyU28X/76yxPGoZ2rryUu2xIT3r1su
5t9fljhWPnloInl5lij+2M0gjuuzRPnIA4ujuT5LqPnMfuPD9Y2E1L5BYs/1
jcRkj4mnTbi+kZDE9jPtx/WNxLXcPkbduL6R+Dtmmltrrm8kGmZr3Wz6RvWN
hMa6op4136i+kTh5yPrjq29U30ik2w3XL/tG9Y3EKj/XCTe/UX2joPjqbl5I
nu4oTBi5I+YEeeajYAWpbw553qMw+bpWzi7y5KOwJWzThM3kJY9C0YewjJVc
3ygsd7g1cj7XNwq3osuqp3J9o5BodKJzLNc3CuHz+h6I4PqsUDfwxskxXJ8V
ZpbfqLDn+qzgaNQy2ZTrs8KqU7ob+3F9VljZpndxF67PCqq/NsrUuT4rRM4a
7P7tK9VnBcntTeaVX6k+K8ybmtOv/CvVZwWbBWXvb3yl+qyROWTk0LNfqT5r
PLJYdy2XPHNrND6eob+TPG9r9P339y95cmv88lmYmUJesjVmnV85dgZ56dbY
5XnxaCzXZ40BzbX9Irk+awiev9bw5fqsIVW8LnXg+mxgOfLWBQuuzwYrvoYX
DuL6bODYY7dDD67PBr+8rae05/ps0Mmzr4Ea12cDtdITtXX1VJ8NPras2P2m
nuqzwe5/Da6n+mzw4tOaJdfrqT4b3FJP73O2nuqzheP5m1a55OnaIqDL3Efb
yTO3xWHJ9vy15HnbYmpf5dFF5Mlt0UIZbzyDvGRbmHV7vyOe67PFFDPLQRKu
zxaqv378BFyfLRac+NDTj+uzxanqbKUr1zda9f+vsBG2XN9oCBzdFppyfaOh
Zno+xIDrG429e5rn9uD6RsMxInh5B65vNPZvTH2gxvWNxltt5Yj6OqpP9f0e
ca3e1FF9o2EmGl//oI7qG43cpsj4K3VUnx0qa9utOFFH9dlBM9vocBZ55nZw
dzkq2UCetx2Ciw5nLyJPbofvFz3SppKXbIeOstMdZeSl28FsxfG9QVyfHabd
uXbfieuzw8by5mvNuD47nFjU+ltfrs8eW0NdmjpxffYIvDU+RY3rs0dkysDj
n79QffZoH+z+9/kXqs8ehVHrpLe/UH32mLP16ptzX6g+e9z7rDY95wvVp/p5
fz0GbiGv2B4Dnz6evIy8StXt7UdEzyRPDXi6YqlyHF1fE/B3kLWOJF8XkAwd
ke9JtzcApM5V6lZf6O8b4ELbxWMHkQfg1eWi6m58fwCtJbHLWpAnAMwtjJ3q
a+n+AcIfQRte1f7PSwCafxKo36+l+wscb9t8WWHt/7xUYIR656FHaun+A23t
5e+2k5cFyH9csl1FXh6wd9fmA3PJKwBOxD85EU9eMfCg44snkeSVA87NxvXw
Jq8SuKqeH2tLXj2wtb1XsCF5ag5YdaWZoCd5mg5I+tO8qR15ug7IGTIl7+dn
6p8D5niZtqv6TP1zQNsbVt8ef6b+OeBi1dYWNz5T/xzw7Kza8PzP1D8HKGdq
pWaRJ3eAhp3ryjTyEhwgmLDxbBJ5yQ4YsvJeqzjyUh3++/cveekOmJXgdceV
vCwHqN+OcR9BXp4D4iecedyfvAIHGNou2tyJvGIHLEj/8eFvDfXPAYEhL6/W
1FD/HPD528oHT2uofw7I/+2QcqOG+ucIy4mpsSdrqH+OSFnf7Osu8nQd8TJK
bd4a8gwc0bzScEsSeeaO6L9syu148uCIVI2HfyPJ83bExa7Z7t7kCRwR0uyS
pQ15ckeMVBuVO5S8BEdE/vhwsAd5yY7YqFj/sg15qY64ujbGsPET9c8RES90
Vr7/RP1zRNHLk9MefaL+OWLqSN+p1z5R/xyh9d2u8dQn6p8j0kvz8rLJK3eE
valb1kbyKh0xWGvl/UXk1TvCtb5cewp5ak6wKDXwlZCn6YS+Z8+1CyRP1wkn
Z/Ze50yegRN+ia8bW36i+eMEh6aNzweRByfY+Ldv34M8byfMTI192Y48gROM
2xVp/q2m/jmh5FJLj7rq/3kJTgj8uf9RZTX1zwmWVzynP6mm/qm+H3st/041
9c8JNa69LS+Rl+UERcaw4SfJy3PCBwPT1jnkFTjBe0aM8U7yip0gt3xXvIm8
cicc69un/SryKp3wc+aPi4vIq3dCn69xIXPIU3NGWIpN1FTyNJ2hVWI6Pp48
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
4PcgdfEo7p8PvDUuzrHi/vngq+yckTX3zwd/lz7cbM3980H9DOFFa+6fD9ou
u/HBmvvnA8PKLp1suH8+SDPUm23D/fPBl+M+4225fz7oq4h/ZMv980Ve5/1/
bLl/vjjpfHXAaO6fL54ajbvHzzcDX2i087S24/75wv7P/Z123D9ffJyk0c6e
++eLTnW5P+y5f74oOrT+Lbh/vti68cw9B+6fLxa2UHxz4P75onvyNx1H7p8v
Uja2aXLg/vnibF39Jgfuny8O5j/NA/fPFw9Gzr1jz/3zxYCVZVV23D9fJAVt
SuX5Uu6LUwLJBDvuny/qjU2623P/fPFmz5bL4P754bxBn6OOdH0NPxgZTtBz
5n76Ydv4x5dd6PZd/CCbUR/nxv31g2vesfvu5On7YXyR2wxP7rcf1tQKo3i+
Gvqh+2mo+XD//XC3Y+kOX/Ks/OAdtaWZPz8efshdPvGFP3muftDScZodwI+P
H9JzN+sEkhfoB/G+Tl8D+PHyQ7JFbsdA8oR+OG7kUhXAj58fri35UcRenOr+
9r22k39fJPjBN3z36EDyEv3wafusTewl+0F4NtksiLwUP2hKx7YL5sfbD7uD
Y3cHk5fmh1E+dbYh/Pj7YX9o/foQ8jL9cOjroRr+/ZXlB70lbVNCycvxw1rd
Lz3DOB9+6NxPuy6MvHw/9PTYVCTgvPhB32PG5nDyivwQ5vCqNpzz44c91Sdb
R5BX4ocns2fpR3CeVD9PY/ioCPIqVI/3tmLfCM6Xqj9h4YoI8qr9UO1eOpe9
ej/YLsQG9hpVl3unH2RPzR8n1+yZE8n580fj3fUd+fe7pj/czroaRHH+/HFt
g5FZNOfPH1vNfEbHcP78IbSa31bI+fPHsTaBN0WcP39sinuvxX9fmPvjwqdx
a6WcP3+cebTZV875U12uK76t4Pz5Q97KTSuW8+ePf8sjx3L+VF76zvNxnD9/
jFDzqRnP+fP/z/qbiZw/fzQ981o3mfPnj76xo92mcP78MWvWF4tpnD9/2Gwd
FDWD8+cPh3E3Fszk/Pnj5rYn2fz3W6o/ZLs1Widx/vzxtoNfTTLnzx/PO4/w
XMD5U/WrYIReCufPH0EbkgYu5fz5Y+rGDcNTOX/+OHFNff5Kzp8/FGqlHddw
/vxh1eNWp3WcP3+csrm+ZQPnzx8uffp82MT588fu26kTtnD+/BGzadjXrZw/
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
hGisVCxpWEdeYjSGmOdc2ML7EaMxaPX3RTvJS4lGkHucxz7yUqMx/s+UK4fI
S4vGI9+rdid4/2I0Mo8OSjtLXmY0ZnsdvHiRvKxo3B824dY18nJU/fRfmHeb
9ztGY1b0gI0PyMuPRkqrFp0fk1cQjf4WGctekFcUjcoLjf3e8v7IaFyqaP3k
I3kl0ZCtOLW6lrzyaMw82UutgbyKaFSdM131k/dTRmPAMq0mNdoPWh0N0fe1
CzVof2d9NNZY3tTUpP2fjdG4cvT02k68PzQGdzZv+KpN+0c1YlB5+e/UnuRp
xuCwX0x4P/K6xKDw0OYeg3k/aQzuth3SNJw8/RgYdfn+w5w8gxhYnGtz1Io8
wxg0E1xS2vP+0xgoTv0sdybPKgahUYvHepKHGNj/vPnDlzzXGIQVekqCeT9t
DJLsMpeEkxcYgxsvnhyIIU8Qg6/zBi2TkieMQU/vg/1jef9tDKIjv6XHkxcX
g/EPLhlPJi8hRvX8CtGYTl5iDHYqFvaazft1YyA/GN1pHnkpMajzb3q5iLzU
GJy8FLdqGXlpMbgec1N3Fe/vjcHx9FmX0sjLjMGpSWNTN5GXFYONHmMDt5KX
EwNvH+X3HbwfOAZ6zRenZ5GXH4MnKVetDpBXEINJP4eePERekaqfg/MDj/H+
4RhMXBBXc4q8khhkuptlnyOvPAYJBd+TL5JXEYMBQ5emX+X9xjF4UfrubjHn
Lwbazs0G3ef8xeD3HJFVGedPlYfo0x5POX9CdO/ZPuwlXV9diOGvq/pVch6F
mKf1suoj3b6NEJsdN5V85nwK0XnwyU1fydMSwujV54hGzqsQi1c+Hv2HPG0h
+j9z+t2c95MLsU1+43Qr2j/eU4gYzwnTNGm/uL4QtVnmJp1ov3l/Ib6k67zv
RvvLDYRImnzbtgd5Q4SI33JrVW/yDIV4r9P9ZT/yTITwLPvy2YD3r6suzzH7
PZQ8SyHW/C5vbUyelRBm/+nj/zxbIfaOfx8xkjwI0fbpyF025DkJccrLdQjI
cxXCeathvDN5HkIYWMoPufN+eSFa3IzxG0OenxD2aiar/MkLFCLtdJ53CHkh
QoxYMNc9gjyBED/dQxyF5EUKMdXE1lpGnlAI817mWmPJkwjh8jFk93jeny/E
yucXtBPIixWi582wvdPJixNiQqeC47PJmyhEavOaZvPJSxDCL/vtuMXkTRPi
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
IEa/O7rpD8hrVPXvvfveMvJ+ibF4e+u7j3n+SZCfNeDpM55/EgzpeL35S55/
EiT1eqD5huefBO2ulXd7x/NPgrDdguYfef5J0C/6+adqnn8SnExQPvrM808C
x7njntXx/JOgz6FxL7/x/JOgr9dey0aefxI0sxZO+MXzT4JNRbuX/+X5J0Hp
GpuLzek8ySEqr/0EIw06j9JQgqWuc9Pb0PmTJhKMuBur3p7Pr5Rgvut7Pz5v
2FIC4eG1p7qQZyVBj156fbqrLv/n3HxbCXC36XQP1eVm/5l/Eixq5bu3N3lO
Eiy5Ery2H3muEkTNsttoQJ6HBK//3ts8lDxvCY790tpqRJ6fBD96/NpqRl6g
BP53D5+yJC9EgkS1tvetyRNIYNjSRN+evEgJskfftHQiT6iq37m6yZU8iQQ+
gouLPfl8TgmMyuUXx5AXK0H976affuTFSdDfJ8kiiLyJEnzw/ToulLwECWy7
z4wLJ2+aBIOTjpZFkZcoQcHGeWtF5M2WYLnts3ky8pJV9UabWseSt0CCCLOE
0jjyUiSouPjYZiJ5SyW42un76QTyUiX4trpv7+nkrZZg9XKT5JnkpUmQmjrg
5RzyNkgwr/cfzOPzRyU4cvPc9oXkZUhw2FZPZwl5mRJ83/ZFsJy8XRJYboiQ
rSQvS/V4fJ60bA15+yRYIZ+fu468HAna7PfM2EjeYQnKHOeP38znnf7rX8va
DPJOSBBddHLidvLyJbh9bp/lDvLOSlA9cZ32LvIKJCg69frbbvIuSXC/YuOD
LPKKJHgx2ORWNnnXVY+/euaL/eQVS9BzkfRLDnl3JXAuTL+VS16JBHctd106
TF6pKu8jdmw7Sl65qp+DNBKPkfdUgtyQ+wEnyKuQ4JamhuEp8l5LMNG4qfdp
Pm9WgmnHGlzOkvdBgsxDZmfOk1ctQWjubuNC8moluNZpzK5L5NWr8mhtqF1E
XoNqvvy4FMjn8TdK8FD/xf4b5P1SzaND6u+KyVOTQnudXes75KlLEXQuZPo9
8jSkqB5x/28JeW2k+P1w945S8jSl2Jga2aGcPC0pImu+DntCXhcpEnpcNXpG
nrYU8x6/0H7B5+mq/J9JZi/J6ynFljEK89fk6UvRZ+sBc/68gf5SmHm6674j
z0CK1Puef97z/JNiaVLeq4/kGUqRN3hWRTV5JlK8GHdqXw3PP1X9a6eE1fL8
k6JdXLZGHc8/KQaE296u5/knhUPwgEPfeP6p7t+MdVO/8/yTouWQqTaNPP+k
yEnY1uMnzz8pUg6aNP7i+SeFy8PUXX94/knRcfBGczU6nzlQCtnG/pea0fnO
IVJUPPw2Tp3OcxZIcbv/gqYWP2j+SVGc6bNT4wfNPymun39m3Jo8iRTjS213
teHzp6XYOWrGr7bkxUqxxijDRpO8OFU9+/YfbE/eRCksCpcHdCQvQYqoW/sv
aZE3TYrKA1/GdCYvUQrntKAvXcibLcXUVIt13chLluKjLEG9O3kLpIj7fmM5
f/5EihQHL6dX6JK3VArD8X8s9MhLlWLGwMYlPclbLUXvhJYNvchLk2JbVvfZ
fcjbIEW29gC9vny+thRexsjsR16GFPKNp0MHkJcpxdrjOR0MyNslRf5ph06D
ycuSwqDrRsOh5O2T4uehD8MNycuR4t2crUZG5B2WYuXVo0Ym5OVJobxV3tWM
vBOqekpOdLEgL1+KU0q7YZbknZXCZtimjqPIK5CixKznYyvyLkmh0dR5tw15
RarH7+Ls+NHkXZdCvVhgaU9esRQLB2qaOpB3V+Xf9nV2Iq9E1f/vWwfw+fKl
qn4cDWvhRl65FJOP7fjlTt5TVT57+H31JK9Cld+qOS3GkPdaitC3fYb78nnl
qvoOadj6k/dB9fxdHi4JJK9aiqNuWruCyauVInhNx+uh5NVL8c1I+lBAXoMU
Wnd1XkaQ1yiF71azkijyfklh57CrIYY8NRkW5AjNxOSpy3AsobBWQp6GDL/H
b87l8+fbyJB7Sj1QQZ6mDN+kbqmx5GnJMG/b7wPjyOsiQ1P8tV/x5GnLkDbh
hfdEPo9dhuRROscnk9dThgq/DT2nkqcvwyOf1LHTyesvw92C4c35814MZHh6
vvjIbPKGyHD2/RZhEnmGMrR9/PTbPPJMZBg7qvjMQj7/XQYz2dvkxeRZyvDG
eKrhMvKsZDj5oPJzKnm2MsTcXPxrFXmQwdeiUj+NPCeZ6u/hAOcN5LnK0HXp
+KR08jxkqJ9f/DGDPG8Z2lufi88kz0+GVYMyP+/i+SeD0s/ffi/PPxne3Zs6
dT/PPxkCBumuPcjzTwbzhlsHD/P8kwHGOi/zeP7J0MPu07CTPP9kOL7OceVp
nn8y6HTYff4czz8ZplVlPCzg+SdDpO/V05d4/qkeX7f5J4t4/sngNUdv7HWe
fzL0PZysXszzT4aWk8PH3eb5J8OcX7Pv3+X5J4PLjvejSnj+yZA9/9uJhzz/
ZHium+79iOefDI6+M14+5vkng8XMtKnPeP7JcKK4Q8ELnn+q26/e8OUlzz8Z
CuJ/Bbzh+SdDz9qDeZU8/2RoUBzo8oHnnwwOJ86FV/H8Uz0/3n5e8onnnwyx
qQdvf+b5p8rf3bU/v/D8k+Fw7v6OX3n+qeo9MbB/A88/Vf6HtbD8wfNPhnGX
d6xu4vknQ0hAv2W/eP6p+j2yw4I/PP9kKDkmm6VGn9dUpMqn5pCE5vT5Ttdl
UE8KG9uikeafDCtW/J6h0UjzT4Y6w9aLW9PnQ5Wo+hU3bXZb8kpl2DTHb6km
eeWq58PZ9XM6kPdUhid1fgIt8ipU33+T2rMzea9VefIy6NiVvEpV/kfr6WqT
90GVl/vT++mQVy1D1BjbYT3Iq5VhxsOCKj3y6lX9G9Vidi/yGmSw9fhe35u8
Rhmiq2eP0yfvlwydFhTc6EuemhwT/SY49CdPXY6wPkl3BpCnIUdGwdspBuS1
kWNw5/u6g8nTlGPMpeSsIeRpyXHG01Z9GHld5NiZpGtiSJ62HDOElc7DydOV
43DMQQcj8nrKkf9hhoExefpy/JAG1huT11+OxYfqLpiQZyCH1uuQVFPyhsjx
fOz1xWbkGcrxcv+6zebkmcix4/Hk9Rb8+V9y+FxsvXoEeZZyDJx2YbIleVZy
OK++FjeSPFs5jqj1mDuKPMhhfm5flhV5Tirf+c1ta/Jc5ZjbIXK0LXkeqvr7
TXw8mjxvObpHr4yxJ89Pjgeao9/w55MFylF1Tt3fkbwQOeYs8K52Ik8gR691
fRa7kBcpR2GLzDpX8oRyNFt+KsqdPInq/pjce+HBn2cmh976WSIv8mLlOPb+
5Ctv8uLkUJq/melD3kQ5Hg31d/AjL0GOa9m2rQLImybH/DdZxYHkJcqxckdF
djB5s1XegIotoeQly5G58+1ZAXkL5FA7NdY6krwUOdynft8eTd5SVd60SluI
yEuVY8ISp2QJeatV/XKx7CwnL02OAaHNpyrJ2yBHrmtQzVj+vDc5DizsNzee
vAw5TjW2bZhAXqYc1te6h0wmb5fq+TFvW/EU8rLkGDI0wXE6efvkmDXpwdtE
8nLkUPRL2z6bvMNyXOixIiyJvDw5sg5e1JpP3glVHowsri0kL1+O8pqXcxeT
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
vTTr6wl6CSp0/n57XhK9RBVSZxdcPEcvSa7HxjpmF+kly/X+rdXsdHopKrwK
HbH/Gr00Fd6eml51k166Cje9nD1y6GWoIGl/fXyfXqYKtUkmyKOXpYJTybsD
T+nlqDDxjnihkN49FT6fmXn8Jb1c+TwN/HtjCb08eT2dTKaX0ctX4Z29+Yxy
egUqHPe7HPSFXpG83g+rDlXTe6XC0CVWz37QK1Eh//PKTkaG/3mlKgj3bN3N
DP/zPqrQ40Pe5vqG/3kVKkSduHeykeF/XqUKF5WRL38x/M+rViG31qZLC3o1
KpRPF4Ja0zNQ47NZ6oN29IzVkG4v/tOGnpkad6uXnO5Mr54aFgOX/dqdnrk8
frssoBc9CzX6Xcg1s6fXVA1d8t3oAfQs1Vj7SOk8hF4rNRb6Oxc70bNSy/V8
PHU0vfZq/G6WnuhMz1oN78yGP13odVRjw40at6n0bNW4Zvb3NTd63dQ4H/+i
0Wx6dmqMcnw8fw69PmoUujy46E3PXg3l0PuWKnoOaoxIqd6so+eoxskprc0X
0IMa35Rx0mJ6Tmrsjkm8uozeSDUOzUtrsYLeGDWaJrotXU3PWY2dWuHmOnou
ahj1a1A3lN5kNZpH2/XaQs9Vjev95gRE0HNTY9fl8A876c1SY2PL5FV76Xmo
kVr+oOUBel5qLNmVm3OEnrcax2c/nxNPT6FGQvAks5P01HK9eqrEJHqCGukp
LTLP0fNV4+y7fr0v0vNTY/hk153p9Pzl9d5r8uEavWVqtOqwd34WvSA1duSH
lufQC1ZjcnRLnwf0QtRY1zPA4TG9dWpcHppd7zm9DXK/tDmRUUQvTN6vGflb
39ALV8Og67gFZfQi1Fj+var7J3qRakxq+a6qkl6UGo3PtH7wnV60Go8ar75s
YMT8U0Ph/tslUyPmn9z/T9/m1Ddi/qnRMs/wfGMj5p8adTckb25mxPxTo7uJ
+/xW9BLVaNG554S29JLk/bWP/c2aXrK8/kN3CjvRS1HjUkT1tG700tSwz3J/
bkcvXY3nIVWL+tHLUGOwy7QfDvQy1di3OUg3mF6WXK/Jzz8No5ejxpnKfJdR
9O6psaXvqV3j6OWqca48/euf9PLk8+NrNm8KvXw1DjZ7sHM6vQL5vC7xOTaL
XpEaKxzKj3jQeyXv99D8zLn0StSYN/DCQx96pWq0HrUsTU3voxrhL4dGCPQq
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
utOrJ6Lil4iAv+g1ENG7uf1kT3rmInzP59t70Wskor9O+30uPQsRwYfmPPOm
10SESaRrjg+9piK6Dyu7pKTXTETo7OwYNT1LER2mGfpp6bUUgfA1/QV6rUQU
bjevL9FrLWLb+zc3felZiRi5pUncQnptRaTYfXZfRK+9CPv01Y396f0m4vzo
X3KW0LMWYdouSVxGz0bEweZTOwTQ6yhi1/e3hYH0OotQa7rvW0HPVh6vtPII
ptdVhM+Q9x9X0esmorVf+ZwQej1EmI/QXV1Dz06EVU5Z9Vp6vUTsG/2l7d/0
+ogI8G9iuZ5eXxGbkmvNN9CzF3HicMjnDfT6i0jY8uLJRnoOInLPBRWG0hso
YtHH4Oub6DmKKA/sHB1Gb7CI8EYHF22mBxFLD1dP2EJvqIhpwurh4fScRNwP
P91lK73hIgZHen7aSm+kiMnft1VuozdaRJMRwrsIemNEfLof0XAHvXFyP7X6
MSuSnrM8v9UReTvpTRBhFFkyNYqei1z/DQmJu+lNFFFcbN9kL73JIkafWqaN
pjdFhKeLV8o+eq4ixkw0rx9Db7oIx3Ph3gfouYmYMDkt8SC9mSKy4683Pkxv
loibvmnrjtCbLaJ0cc/cWHoeIj6O8ut1jJ6niMNbFMvj6HmJmH2zXWY8vbny
eo0imx2n5y3i7cOrLgn0fOT1rTi6/AQ9hYiy4mlHT9JTiVg2K+9lIj21iOoL
fYecpqeV199v9LokeoKILl9bXDlDT5TPt/2RD2fp+Ypo1LnptHP0Foh44TTk
1nl6fnJ/3e/odIHeYhHfWmSuT6XnL+JW7573L9JbKuJuPzerS/SWyfvda9Tc
y/QCRFyINg5Npxckrydm3Zkr9FbI539A4Z2r9IJFFIQ2eppBb5WcX03eNbtO
L0RE1YmdgzLprZXz0a6Z9w1660Ss2Tkt9Ca99SJKaucmZdHbIGJ/2fjsW/RC
5Xp62t64TS9MRPNZ705n09ssn7/v27fk0AuX81Ww0t2ht1Ve3/5Lbe/SixCx
OrJp6V16O0T8NfjDy3v0IkXs8N/9/D69XXLeXXQ7/4BelIh1n8LSc+ntEdFx
bvWeh/SiRSiNByx5RG+f/DxJ6zk3j16MiEsr2w15TO+AiIyufWoe0zsk97/q
x7Un9I6IeJW6PzyfXqyIe6bjXZ7SOybvp80D82f04uTnlc3AzGf0/pHz+G2c
33N6CXJ/T6y1LqB3QsT1sjmXC+glimhz48nEQnqn5O8/N6CwkF6SCNsppzxf
0DsrIu685YsX9JJFDLeLnFxE77xcj7NDkoropcj54Dj6exG9VBHvNdOWFtNL
k59/6//8Xkzvkohmu+yWvqSXLuKo5ny9V/SuyPkcG7/kFb0M+fl7asy3V/Su
i7C8edv/Nb1MESe1VXXe0LspYm9w3Yg39LJEXLWotS6hd1tEUXR4Wgm9HBFR
y0vs3tK7I9fLxW/LW3r3RNREl1e8pXdfxIcFM6e+o5cr4vVLoyPv6D0SsXX1
rm/v6OWJ+Dzt9/Gl9J6IqPWI3ltKL1+EyvmsQRm9ZyIGrW4aWEavQH4eG526
XEavUES349Ffy+gViYgtDu72nl6x/PmD7p7v6b0SYXPxzoH39N7I670cYPqB
XokI96n+0z7Qeyein43p2Q/0SuX6diqs95HeexGnwv6Z+ZHeRzkfNHf2fKRX
Lj8PJr8p/EivQkTQng19yul9FhHp8rdfOb1K+Xn94Jfr5fSqRCwY16HzJ3rV
IpYHbfD/RO+7iGMOb258olcj4vGSflYV9H6KeDNqgaaCnoEEty0T31bQM5Rg
/E/L+Z/pGUvIdhz04DM9Ewm5gyY4faFnJsHp9aX9X+jVlRC5z8aokl49CdPj
fugq6TWQUN5jTGklPXMJDpOMF32l10jCmcIDhlX0LCTsqD6+s4peEwmNMtoP
q6bXVILK68uFanrNJPzV8pTDN3qWEg48y0v/Rq+lhPn9X4//Tq+VhI+fcz5/
p9dawohvRwNq6FlJeH9IXfcHvbYSQqS9wT/otZcQ8eFO4Q96v0lYkRXY6yc9
awkDfh8w9yc9GwlNWyxZ+5NeRwnX71uf/0mvs4S5B6+U/aRnK8Fj2ArjWnpd
JbxRHupUS6+bhM5GH3rU0ushofddX89aenYStD3WrK6l10vC095bY/VeHwkb
s28n6L2+EixK1Rl6z17ChCG3q/RefwmGy65YGdTl/U/CF83k3v8b/3v/k/e7
zp65/xv/e/+TEHD7ecT/xv/e/yScv9oy83/j//cg98PP0lK9N1TC7mEeRob0
nCS8mOZXz5DecAlbTfr8/9//vf9JyMrc08KQ3mgJFwJmWhjSGyOh9VGhVD+/
cRKOVPY/p5+fs4R2g71V+vlNkHB63D4r/fxcJIStcMjX12+i3N+V+bv09Zss
wTr0kUJfvymyV5D/h75+rhL2rtz7Vb+/0yV8n645o99fNwk2Y0NX6/tlptxf
23966vtlloSX2Qea6vtltoSk9ht26vvPQ+7/RTd76vvPU+6HOW2u1tDzkvBq
4mUffT/PlWD6d9KvNfS8JfT9s/Lxd3o+EiyVJhv150Mh7986TTP9+VBJ8Nv5
btc3emoJK49+HKI/b1q5vwIGfaqmJ0i4e7TL2mp6ooSM//0H0PR8JYzp6Xiq
it4CCb57ujtW0fOTcDFw3t2v9BZLcBkTOOMrPX8J3/qa1+rzZakEn9ol2/T5
skzC/knZbSrpBcjn9bHXKX1eBUn4dWqB4xd6KyRM2ZZeqM+/YAmzFM+26vNv
lQSp5LnDZ3ohsh9sWabP07VyP/w1I1qfp+vk/l29dkQFvfUSvKZlvNXn8wZ5
vyb13fOJXqjc/3sndvpEL0zCV0VwQjm9zfJ+Hst0KKcXLqGTh036R3pbJbj+
MbyD/nkUIZ/XNd6+H+jtkNC9LPXue3qREsZfHIP39HbJ52WKcUoZvSh5vq+P
ttY/f/dI6PNshqaUXrSEeVc7X9Q/z/dJGLqtWZN39GLk/snuLurvBwck3LCZ
kq6/bxyS8Hr9yV76+8YROU9q22x5Qy9Wwp3PV6z095djEnJW+EW+phcnYVH+
SJvX9P6R0LybzT79fShBwmMrc6NX9E7Iebe5/lT9/SpRzrffuiQV0zslYVS3
+b8X00uSYN/rYkIRvbNyP/7e1bGIXrKE4nFxyS/onZefH+ed/nhBL0Xez5Zv
c/T3yVS5Xk12Ly6klyYhtHaS4//G/wcY+L5z
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 180], 0.005555555555555556]], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          GrayLevel[0.5]], 
         LineBox[CompressedData["
1:eJw91FlIlFEUB/DRcC3GDBfKUeeb+WYflfLBzIV/EaIUlopmloGTGjaZFZUZ
Ki6gUgPlRuQ8BGWEomE+lFu4jq2SIGguFIUVGbk137iN2ih85w+Xy4F7f5dz
Hi6jy4nPsBcIBLG2tbUfTDItu6f5YCin1OS7lIy6h1vxwYr3Ds/dtlqwHRF6
p1594izJyNyOCNNtI8yErR76uBURumq8Q7ttdfB2fJH5tlb6zMJ7vsh6p++v
tPCeHw43XuXyyfNDOy61XibPD4/ZgUEdef5oyitRnSLPHzs9mseOkSeGW5au
9QidF8Op+87vEPLFqC47ExZE98WwVo72yek9MXpC3Qv9yGMQ9zdE70Ueg/OT
hgoheQzG3Wr3OZDHQFFkebDO8R6DqYlGq5XjPQkuNAs7Vznek6B3dTyc43hP
gsLj0V1mjvck6MnKjzSTJ8HN+fSARfKk+LXZ37ZAnhR92q/tc+RJsVCuPrdI
nhQ/6vW3LORJcaL1m3WNPBaiGkGGHfXLoryz6JAD9cui5f4LqzP1yyIxZW3I
hebHInd/mNGV5ifDm5SIYCF5Miw5bRR5kCfDDcfqk3vJk8Gt1dokIk8Gn2tR
8Qx5ckzUJRiU5MmxMhxjF0CeHBWJLRvB5MnBVLGVoeTJEZifGg/yFEio1nFR
5ClQbLzXFUueArosQ1oSeQpI7bsbzpKnACuJcUsnTwnNmMH/InlK9ApdvK6Q
p8TRl6X918lTYj48OzWPPCWejkROF5CnQtH77OQS8lQ40KbvKCNPhdLTzgEG
8lQQzhoaqshTIWKwJ8pInhozgU+m6slT4+5mRUELeWrMvWYnO8hTI8PTfb2f
PDU6K5/PfCBPg/LvuzpGyNMgcGxUP0meBrKAL/4/ydPAlF9lnCVPg/qy4T9m
8rR4lGsWr5Knxb/VuGj7Jd7TYmrAO96V/ictgkzTkXuWeE8L7+ViR5GtHrwt
z9Z/1tJ/9h+nHR2o
          "]], 
         LineBox[CompressedData["
1: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
N+NW59F/Wvzacb48j/7TYt7iT5HX6D8tQmtmn7hG/2lRMXS+2XX6T4u7P4fO
vE7/aXGzNt5fp/+0eLa7S+gN+k8L8+ADZ2/Qf1r0Cqvc/Sb9p8WjArPlN+k/
LdK6PC2/Sf9p8en3fHk+/afFjz3/cvPpPy18rqwaeIv+02L57ukHb9F/WtSx
/dK5gP7TIv5zzKYC+k8LQ9HHtrfpPy3udxu0+Tb9J/X5zqkd79/ur8WFlQdW
36H/pPdz+9rgLv0n9dOvfO5d+k+LgjO7/t2l/7ToUmQ27h79pwV+tHt9j/7T
YkTPtyH36T8tXq5Znnuf/tMibrCJfSH9J/UhCz1aSP9pMfTcYqsH9J8WZYGz
Dj+g/7S4aNK730P6TwvrYZv2P6T/tHg+Je+/R/SfFjtCMvc8ov+0cHsb2PEx
/adF7ZxDGx7Tf1p4V9xq9oT+k+ZNz1j8hP7T4mud4GpP6T8tVnQ9OvUp/aeF
w7e7P5/Sf1p0X3N4/DP6T4srvz1+PqP/tLg0Y/2k5/SfFne8d1U8p/+0WDUr
fsoL+k8L38RKFS/oPy1KnH0mFtF/Wuw/7POziP6Tjo8T36e8pP+02DTMpeor
+k+L9GvKpFf0nxab1w+u/Zr+0+KVVdH81/SfFjVygmq9of+0CMDMpDf0nxbG
K8OrvaX/tJgZXWP2W/pP4nnUyMrv6D8t9j1LnPGO/tNiyeEeVd/Tf1pYDUud
9Z7+08KyZ1nlD/SfFqb/fiV8oP+k19fYY1JM/0m8jOo/rZj+02K1YkJFMf2n
RenfKRM+0n9ahM/p+OMj/adFbk/D+BL6T4sZ34b9KKH/tFjr1GBiKf2nRStP
79+l9J8OU7+6TC+j/3TYoftZ6RP9p8MJa9c5n+g/HaY0qlb/M/2nwwfv/smf
6T8durZq0ekL/aeDdmvGvi/0nw4dsp4O+kr/6bDz2/mcr/SfDjUa1gr9Rv/p
4Lyk8PU3+k+HySf7T/xO/+ng9aRxvR/0nw6Ve6Sl/KD/dAi+UmxRTv/pYDnU
Nbuc/tMhxX2O/0/6T4fb16Y8/kn/6TCzcw/DL/pPh5N1osp/0X86JMxpMr2C
/tNhb/TJKr/pP2m+V5MX/ab/pPnfnzb9Q//psOZw6ZY/9J8O89Gk+1/6T4dH
WWX7/9J/OrTf5zPwH/2nw722D0/9o/90GPWqo6OJeL6GTIe0uepsE/H8DaUO
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
OPdj+kAl/WfAzWZ/NynpPyOS8j2qqeg/IwrdlEYV/WfErlWe+Sr6z4haF4Js
1PSfEd8mmKSo6T8jbmxOraGh/4z4PEk1SkP/GfFo/KcHGvrPiLIFHZ219J8R
Nl8rdmnpPyOOFU9uoKP/jNAd2Bavo/+M6Bhx7r6O/jPij/s3Bz39Z8Saolvb
9fSfEcG7p9Ux0H9GNHbMGG6g/4yYFXEs30D/GbEqx62/kf4zom1p0jIj/WfE
7uoTS430nxEXHcy8h9J/Rshdlu8cSv8ZMRSnqgyj/4yY9rWpYhj9Z4TsZvuz
w+g/I1Zvb9tmOP1nRM33NycOp/+MKKkdenc4/WeEa2GuxQj6z4gZNwsXj6D/
jGjWe+6bEfSfET32ODiNpP+MGDn+4PqR9J8R6540/D6S/pPeX+biP4r+M+JF
Q8tdo+g/I7asLq80mv4zomnF2ejR9J/E05VRmaPpPyMmRB1pGE//GZGxqEgf
T/8ZYUzLPxdP/xnxSTe0xRj6z4gjxx8PHUP/GdGhlk32GPrPiKVvXFqMpf8k
ftt3M46l/6Tt+Xvz9Fj6zwgTa2WjcfSfEQ8LH6vH0X/SfM7+p/73vFAjaszI
bDqe/jNC3/z70PH0n9SfWa2L4+k/Iy6U/mszgf6T+G93ZuwE+s+IAZdd8ibQ
f0Z4zt3XcSL9J/H+6fnEifSfEZ1Sf9ycSP8ZMf9oSbdJ9J8RapecGZPoPyM+
3tMVTqL/jLAPeN53Mv1nhGJD7VmT6T8jrsl+3Z5M/xmR+fdEpyn0n8T/XJ/4
KfSfxKvu5oUp9J8Rm9/bmE6l/4zYOm6ycSr9Z0SvauvPTqX/jNAeXtN0Gv1n
RO8bGt00+s+I5rfrnZpG/0nb+3pu/en0nxGT/r+e7jsu5zX+47jZMTrOMY5x
jj0PEQ7HOsbbnsfeex3j+G4znIwU2WRFIlnJqrSUFKEkI0kpZIUoMlvyu36/
3+N6/+lx3/fz+72v7+d6Xfrr/iF92gr2T1x/TKWgFeyf2G+5tcuvZP8UdCte
cupK9k9B8smooJXsn4LgJ6NsV7F/CvIGRE1bxf4p+K9YqeBV7J+CNYtqVVjN
/in4dsJ21mr2T8G96NsRq9k/BaGTlapO7J8CZ/+n85zYPwUNf24T6cT+Kdjh
OLnyGvZPwd8pk2evYf8UTOnfJnwN+6dg53+vKjizf+L1VeZ0Z/ZPQau3CYHO
7J+CAfdsy7qwfwpOHak02YX9UzC+3Xt/F/ZPwV+PT9qsZf8URHr1H7eW/VPQ
dPRF37Xsn4JFi0t/X8v+Kag5osWwdeyfWK+X7Q+tY/8U1Gnb+MM69k9BUGFK
T1f2TzyfDcN2u7J/CvY23/DWlf1T8O64R/f17J8C/xB1z3r2T8GvrVpmrWf/
FHgHh/XYwP4pKNrSb+cG9k/My7bwjA3sn4L1bws6bGT/FOScqLJhI/unoFiT
qmkb2T8Fnbom2G9i/xREzx2zehP7p6BrqauJm9g/BanFQ+02s38Kjg90Wr2Z
/VPwOKld8mb2T0FgibP2W9g/BZXLZTtvYf8UXNnXNHUL+6cg7EbT1lvZPwV/
pmSt3cr+ifkoWvB4K/unYIJDRPtt7J+CWq6xW7exfwqmOyW95O8tn1Swqsqd
LtvZP/G6t7fbdvZPQe7w9pnb2T8FSxqc7+bG/im4ULLFDjf2TzzfVSnP3dg/
cb/ZfdvtYP8ULFu/eN0O9k/BB8e9KTvYPwWXgvya7mT/FOzb4rp0J/unYO14
M3Yn+6dgZdiQarvYPwWl3bP/2cX+KTjS7u/AXeyfgna104rvZv8UzKmzatBu
9k/4t+ru2s3+KeiwdMaT3eyfgu4zvOz2sH9ifaLz5u9h/8Q8uw0J28P+if25
eU0Jd/ZPQcjwkH7u7J+CzMg3m9zZPwWvKuCOO/unolTwyF/2sn8qzj/+YcJe
9k/F6p3hB/ayfypmBc1/tpf9U/Hqdvkm+9g/FY9PHJu7j/1TUbFso5P72D8V
Ng7Hsvaxfyoufinf0oP9U1FnuL3pwf6pKLfsjwAP9k9FpFP1zx7sn4pFjunt
9rN/Kq6dmemwn/1Tsa7U2Ij97J/wPtuV9GT/VAwKnTfAk/1ToSn+Wz3ZPxX+
S/zue7J/KqrZz6lzgP0T339U0awD7J8K+4cepw6wfyp+b/zh0wH2T8X1V3f/
7/fJ/79/Khaf2OHC3ysfqgIr2t46yP6paLEsoJoX+6eiq3/FqV7sn3geHYYc
92L/VNTN3f3Oi/0T/ubIdofYPxVD2tVffoj9UzFm47bIQ+yfimn1xv/gzf6p
6J1aYrA3+6fCIznUzZv9U2GGpiV5s3/i+X3rWv0w+6fi3+iR4w+zfyruvsza
f5j9UxEdPufJYfZPRfnaOxsdYf9UTL/Tfd4R9k9FM/fy546wfyoWJJ4rPML+
qbjQRe91lP1T4e1ZduNR9k/F3NlBCUfZP/F8pi+qfoz9U9Fj7IBJx9g/FeM7
3Th0jP1TUfvgtdfH2D8VbUforY+zfyp8L45bdpz9UxHklH3lOPunon2xFhV9
2D8VvTb6TPZh/1Skpcef9GH/VDSe5l7gw/6pCN68pP8J9k+F0UrZdYL9U7HK
duHTE+yfioBhE+192T8VU3O2LfFl/1RMTDx6yZf9UzHWmv7jSfZPRZXvx0ad
ZP9UhA6Bx0n2T8xzzopnJ9k/FU0GzrI7xf6pGO7jZZ5i/1TMSMoNOsX+iXl0
b114iv1TUan0oO6n2T8VS1xt155m/1QkOWbGnWb/VNzQPlc6w/6p8Bn+ZNwZ
9k/F/b6m1xn2T4Uecvj1GfZPQ92flv1xlv3TgH360rPsn4Ztm2wun2X/NFQf
3s3Wj/3TcK/F7pF+7J8G39QKHn7sn4asKa+e+7F/GpoNPNTCn/3ToPcMX+zP
/mlwOvUl0p/909Bv4+1yAeyfhjFD+o8KYP80dHra0DOA/dMQfLt+RgD7pyHz
bHH7c+yfhrVv180/x/5pcDyrnD/H/on7b15QdI7901DUQukZyP5paLys5NpA
9k/DpYsd4wLZPw3uUcN/CmL/NAxwGzwiiP0T/shXu4PYP+EX+qQGsX8aUrrs
qB3M/mnYUabm9GD2T8PUOzgazP6J97v2ywxm/zTEP4hsHsL+aVj0dYYWwv5p
WP6hin8I+6ehdNr7TyHsn4Y+03PbhbJ/GhL/aL4klP3TEBRVEBrK/mlo16N7
fij7p2HZ2Pp/nWf/NJzOG/nfefZPQ18zMOI8+6dhYtuzxcLYPw2fXVO6h7F/
GkreWr4qjP3TMKhnRkQY+6fhl9Iji8LYPw09XSd0DWf/NOz99+yKcPZPw/iQ
/VHh7J+Ytxl6yQvsn4Z5Ecm9L7B/Gi73Tll3gf3TsKF2+bgL7J9YP7ty5SPY
P/F9zg0fFMH+aRjc/ubGCPZPQ9Qj+/gI9k/c34rLthfZP3H9I9mDLrJ/Yn4a
ft94kf3TUMU4En+R/dNwJnHlj5Hsn4aET9sGRbJ/Gg5bKesj2T8N++cHxUay
fxpGOzqUiWL/NLz0rt83iv0T8/bZzzmK/dMwcorD5Sj2T3x+lUOxS+yfhmn5
/p0vsX8appdd5XCJ/RPzV8s18BL7p2FEYtz7S+yfuL9+X+wus38aDgyfOOsy
+yd64DH8wGX2T+zHo62TL7N/GlYPHlopmv3TMGnAmEHR7J+GZJccl2j2T8fI
sbGR0eyfjp3H1xVGs386kjxS211h/3Tk11eNK+yfjoN3u/hcYf909Fr/9ckV
9k/Hg9H9alxl/3T43F499Cr7p8Pf5tjaq+yfjo0eMy9cZf90rDwdnnOV/dPh
Evy90TX2T8fgg8snXGP/dHSv+nzrNfZPx9xuW65cY/902J1xzLvG/umYkOvf
PIb909HklzrTYtg/HUfm3N4Rw/7piLxcKTaG/dPF3y/4FsP+6fj8ukKrWPZP
eEsaTo9l/8T9TdV3xrJ/OprtKx4Ty/7pSEtYkR/L/uko+0tm8+vsnw7fTnmT
rrN/OgJODtt8nf3T0any7ojr7J+Od9FOWdfZPx0jSk+uGcf+6XBY4zQgjv3T
8alMR4c49k9H6Jo9R+PYPx1rkXE3jv3Tcbhf/eI32D8xTz6D7G+wfzoStX8m
3GD/dEw5oqy7wf7p6GLnHXSD/dOxfXuT5/RcdLTo1qlSPPunw63iX4hn/8T6
H1qvxrN/Yp7OxuyNZ/90lO77+Vo8+6fjvv2Zz/TcxfWWjmlwk/3TsaNd9tCb
7J8Oz9n3/rvJ/un4a7LviZvsn45nuxKSbrJ/OoJ3Dixxi/0T83sqze4W+6ej
SouGI2+xf2L+hk1cfov90/F1Q70jt9g/HfeyPG/QCxfzO8X8SC9SrOdU9xq3
2T8d35ekd7nN/ulo82vg9Nvsn47Jsekut9k/HU9KzTxxm/3Tcf5RSjy9u+L+
p/bIoZck1mvY3Mp32D8dM02nP++wf2I9Fjcbe4f90xFbMGnZHfZPx9Rf3+y/
w/7pGDJiXiS91zpenXn0lN5bHcunLrJJYP/EfLd2b5bA/ulwXlB1cAL7p2Pc
4Wwjgf3T0bFTfbcE9k/0wK5/IL1iBkpdzb/P9xc3kOMXX0C/pIGZuwtr35Wf
L2UgpkVgj7vso4FtP3+ddVd6ZQwcS43acJe9NODQcsXZu9Irb2BPavQ9erYG
PLMK8+lVMLBDb1I3kT01sHper96J0qtoQH0z4t9E9tXAiLxRWxKlV8XA59+C
AhLZWwPdqpZNplfdQEHy+QJ6NQwsP/ixzj3p/WZgum1Ar3vssYH61+7MuSe9
2uL19c823mOfDeSZy/zuSa+egdTa7kn0Goj1e1S1gF5DA3V++rVuEvttYMXP
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
W27i3KwGP32QnqOJl8fPN/kgvZUm4vMH4YP0VpmY9evssR+k5yRe/6us8UF6
a8T9FyvmSs/FhF+Coxe9dWL/38sNpedq4kUFLYHeBvF9nB9l0ttoYr7b/RIf
pbfZxC+JGTU+Sm+riUGNV7T6KL1tJnzCDvb5KD03E/pvERM/Sm+HeL/rSpPe
LnH9mQ3W0ttjosHC6p703E14dy4bSG+fiVGvKsbR8xDzXlZ5Ss/TRMAOJZfe
QRNba8yt8El6XiYi2t9t+El63iaaR17r9El6h8X79XtDPknvqHj+gUP/+SS9
4yZSG8cspecjnte261vo+Zp40Cf2ML2TJroPjA6ld1rcv8+Am/TOmvBaGP+U
np/Yn+mpX+gFmEiquqjcZ+mdM/E1x7b2Z+kFmfBIbdn6s/RCTMStHdLrs/RC
TXRwLhj9WXphYn6L2sylF24iJG7dUnoRYj8G7dtEL9JE8H++B+lFmVjRKCSA
3mUTtcJbX6MXLc6zLjEp9K6K8+Vo3Ft6MSaiSt74Ti9W7O9aHSt/kV6c8Bp5
N/4ivRsmytcp1+mL9G6K/Xrg4d9fpHdb9Hr7lKlfpHfHhEsX3aJ3V8xHg+Vr
6CWaONvXZRe9JBN3F9Y+Ti/ZxMxvAaH0UsTnn/WJo5dqYp7d/TR6aWK+E+9m
03tk4qSvb/Gv0ks3sX3SlUpfpffERLc4tcFX6T0zcSmhctuv0ntuYvWS4F5f
pZdh4t6Ea6PovTJxO8tvNr3X4vxaaedA740Ju4oVN9B7a6LqdWcPetmi57Vy
T9F7b+L4zbwIejkmFv6Rd4veR/H8jZlP6H0ysbHPlA/0vpj49dmVkrnSyxX/
P7Df80uu9PJMJHfKb5wrvQITu2zGd8iVXqGJYruC++dKr8jE6axKE+gVszCt
eaBKr7iFWpVHraRX0sLwCs7b6ZWy8CXG/zA9Gwu3Y40gemUs2Ho1j6FX1sKk
4BEP6JW34Pj1xVt6thaWDXr2nV4FC09nPKqUJ72fLfy4oFfjPOlVtJAz55dO
edKrbKHyDY9BedKrYqFqpfpT8qRX1cJoVLLoVbdgM6SYM70aFrZWubqH3m8W
XD6c8aVX0xJ/D+yOoFfbQnjYz3fo1bWwpe/pp/TqWajX++FHeg0sbLdrXSpf
eg0ttL9StUq+9BpbiOk3u2G+9H630KFeUNt86TW14DWtWa986dlZ6ONUdiS9
5haUARVm0LO3UMp79Hx6rSxUq9baiV5rC91KlXOj18bCwLwyh+i1Fet7zvKj
187C74MDouh1sPCuv8sdeh0tlIl8k07vLwsDMprk0OtsoYX79OIF0usq5idt
X8UC6cHCzmuz6xVIr7uFk/rVVgXS62nB9U1wtwLp9bLQYFjnwfT6WPCsunsS
vX4WXlWuodDrb2GzfsmB3kALd4t9d6E3SMxDmxlu9AZbCFCuHqA31ELJATtO
0hsm9keLaaH0Roh5PrTnKr2RFv6teesuvdHi/hu6p9Mba+Ftt+lZ9MZZeJi2
M5/eBDH/79qUKZTeRLHeBZurFEpvsoWolsfqFEpvqoUSH5vaFUpvmoUfPvq2
K5TeDAuX5+/pQW+mhfP/vhtMb5aYv/izE+jNEc+vg80cenPFPCo15tObZ8Hp
s50jPcVCsm2V9fQ0C0lrZ+2iZ4j1aPXUi54p9mOXmFP05lv4sPd+CL0FFqZP
ybhMb5GFcS5TbtFbYuFFXfUBPQcL+34YmkFvmbi+ci2H3nILmZPuFtJztOB7
tH+Zb9JbKeZl/cjK36S3ykJX97Z1vknPyYL+3tHum/TWiPt5P6n9N+m5WDjY
7lhPeussNMl7N4SeqwW/pfET6G2w0NLpxGx6Gy1Mvpkzn95mC03X5DrS22qh
ZkKRK71tFmqHldpJz81CxR7lDtLbYaHtwls+9HZZeOTfNIDeHvH9emeH03O3
sPr3Wtfo7bNgPy7oDj0PC6rt0lR6nhYWvUh4Tu+gmGdHu2x6XqIvqU5f6Xlb
iF7fp3iR9A5byJrvWa5IekctjOoUV6VIesfF+nbfVLtIej6i50c3Ny2Snq+F
sUMbtaV3UuyfAY270Tst5sktvD+9sxa8/f8bQc9PzFeLxIn0AizMLbFzFr1z
Yp5aRxr0giws/DNyGb0QC4E1Il3ohVoImTNqG70wsX89M/fRCxfzf2rkMXoR
FtJqNQ2gF2lh/ZyEi//77/8B5YcBZg==
          "]]}}}, {{}, {}}}}, {
    PlotRange -> All, AxesOrigin -> {0, 99.2}, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 99.6862169312169}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 300.}, {99.6862169312169, 99.86666666666667}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Price Per Share\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"TWAP\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"AC\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                    "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8223482472147427`*^9, {3.8223483723512583`*^9, 3.822348393393024*^9}, 
   3.822360207347094*^9},
 CellLabel->
  "Out[470]=",ExpressionUUID->"746f5529-c7bc-4347-8cc6-5912e1a7c075"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1035},
WindowMargins->{{Automatic, -292}, {800, Automatic}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification:>2. Inherited,
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 3, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"332880e4-a42e-441d-9399-ab1455e1b9aa"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 184, 4, 89, "Subsubsection",ExpressionUUID->"d1878e84-1f9f-4289-ada4-aa99c4a85415",
 InitializationCell->True],
Cell[767, 28, 2664, 59, 675, "Input",ExpressionUUID->"fd7716b8-5c23-4640-8cfd-572050ebcce8"],
Cell[3434, 89, 437, 12, 142, "Input",ExpressionUUID->"97808107-cdbd-4352-ab49-14b8f2752cd6"],
Cell[3874, 103, 790, 19, 139, "Input",ExpressionUUID->"ceda9a39-29d5-4b7c-98af-650f0eae9f12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4701, 127, 156, 3, 89, "Subsubsection",ExpressionUUID->"32508f59-119e-469b-adff-333fe6dd1182"],
Cell[4860, 132, 1365, 35, 107, "Input",ExpressionUUID->"3f0ba9b6-2caf-4dac-853c-5ae08eda1007"],
Cell[6228, 169, 199, 3, 69, "Text",ExpressionUUID->"56417d18-eba0-4cef-af2d-006ade546ae7"],
Cell[CellGroupData[{
Cell[6452, 176, 1305, 37, 65, "Input",ExpressionUUID->"979e686c-6c05-43f4-9e3d-7d0f20fb8af1"],
Cell[7760, 215, 1609, 46, 137, "Output",ExpressionUUID->"9bc5e295-14e8-4765-ac97-f237a713d73e"]
}, Open  ]],
Cell[9384, 264, 249, 7, 114, "Text",ExpressionUUID->"748c1dd5-d389-4656-8e8e-aaa481cbf136"],
Cell[CellGroupData[{
Cell[9658, 275, 639, 20, 142, "Input",ExpressionUUID->"e3aa40e8-79ed-43b8-8469-366e6fd4bd23"],
Cell[10300, 297, 317, 8, 89, "Output",ExpressionUUID->"32e77796-ea0f-47a0-bea4-9db5422c6cc3"]
}, Open  ]],
Cell[10632, 308, 11114, 247, 1347, "Input",ExpressionUUID->"438f861a-c921-44ed-be7f-94aaf83c5df7"],
Cell[21749, 557, 344, 7, 59, "Input",ExpressionUUID->"b4473fb8-4dee-49c4-aa57-08caf7489f3a"],
Cell[22096, 566, 307, 7, 81, "Input",ExpressionUUID->"e2627f31-d7bc-49cd-bb49-b830955973ac"],
Cell[22406, 575, 411, 10, 81, "Input",ExpressionUUID->"83a3eaad-ac36-464c-ad11-713da908f434"],
Cell[22820, 587, 1355, 36, 287, "Input",ExpressionUUID->"9420a940-54a0-4836-b05b-a65d8456f99a"],
Cell[CellGroupData[{
Cell[24200, 627, 211, 4, 81, "Input",ExpressionUUID->"e021e762-2503-4344-960e-fbf1aed8e17d"],
Cell[24414, 633, 177, 3, 89, "Output",ExpressionUUID->"f1738d36-b2e3-487f-bf7d-f1ba51c18b36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24628, 641, 491, 12, 81, "Input",ExpressionUUID->"279ec1f4-759b-4720-bb90-c240bb8e15c6"],
Cell[25122, 655, 543, 11, 89, "Output",ExpressionUUID->"2719c383-00aa-4e8f-b048-c0133d92a2e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25702, 671, 2080, 48, 287, "Input",ExpressionUUID->"aff3eb78-6f9a-49cf-b91e-0eb1525d5e7f"],
Cell[27785, 721, 31251, 605, 809, "Output",ExpressionUUID->"8952c5cb-cb84-40d2-bbd6-ebde8e7ff9ba"]
}, Open  ]],
Cell[59051, 1329, 539, 16, 120, "Text",ExpressionUUID->"f12cc775-208a-47e6-9eb4-cbde07981e39"],
Cell[59593, 1347, 1542, 41, 307, "Input",ExpressionUUID->"bb41c775-69c8-4c05-9726-e002d4eff871"],
Cell[61138, 1390, 389, 9, 81, "Input",ExpressionUUID->"555e3d15-bbc6-4951-8217-e76a0df58e80"],
Cell[CellGroupData[{
Cell[61552, 1403, 317, 6, 81, "Input",ExpressionUUID->"c4e68dfa-4956-4474-952e-23bbf73960cc"],
Cell[61872, 1411, 9353, 241, 238, "Output",ExpressionUUID->"ebacdf3b-307f-4ed4-9840-6eec01967edc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71274, 1658, 169, 3, 89, "Subsubsection",ExpressionUUID->"b14127a1-d411-459c-864d-3a3f10a116c7"],
Cell[CellGroupData[{
Cell[71468, 1665, 203, 4, 81, "Input",ExpressionUUID->"557512a1-5972-44b6-a3e9-7da7885bbc37"],
Cell[71674, 1671, 177, 3, 89, "Output",ExpressionUUID->"fb750543-f2f1-41f8-8393-b4ed32a57c4c"]
}, Open  ]],
Cell[71866, 1677, 130, 3, 59, "Input",ExpressionUUID->"372a46e6-7829-4ffc-8755-051e7bc5007a"],
Cell[71999, 1682, 762, 20, 81, "Input",ExpressionUUID->"0544e6af-1570-43e2-a0f3-adafa2cd66e2"],
Cell[CellGroupData[{
Cell[72786, 1706, 436, 10, 81, "Input",ExpressionUUID->"22fbc741-2552-4396-9ece-885353dd027f"],
Cell[73225, 1718, 18057, 352, 142, "Output",ExpressionUUID->"cbc81aa6-b249-43da-822a-09262677b49c"]
}, Open  ]],
Cell[91297, 2073, 314, 8, 81, "Input",ExpressionUUID->"1e7057e5-a83d-49e8-a8e9-11e94ffb0a07"],
Cell[CellGroupData[{
Cell[91636, 2085, 826, 23, 123, "Input",ExpressionUUID->"e9d507e6-4b67-4a4d-bcf4-979c1183c9dd"],
Cell[92465, 2110, 156251, 2606, 427, "Output",ExpressionUUID->"49e1668b-1fb9-46a9-82d4-7e84cc6eb1e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248753, 4721, 681, 16, 205, "Input",ExpressionUUID->"1a85790c-9cb6-4123-88af-f5babcdcc796"],
Cell[249437, 4739, 17928, 351, 142, "Output",ExpressionUUID->"5f159645-9aa9-4ae7-9a66-8ff71589ab1d"]
}, Open  ]],
Cell[267380, 5093, 382, 9, 81, "Input",ExpressionUUID->"e35a10fe-1a1b-4c2d-8da0-d179bb4b04a0"],
Cell[CellGroupData[{
Cell[267787, 5106, 316, 7, 81, "Input",ExpressionUUID->"6fa8b43f-e4e9-4396-8554-34a9ca5e3977"],
Cell[268106, 5115, 200, 3, 89, "Output",ExpressionUUID->"8d2bf870-35e4-48b1-b012-ea86ff91afc9"]
}, Open  ]],
Cell[268321, 5121, 358, 9, 81, "Input",ExpressionUUID->"c4783f27-bcaa-460a-b1b8-3db95670a7d0"],
Cell[CellGroupData[{
Cell[268704, 5134, 233, 5, 81, "Input",ExpressionUUID->"d802d905-e83b-4b42-b31c-2e38d5e9399e"],
Cell[268940, 5141, 207, 4, 89, "Output",ExpressionUUID->"6c5f1fc5-f460-450e-b26d-0af3f3256ea9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269184, 5150, 8325, 200, 1499, "Input",ExpressionUUID->"734aa5b5-b965-41e1-bba6-41d111771cc6"],
Cell[277512, 5352, 31120, 603, 475, "Output",ExpressionUUID->"14c08a6c-2d08-4673-bc48-a8dd02109d65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308669, 5960, 1565, 39, 205, "Input",ExpressionUUID->"08e38cf2-893c-485c-a8ba-acfd3c2f2fe0"],
Cell[310237, 6001, 756, 14, 74, "Message",ExpressionUUID->"1cd83aa8-f92f-48c0-ba9d-e03cd8adedef"],
Cell[310996, 6017, 756, 14, 74, "Message",ExpressionUUID->"1d393634-8ef1-4311-8290-e1d08c537c71"],
Cell[311755, 6033, 755, 14, 74, "Message",ExpressionUUID->"63a34e82-bc1f-4758-bda1-2bfb3b213fb3"],
Cell[312513, 6049, 838, 15, 45, "Message",ExpressionUUID->"ec4a010a-5d49-49ca-9425-107db604e8de"],
Cell[313354, 6066, 791, 15, 45, "Message",ExpressionUUID->"1aec331d-de90-48c9-9e54-a5ebee2782c1"],
Cell[314148, 6083, 791, 15, 45, "Message",ExpressionUUID->"b3f8d880-f3b0-466c-94dc-81e5435aa06d"],
Cell[314942, 6100, 791, 15, 45, "Message",ExpressionUUID->"a5aca0b5-c3aa-407d-90cb-9839ddf8a839"],
Cell[315736, 6117, 840, 15, 45, "Message",ExpressionUUID->"78e326a8-a3d2-4c66-a5f0-0ac46f8d50b9"],
Cell[316579, 6134, 59782, 1047, 485, "Output",ExpressionUUID->"9366cb65-a6b9-4eff-bc26-41de3c42f740"]
}, Open  ]],
Cell[376376, 7184, 418, 11, 81, "Input",ExpressionUUID->"97020029-4405-463f-93d1-485260157110"],
Cell[376797, 7197, 259, 6, 81, "Input",ExpressionUUID->"7b81ada9-97f7-4e78-819a-9926496a5a76"],
Cell[377059, 7205, 314, 8, 81, "Input",ExpressionUUID->"5895321e-85d9-4249-957e-44888c9729c4"],
Cell[377376, 7215, 442, 12, 81, "Input",ExpressionUUID->"6ceaef57-328a-49e0-9f38-85b641bb0f57"],
Cell[CellGroupData[{
Cell[377843, 7231, 328, 8, 81, "Input",ExpressionUUID->"5882b561-0c97-457d-ab69-09f8544ebad2"],
Cell[378174, 7241, 9443, 243, 189, "Output",ExpressionUUID->"2047cf26-64ba-48f6-a1b3-3f8e3b6a2f77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387654, 7489, 1768, 43, 246, "Input",ExpressionUUID->"ca081e06-44ec-4ddb-8acc-5632fe78395e"],
Cell[389425, 7534, 448, 11, 74, "Message",ExpressionUUID->"b0fdd07a-3733-4926-b592-2b5dee69a17d"],
Cell[389876, 7547, 448, 11, 74, "Message",ExpressionUUID->"6ed4612d-5e19-4202-9d29-ce78e98b9ba6"],
Cell[390327, 7560, 450, 11, 74, "Message",ExpressionUUID->"db19d237-43a3-4856-a4e7-4b8e031c6c85"],
Cell[390780, 7573, 528, 12, 45, "Message",ExpressionUUID->"7b91cac7-62d3-4db2-bfd3-25f063123133"],
Cell[391311, 7587, 485, 12, 45, "Message",ExpressionUUID->"38e53abc-dcc6-464b-b051-617bc9933f46"],
Cell[391799, 7601, 483, 12, 45, "Message",ExpressionUUID->"daf002db-1faf-4da2-8743-fa57a779bd9f"],
Cell[392285, 7615, 485, 12, 45, "Message",ExpressionUUID->"c7c5f1b4-53ad-4eab-8b94-e56b0b0b89e5"],
Cell[392773, 7629, 532, 12, 45, "Message",ExpressionUUID->"190e4c53-cf32-44d7-9304-6aecf58d3eb3"],
Cell[393308, 7643, 98832, 1718, 496, "Output",ExpressionUUID->"746f5529-c7bc-4347-8cc6-5912e1a7c075"]
}, Open  ]]
}, Open  ]]
}
]
*)

